String.prototype.trim = function(){
    return this && this.replace(/(^\s*)|(\s*$)/g, "");
}

const BoxParams = {
    //格子内线参数
    axisX: 40,
    axisY: 40,
    slantDown: -2,
    slantUp: 80,
    rectangleX: 20,
    rectangleY: 10,//15
    rectangleWidth: 58,//54
    rectangleHeight: 68,//54
    squareXY: 20,
    squareWidth: 60,
    svgMap: function(){
        return {
            '1': `M0 18 L80 18|M0 34 L80 34|M0 1 L80 1`,
            '11': `M-2 ${BoxParams.axisX} L80 ${BoxParams.axisX}|M${BoxParams.axisY} -2 L${BoxParams.axisY} 80|M1 1 l78 0 l0 78 l-78 0 Z`,
            '21': `M-2 ${BoxParams.axisX} L80 ${BoxParams.axisX}|M${BoxParams.axisY} -2 L${BoxParams.axisY} 80|M${BoxParams.slantDown} -2 L80 80|M-2 ${BoxParams.slantUp} L80 0|M1 1 l78 0 l0 78 l-78 0 Z`,
            '31': `M-2 ${BoxParams.axisX} L80 ${BoxParams.axisX}|M${BoxParams.axisY} -2 L${BoxParams.axisY} 80|M${BoxParams.slantDown} -2 L80 80|M-2 ${BoxParams.slantUp} L80 0|M ${BoxParams.rectangleX},${BoxParams.rectangleY} H ${BoxParams.rectangleWidth} V ${BoxParams.rectangleHeight} H ${BoxParams.rectangleX} Z|M 0.1767767,0.6767767 H 78.176777 V 78.676777 H 0.1767767 Z`,
            '41': `||M ${BoxParams.rectangleX},${BoxParams.rectangleY} H ${BoxParams.rectangleWidth} V ${BoxParams.rectangleHeight} H ${BoxParams.rectangleX} Z|M1 1 l78 0 l0 78 l-78 0 Z`,
            '51': `M-2 ${BoxParams.axisX} L80 ${BoxParams.axisX}|M${BoxParams.axisY} -2 L${BoxParams.axisY} 80|M ${BoxParams.rectangleX},${BoxParams.rectangleY} H ${BoxParams.rectangleWidth} V ${BoxParams.rectangleHeight} H ${BoxParams.rectangleX} Z|M 0,0 H 78 V 78 H 0 Z`,
            '61': `||M${BoxParams.slantDown} -2 L80 80|M-2 ${BoxParams.slantUp} L80 0|M1 1 l78 0 l0 78 l-78 0 Z`,
            '71': `||M${BoxParams.slantDown} -2 L80 80|M-2 ${BoxParams.slantUp} L80 0|M ${BoxParams.rectangleX},${BoxParams.rectangleY} H ${BoxParams.rectangleWidth} V ${BoxParams.rectangleHeight} H ${BoxParams.rectangleX} Z|M 0.5,1 h 78 v 78 h -78 Z`,
            '81': `||M${BoxParams.squareXY} ${BoxParams.squareXY} H ${BoxParams.squareWidth} V ${BoxParams.squareWidth} H ${BoxParams.squareXY} Z|M1 1 l78 0 l0 78 l-78 0 Z`,//M 25.19678,15.753633 H 54.803219 V 64.246367 H 25.19678 Z|M1 1 l78 0 l0 78 l-78 0 Z
            '91': `||M1 1 l78 0 l0 78 l-78 0 Z`,
            '101':`|M${BoxParams.axisY} -2 L${BoxParams.axisY} 80|M1 1 l78 0 l0 78 l-78 0 Z`,
            '111':`M-2 ${BoxParams.axisX} L80 ${BoxParams.axisX}||M1 1 l78 0 l0 78 l-78 0 Z`,
            '131':`M-2 ${BoxParams.axisX} L80 ${BoxParams.axisX}||M${BoxParams.axisY} -2 L${BoxParams.axisY} 80|M${BoxParams.squareXY} ${BoxParams.squareXY} H ${BoxParams.squareWidth} V ${BoxParams.squareWidth} H ${BoxParams.squareXY} Z|M1 1 l78 0 l0 78 l-78 0 Z`,
            '0': ''
        };
    }
}

const Util = {
    preview: parent.document.getElementById("preview").contentWindow || window,
    template: '<div class="page" style=""><div class="page-header"><div class="page-header-left"></div><div class="page-header-right">姓名：<span class="page-header-right-content"></span>&nbsp;&nbsp;&nbsp;班级：<span class="page-header-right-content"></span>&nbsp;&nbsp;&nbsp;学号：<span class="page-header-right-content"></span> </div></div><div class="content"></div><div class="page-footer"><div class="page-footer-left"></div><div class="page-footer-right"><span class="curr-page">第1页</span> <span class="total-page"> / 共1页 </span></div></div></div>',
    baseUrl: 'https://i.wxlet.cn/images/',
    chineseFonts: [],
    defaultChineseFont: '',
    englishFonts: [
        { id: 'english', title: '衡水体', img: 'hengshuiti.png' },
        { id: '', title: '系统字体', img: '' }
    ],
    defaultEnglishFont: 'english',
    defaultMathFont: 'ztds-shuzi',
    mathFonts: [
        { id: 'ztds-shuzi', title: '手写体数字', img: 'ztds-shuzi.png' },
        { id: '', title: '系统字体', img: '' }
    ],
    systemFonts: [],
    systemPrinters: [],
    defaultPrinter: {name: '', value: ''},
    waitingDownloads: [],
    systemMediaSizes: [
        {name:'A3竖向',value: 'ISOA3',width: 297000,height: 420000},
        {name:'A3横向',value: 'ISOA3Rotated',width: 420000,height: 297000},
        {name:'A3扩展',value: 'ISOA3Extra',width: 322000,height: 445000},
        {name:'A4竖向',value: 'ISOA4',width: 210000,height: 297000},
        {name:'A4横向',value: 'ISOA4Rotated',width: 297000,height: 210000},
        {name:'A4扩展',value: 'ISOA4Extra',width: 235500,height: 322300},
        {name:'A5竖向',value: 'ISOA5',width: 148000,height: 210000},
        {name:'A5横向',value: 'ISOA5Rotated',width: 210000,height: 148000},
        {name:'A5扩展',value: 'ISOA5Extra',width: 174000,height: 235000},
        {name:'A6竖向',value: 'ISOA6',width: 105000,height: 148000},
        {name:'A6横向',value: 'ISOA6Rotated',width: 148000,height: 105000},
        {name:'B4竖向',value: 'ISOB4',width: 250000,height: 353000},
        {name:'B4横向',value: 'ISOB4Rotated',width: 250000,height: 353000},
        {name:'B4信封',value: 'ISOB4Envelope',width: 250000,height: 353000},
        {name:'B5竖向',value: 'ISOB5',width: 176000,height: 250000},
        {name:'B5横向',value: 'ISOB5Rotated',width: 250000,height: 176000},
        {name:'B5信封',value: 'ISOB5Envelope',width: 176000,height: 250000},
        {name:'B5扩展',value: 'ISOB5Extra',width: 201000,height: 276000},
        {name:'A0',value: 'ISOA0',width: 841000,height: 1189000},
        {name:'A1',value: 'ISOA1',width: 594000,height: 841000},
        {name:'A2',value: 'ISOA2',width: 420000,height: 594000},
        {name:'A7',value: 'ISOA7',width: 74000,height: 105000},
        {name:'A8',value: 'ISOA8',width: 52000,height: 74000},
        {name:'A9',value: 'ISOA9',width: 37000,height: 52000},
        {name:'A10',value: 'ISOA10',width: 26000,height: 37000},
        {name:'B0',value: 'ISOB0',width: 1000000,height: 1414000},
        {name:'B1',value: 'ISOB1',width: 707000,height: 1000000},
        {name:'B10',value: 'ISOB10',width: 31000,height: 44000},
        {name:'B2',value: 'ISOB2',width: 500000,height: 707000},
        {name:'B3',value: 'ISOB3',width: 353000,height: 500000},
        {name:'B7',value: 'ISOB7',width: 88000,height: 125000},
        {name:'B8',value: 'ISOB8',width: 62000,height: 88000},
        {name:'B9',value: 'ISOB9',width: 44000,height: 62000},
        {name:'C0',value: 'ISOC0',width: 917000,height: 1297000},
        {name:'C1',value: 'ISOC1',width: 648000,height: 917000},
        {name:'C10',value: 'ISOC10',width: 28000,height: 40000},
        {name:'C2',value: 'ISOC2',width: 458000,height: 648000},
        {name:'C3',value: 'ISOC3',width: 324000,height: 458000},
        {name:'C3信封',value: 'ISOC3Envelope',width: 324000,height: 458000},
        {name:'C4',value: 'ISOC4',width: 229000,height: 324000},
        {name:'C4信封',value: 'ISOC4Envelope',width: 229000,height: 324000},
        {name:'C5',value: 'ISOC5',width: 162000,height: 229000},
        {name:'C5信封',value: 'ISOC5Envelope',width: 162000,height: 229000},
        {name:'C6',value: 'ISOC6',width: 114000,height: 162000},
        {name:'C6信封',value: 'ISOC6Envelope',width: 114000,height: 162000},
        {name:'C6C5信封',value: 'ISOC6C5Envelope',width: 114000,height: 229000},
        {name:'C7',value: 'ISOC7',width: 81000,height: 114000},
        {name:'C8',value: 'ISOC8',width: 57000,height: 81000},
        {name:'C9',value: 'ISOC9',width: 40000,height: 57000},
    ],
    defaultPinyinFirstFont: 'ztds-pinyin-bishun',
    defaultPinyinFont: 'pinyin',
    chinesePinyinFonts: [
        { id: 'ztds-pinyin-bishun', title: '拼音笔顺字体', img: 'ztds-pinyin-bishun.png' },
        { id: 'pinyin', title: '拼音字体', img: 'hengshuiti.png' },
        { id: '', title: '系统字体', img: '' }
    ],
    updateSvgMap: function(store){
        BoxParams.axisX = store.axisX;
        BoxParams.axisY = store.axisY;
        BoxParams.slantUp = store.slantUp;
        BoxParams.slantDown = store.slantDown;
        BoxParams.rectangleX = store.rectangleX;
        BoxParams.rectangleY = store.rectangleY;
        BoxParams.rectangleWidth = store.rectangleWidth;
        BoxParams.rectangleHeight = store.rectangleHeight;
        BoxParams.squareXY = store.squareXY;
        BoxParams.squareWidth = store.squareWidth;
        Util.svgMap = BoxParams.svgMap();
        if(store.svgMap){
            store.svgMap = BoxParams.svgMap();
        }
    },
    svgMap: BoxParams.svgMap(),
    svgMaker: function (key, dasharray, dashwidth, dashcolor, dashopacity, svgMap) {
        var svg = `data:image/svg+xml,<svg width='80px' height='80px' version='1.1' xmlns='http://www.w3.org/2000/svg'>`;
        svgMap = svgMap ? svgMap : this.svgMap;
        var val = svgMap[key];
        if (val) {
            var paths = val.split('|');
            for (var i = 0; i < paths.length - 1; i++) {
                if(paths[i]){
                    svg += `<path d='${paths[i]}' stroke-dasharray='${dasharray}' stroke-width='${dashwidth}' stroke='${this.hexToRgb(dashcolor)}' stroke-opacity='${dashopacity}%' fill-opacity='0'/>`;
                }
            }
        }
        svg += `</svg>`;
        return `${svg}`;
    },
    pinyinSvg: function(key, params){
        var svg = `data:image/svg+xml,<svg width='80px' height='51px' version='1.1' xmlns='http://www.w3.org/2000/svg'>`;
        var val = this.svgMap[key];
        if (val) {
            var paths = val.split('|');
            for (var i = 0; i < paths.length - 1; i++) {
                if(paths[i]){
                    svg += `<path d='${paths[i]}' stroke-dasharray='${params[i].inlineDashArray.join(',')}' stroke-width='${params[i].inlineSize}' stroke='${this.hexToRgb(params[i].inlineColor)}' stroke-opacity='${params[i].inlineOpacity}%' fill-opacity='0'/>`;
                }
            }
        }
        svg += `</svg>`;
        return `${svg}`;
    },
    boses: [
        { id: '11', title: '', img: 'bg11.svg' },
        { id: '21', title: '', img: 'bg21.svg' },
        { id: '31', title: '', img: 'bg31.svg' },
        { id: '41', title: '', img: 'bg41.svg' },
        { id: '51', title: '', img: 'bg51.svg' },
        { id: '61', title: '', img: 'bg61.svg' },
        { id: '71', title: '', img: 'bg71.svg' },
        { id: '81', title: '', img: 'bg81.svg' },
        { id: '101', title: '', img: 'bg101.svg' },
        { id: '111', title: '', img: 'bg111.svg' },
        { id: '131', title: '', img: 'bg131.svg' },
        { id: '91', title: '', img: 'bg91.svg' }
    ],
    pinyinBoses: [
        { id: '1', title: '', img: 'pyb1.svg' }
    ],
    borderStyles: [
        { id: 'solid', title: '实线', img: 'solid.png' },
        { id: 'dotted', title: '点状', img: 'dotted.png' },
        { id: 'dashed', title: '虚线', img: 'dashed.png' },
        { id: 'double', title: '双实线', img: 'double.png' },
        { id: 'none', title: '无边框', img: 'none.png' }
    ],
    customData: {},
    kongbiPaths: [
        {title:"", id:"0", sample:"", manual:"", paths:"M140 470 q0 40 0 55 q1 23 5 40 q3 17 11 37 q8 18 24 48 q46 88 121 138 q74 50 173 60 q85 10 161 -18 q75 -26 139 -88 q44 -42 72 -95 q27 -53 35 -109 q8 -58 -4 -114 q-13 -57 -48 -107 q-62 -89 -146 -124 q-85 -36 -191 -16 q-52 10 -97.5 37 q-45.5 27 -79.5 68 q-52 61 -70 122 q-19 69 2 142 q19 63 62 110 q40 45 96 68.5 q56 23.5 116 21.5 q62 -2 119 -32 q45 -24 78 -62 q32 -37 48 -82 q16 -45 13 -92 q-4 -49 -28 -92 q-23 -39 -58 -65 q-35 -26 -77 -37 q-41 -11 -83 -7 q-43 4 -80 23 q-39 21 -67 56 q-68 87 -33 175 q15 38 42 65 q25 26 58 38 q32 12 67 9 q35 -2 67 -20 q33 -18 59 -50 q24 -29 29 -60 q5 -33 -11 -66 q-8 -20 -23 -35.5 q-15 -15.5 -34.5 -24.5 q-19.5 -9 -41.5 -10 q-36 -3 -65 16 q-26 16 -46 50 q-8 14 -7.5 30.5 q0.5 16.5 8.5 31 q8 14.5 23 23.5 q14 8 31 9 q17 1 31 -6 q16 -7 23 -19 q3 -5 3 -9.5 q0 -4.5 -3 -9.5 q-1 -2 -6 -2 q-6 -1 -10 0 q-2 1 -7 4 q-2 3 -3 3 q-2 2 -3 2 q-4 0 -12 0 q-14 1 -20 0 q-11 -1 -18 -5 q-21 -12 -2 -45 q10 -17 28 -29 q20 -13 43 -15 q25 -2 47 11 q19 11 30.5 29 q11.5 18 14.5 39.5 q3 21.5 -4 41.5 q-11 26 -30.5 46 q-19.5 20 -45.5 30.5 q-26 10.5 -53.5 10.5 q-27.5 0 -53.5 -11 q-37 -16 -60 -44.5 q-23 -28.5 -28 -63.5 q-5 -37 10 -74 q15 -36 43 -63 q27 -26 61.5 -40.5 q34.5 -14.5 72.5 -15.5 q38 -1 74 13.5 q36 14.5 63.5 42 q27.5 27.5 42.5 63 q15 35.5 14.5 74 q-0.5 38.5 -15.5 74.5 q-31 70 -88 107 q-56 36 -137 40 q-41 2 -82 -14 q-39 -14 -72.5 -42 q-33.5 -28 -56.5 -64 q-23 -38 -31 -80 q-9 -44 1 -88 q14 -58 47 -105 q33 -46 80 -77 q46 -30 100 -41 q55 -12 109 -3 q58 10 107 42 q69 44 103 103 q37 62 35 143 q0 46 -7 80 q-9 40 -28 74 q-28 48 -72 87 q-43 38 -95 61 q-53 24 -109 29 q-58 5 -112 -11 q-108 -30 -173 -98 q-67 -69 -86 -176 q-11 -56 -4 -113 q8 -55 32 -106 q25 -52 65 -92 q15 -15 27 -31 q2 -2 2 -6 q1 -2 1 -7 q0 -5 0 -6 q-10 -1 -20 1 q-12 9 -21 20 q-58 63 -86 126 q-31 71 -25 148 Z"},
        {title:"", id:"1", sample:"", manual:"", paths:"M888 467 q8 -59 -12 -119 q-18 -54 -60 -110 q-22 -31 -50 -57 q-4 -3 -9 -5 q-4 -1 -11 -2 q-7 -1 -10 -2 q2 15 8 28 q7 10 23 28 q9 11 14 16 q35 41 56 91 q21 49 26 103 q5 54 -6 107 q-12 61 -46 114 q-32 50 -81 87 q-47 37 -104 56.5 q-57 19.5 -115 18.5 q-61 -1 -116 -23 q-50 -20 -93 -53 q-45 -35 -76 -79 q-33 -48 -46 -103 q-13 -61 -2 -125 q14 -81 64 -138 q48 -55 124.5 -84.5 q76.5 -29.5 150.5 -17 q74 12.5 138 66.5 q54 44 81 96 q30 58 26 123 q-3 52 -26 98 q-23 45 -63 77 q-39 32 -89 46 q-47 13 -91 10 q-46 -4 -88 -26 q-43 -23 -79 -64 q-27 -31 -39 -71 q-12 -37 -9 -76 q3 -39 21 -73 q18 -35 49 -59 q31 -24 68 -35 q36 -10 73.5 -6 q37.5 4 71.5 21 q34 18 59 49 q24 28 32.5 63.5 q8.5 35.5 -0.5 70.5 q-6 25 -25 48 q-17 21 -42.5 35.5 q-25.5 14.5 -50.5 17.5 q-28 3 -55.5 -4.5 q-27.5 -7.5 -49.5 -25.5 q-22 -18 -36 -43 q-10 -20 -10 -43 q0 -22 11 -41 q10 -20 29 -33 q23 -16 48 -15 q21 1 41 13 q17 11 30 28 q9 12 11 23 q2 13 -9 20 q-6 5 -16 7 q-6 1 -20 2 q-7 1 -10 1 q-2 0 -4 -1 q-1 -1 -3 -3 q-5 -4 -7 -4 q-11 -1 -22 0 q0 2 0.5 8 q0.5 6 0.5 8 q1 5 3 7 q8 11 23 17 q14 5 30 4.5 q16 -0.5 29 -7.5 q14 -8 23 -20.5 q9 -12.5 11 -28.5 q2 -16 -4 -30 q-6 -18 -21 -34 q-14 -15 -33.5 -25.5 q-19.5 -10.5 -39.5 -13.5 q-21 -4 -39 0 q-30 9 -54 31 q-24 22 -35 50 q-11 30 -4 57 q10 39 36 69 q26 30 62 45 q38 16 78 13.5 q40 -2.5 75 -23.5 q34 -20 55 -53 q23 -33 27 -73 q4 -39 -9 -77 q-12 -36 -38 -66.5 q-26 -30.5 -61 -49.5 q-36 -20 -77 -24 q-69 -8 -123 16 q-55 24 -93 81 q-36 52 -38 109 q-3 56 25 113 q40 77 104 115 q64 37 152 36 q47 0 93 -20 q45 -18 82 -52 q37 -34 60 -76 q24 -44 28 -91 q5 -50 -6 -99 q-12 -47 -38.5 -89.5 q-26.5 -42.5 -64.5 -74.5 q-40 -33 -89 -52 q-95 -37 -182 -21 q-87 16 -162 84 q-71 65 -96 145 q-25 82 0 175 q19 69 60 125 q41 55 98 92 q57 37 123 52 q68 16 138 5 q69 -10 131 -45 q60 -34 104 -86 q45 -54 67 -117 q22 -66 15 -133 Z"},
        {title:"", id:"2", sample:"", manual:"", paths:"M536 646 q-8 -4 -15 -3 q-5 1 -10 6 q-3 2 -7 8 l-1 2 q-3 3 0 6 q3 3 7 4 q5 1 9 0 q3 -2 5 -5 q1 -2 3 -6.5 q2 -4.5 4 -6.5 q2 -3 5 -5 ZM496 523 q1 0 4 -1 q4 -1 5 -3 q3 -2 2 -6 q-2 -7 -9 -11 q-4 -2 -13 -6 l-1 0 q-3 0 -5.5 2.5 q-2.5 2.5 -1.5 4.5 l2 3 q3 8 6 11 q4 5 11 6 ZM857 523 q6 -1 8 -3 q4 -3 2 -8 q-2 -7 -8 -11 q-4 -2 -12 -5 q-2 0 -4 0.5 q-2 0.5 -3 2 q-1 1.5 -1 3.5 q0 2 1 3.5 q1 1.5 3 4.5 q3 6 5 8 q4 4 9 5 ZM529 357 q-2 -4 -4 -5 q-2 -3 -5 -2 q-7 2 -11.5 7 q-4.5 5 -5.5 12 q-1 4 3 6 q2 2 7 3 q7 1 9 -2 q2 -1 3 -7 q0 -4 1 -5 q1 -3 4 -4 l-1 -3 ZM166 359 q-1 -5 -3 -7 q-2 -3 -5 -2 q-7 1 -11.5 6.5 q-4.5 5.5 -4.5 12.5 q1 5 4 7.5 q3 2.5 7 1.5 q5 0 7 -3 q1 -2 2 -7 q1 -4 1 -5 q1 -3 3 -4 ZM155 672 q8 -11 15 -23 q1 -4 -2 -5.5 q-3 -1.5 -7 -0.5 q-7 1 -12 6 q-5 5 -7 12 q-1 4 3 6 q3 3 10 5 ZM277 747 q3 -1 5.5 -3 q2.5 -2 2.5 -6 q0 -4 -4 -8 q-3 -2 -8 -4 q-4 -1 -6.5 1.5 q-2.5 2.5 -2.5 6.5 q0 4 3 7 q2 2 8 5 q2 0 2 1 ZM678 755 q-1 -4 -5.5 -7 q-4.5 -3 -9.5 -2 q-3 0 -5 3 q-2 3 0 6 q4 7 12 10 q4 0 6.5 -2.5 q2.5 -2.5 1.5 -7.5 ZM733 240 q1 -2 5 -3.5 q4 -1.5 5 -2.5 q2 -2 2.5 -5.5 q0.5 -3.5 -1.5 -6.5 q-2 -3 -6 -3 q-5 0 -9 3.5 q-4 3.5 -5 7.5 q0 4 2 6 q2 2 7 4 ZM481 866 q2 5 5.5 7.5 q3.5 2.5 8.5 2.5 q3 0 5 -1.5 q2 -1.5 2 -5.5 q0 -5 -4 -8 q-4 -3 -8 -4 q-4 0 -6.5 2.5 q-2.5 2.5 -2.5 6.5 ZM450 846 q0 5 4 7 q2 2 7 4 q2 0 4 0 q2 0 3.5 -1 q1.5 -1 2 -3 q0.5 -2 0.5 -4 q-1 -8 -14 -10 q-3 -1 -4 1 q-1 1 -2 4 q0 1 -1 2 ZM187 394 q4 0 6.5 -3 q2.5 -3 1.5 -6 q0 -5 -3 -7 q-3 -1 -8 -2 l-3 0 q-3 -1 -5 1 q-1 2 -1 5 q-1 5 2 7 q2 2 7 4 q2 1 3 1 ZM751 808 q0 9 12 13 q4 1 6.5 -2 q2.5 -3 1.5 -6 q0 -4 -3 -7 q-3 -3 -8 -4 q-7 -2 -9 6 ZM201 696 q0 6 4 8 q3 2 9 4 q3 1 6 -1 q3 -2 3 -6 q0 -5 -4 -8 q-4 -2 -9 -4 q-3 -1 -6 1 q-1 1 -2 5 q-1 1 -1 1 ZM207 325 q1 4 3 5 q2 2 6 1 q6 -1 8 -4 q5 -3 5 -8 q-1 -3 -3.5 -5.5 q-2.5 -2.5 -6.5 -1.5 q-5 1 -8.5 4.5 q-3.5 3.5 -3.5 7.5 l0 1 ZM254 419 q4 0 6.5 -2 q2.5 -2 2.5 -5 q0 -5 -4 -7 q-2 -1 -7 -2 l-3 -1 q-3 -1 -5 1 q-2 2 -2 5 q0 5 3 8 q1 1 7 2 q2 1 2 1 ZM805 490 q2 10 13 10 q4 0 6.5 -2.5 q2.5 -2.5 1.5 -6 q-1 -3.5 -4.5 -6 q-3.5 -2.5 -7.5 -3.5 q-9 -1 -9 8 ZM290 283 q0 -4 -3.5 -6 q-3.5 -2 -7.5 0 l0 0 q-5 1 -7 2 q-4 3 -4 7 q0 4 2 6.5 q2 2.5 6 1.5 q5 0 9 -3.5 q4 -3.5 5 -7.5 ZM321 447 q4 0 6.5 -2 q2.5 -2 2.5 -5 q0 -5 -3 -8 q-2 -1 -7 -2 l-3 -1 q-3 -2 -6 0.5 q-3 2.5 -3 6.5 q0 5 3 7 q2 2 8 3 q1 0 2 1 ZM338 579 q-1 -4 -3 -5 q-2 -2 -6 -1 l0 1 q-7 2 -9 4 q-3 3 -2 8 l0 1 q1 4 2 4 q2 2 6 1 l1 -1 q6 -2 8 -3 q4 -3 4 -8 l-1 -1 ZM353 460 q4 1 6.5 -1 q2.5 -2 3.5 -5 q1 -5 -3 -7 q-2 -2 -6.5 -3 q-4.5 -1 -7.5 0 q-4 2 -4 6 q0 4 3 6 q1 1 5 3 q2 1 3 1 ZM688 593 q1 -2 6 -4 q4 -1 5 -2 q2 -2 2 -6 q0 -4 -1.5 -6.5 q-1.5 -2.5 -6.5 -1.5 l0 0 q-6 1 -9 3 q-4 2 -4 7 q-1 4 1.5 6 q2.5 2 6.5 4 ZM671 435 q0 5 3 8 q3 2 8 3 l1 1 q4 1 6.5 -1 q2.5 -2 2.5 -6 q1 -4 -2 -7 q-1 -1 -6 -3 q-3 -1 -4 -2 q-3 -1 -6 1 q-2 2 -3 6 ZM371 801 q4 -1 6 -3 q2 -2 1 -5 q-2 -5 -6 -7.5 q-4 -2.5 -9 -2.5 q-3 0 -4 2 q-2 2 -2 5 q1 5 4 7 q2 2 7 4 q2 0 3 0 ZM371 239 q5 -2 8 -4 q4 -3 4 -7 q1 -4 -1.5 -6.5 q-2.5 -2.5 -5.5 -2.5 q-13 2 -13 11 q-1 4 1 6.5 q2 2.5 6 2.5 l1 0 ZM422 488 q4 0 6.5 -2.5 q2.5 -2.5 2.5 -6.5 q0 -4 -3 -6 q-2 -1 -6 -2 l-3 0 q-4 -1 -7 0.5 q-3 1.5 -3 5.5 q0 4 3 6 q2 1 6 3 q3 1 4 2 ZM436 201 q0 -2 3.5 -3.5 q3.5 -1.5 4.5 -2.5 q2 -2 2 -6 q0 -4 -3 -6 q-3 -2 -6 -1 q-5 1 -8 4 q-4 3 -4 8 q0 8 11 7 ZM839 170 q-1 -4 -3 -6 q-2 -2 -6 -1 l-2 1 q-5 2 -7 3 q-4 3 -4 8 q1 4 3 6.5 q2 2.5 6 0.5 q6 -1 8 -3 q5 -4 5 -9 ZM638 745 q4 2 7 0 q1 -2 2 -6.5 q1 -4.5 -3 -7.5 q-2 -2 -7 -4 l0 0 q-3 -2 -6.5 0 q-3.5 2 -3.5 6 q-1 5 2 8 q3 2 9 4 ZM547 690 q3 0 5.5 -2.5 q2.5 -2.5 2.5 -6.5 q-1 -5 -5 -7 q-3 -2 -9 -3 q-3 -1 -6 1.5 q-3 2.5 -2 6.5 q1 5 5 7 q3 2 9 4 ZM550 394 q3 0 5.5 -3 q2.5 -3 2.5 -6 q-1 -4 -3 -7 q-2 -1 -7 -1 l-2 -1 q-4 -1 -7 1 q-3 2 -3 6 q0 4 3 6 q2 2 7 3 q2 1 4 2 ZM568 324 q2 5 4 6 q2 2 6 1 l0 0 q6 -2 8 -3 q5 -3 5 -8 q0 -4 -3 -6.5 q-3 -2.5 -7 -1.5 q-5 1 -8.5 4 q-3.5 3 -4.5 8 l0 0 ZM579 626 q1 8 9 6 q13 -3 11 -12 q0 -2 -2.5 -3.5 q-2.5 -1.5 -5.5 -1.5 q-12 0 -12 11 ZM781 470 q-5 0 -7 2 q-2 2 -1.5 6 q0.5 4 4.5 6 q2 2 7 3 l0 0 q4 1 6.5 -1.5 q2.5 -2.5 2.5 -5.5 q1 -5 -2 -7 q-2 -1 -6 -2 q-3 0 -4 -1 ZM826 857 q4 -2 6 -3 q2 -3 1 -7 q-1 -4 -4 -6 q-2 -1 -7 -3 l-1 0 q-4 -1 -6.5 1.5 q-2.5 2.5 -1.5 6.5 q0 5 4 7 q2 1 7 3 q2 0 2 1 ZM578 388 q-4 1 -6.5 3 q-2.5 2 -1.5 5 q1 5 5 7.5 q4 2.5 9 2.5 q3 0 5 -2 q2 -2 2 -5 q-1 -5 -5 -8 q-2 -1 -8 -3 q0 0 0 0 ZM577 708 q4 0 6 -1 q2 -2 1.5 -6.5 q-0.5 -4.5 -3.5 -7.5 q-3 -1 -8 -4 l0 0 q-3 -1 -6.5 1 q-3.5 2 -3.5 6 q0 4 3 7 q2 1 7 3 q2 1 3 2 l1 0 ZM170 679 q2 4 5.5 6.5 q3.5 2.5 8.5 3.5 q3 1 6 -1.5 q3 -2.5 2.5 -6.5 q-0.5 -4 -3.5 -6 q-2 -1 -8 -3 l0 0 q-8 -3 -11 7 ZM204 635 q0 -4 -2 -6 q-2 -2 -6 -2 q-6 2 -8 3 q-5 3 -5 8 q0 3 2.5 4.5 q2.5 1.5 5.5 1.5 q6 0 9 -1 q4 -2 4 -8 ZM738 464 q1 5 5 7.5 q4 2.5 9 1.5 q8 -1 7 -6 q-1 -5 -4.5 -8 q-3.5 -3 -8.5 -3 q-4 -1 -6 2 q-1 2 -2 6 ZM613 613 q2 3 4.5 4 q2.5 1 5.5 0 q5 -1 7 -3 q4 -2 4 -6 q0 -4 -2 -6.5 q-2 -2.5 -6 -1.5 q-5 0 -8.5 4 q-3.5 4 -4.5 9 ZM247 727 q3 -1 5 -2.5 q2 -1.5 2 -4.5 q-2 -11 -14 -11 q-3 0 -5 2 q-2 2 -2 5 q1 4 5 7.5 q4 3.5 9 3.5 ZM248 313 q2 -1 4 -3 q4 -2 5 -3 q2 -3 1.5 -7 q-0.5 -4 -3 -5.5 q-2.5 -1.5 -6.5 0 q-4 1.5 -7 4 q-3 2.5 -3.5 6.5 q-0.5 4 2.5 6 q2 2 7 2 ZM789 550 q5 0 8 -1 q4 -2 5 -7 q0 -4 -1.5 -6.5 q-1.5 -2.5 -5.5 -2.5 q-4 0 -7.5 2 q-3.5 2 -5 6 q-1.5 4 0.5 6.5 q2 2.5 6 2.5 ZM723 577 q4 -1 8 -3 q3 -3 3.5 -6.5 q0.5 -3.5 -2 -5.5 q-2.5 -2 -7 -1.5 q-4.5 0.5 -7.5 3.5 q-4 2 -4 6 q-1 7 9 7 ZM287 433 q4 0 7 -2.5 q3 -2.5 2 -5.5 q-2 -5 -6 -7.5 q-4 -2.5 -8 -1.5 q-4 0 -5.5 1.5 q-1.5 1.5 -1.5 4.5 q0 5 3 7 q2 2 7 3 q1 1 2 1 ZM476 170 q-3 -9 -9 -6 l-2 0 q-5 2 -7 4 q-3 3 -2.5 7 q0.5 4 2.5 6 q2 3 6 2 q6 -2 8 -4 q4 -4 4 -9 ZM473 528 q0 -4 -2 -6 q-2 -2 -6 -1 q-6 0 -8 1 q-4 2 -5 7 q0 4 1.5 6.5 q1.5 2.5 5.5 2.5 q5 0 8.5 -2.5 q3.5 -2.5 5.5 -7.5 ZM338 782 q10 1 9.5 -6.5 q-0.5 -7.5 -10.5 -10.5 q-4 -1 -7 0.5 q-3 1.5 -3 5.5 q-1 5 3 8 q2 2 8 3 ZM452 483 q-5 0 -7.5 2.5 q-2.5 2.5 -1.5 5.5 q1 4 5 7 q4 3 9 2 q7 0 7 -6 q-1 -6 -5 -8 q-2 -2 -7 -3 ZM649 433 q4 1 6.5 -1 q2.5 -2 2 -6 q-0.5 -4 -3.5 -7 q-3 -3 -7 -3 q-4 -1 -6.5 1.5 q-2.5 2.5 -2.5 5.5 q0 8 11 10 ZM429 550 q5 -1 7 -2 q4 -3 4 -7 q0 -2 -1 -4 q-1 -2 -2.5 -3 q-1.5 -1 -3.5 -1.5 q-2 -0.5 -4 0.5 q-5 2 -7 4 q-4 3 -3.5 7 q0.5 4 3.5 5 q2 1 7 1 ZM440 832 q-1 -9 -13 -12 q-3 -1 -6 1.5 q-3 2.5 -2 6.5 q0 4 3 7 q3 2 7 3 q4 1 7.5 -0.5 q3.5 -1.5 3.5 -5.5 ZM655 605 q6 -2 8 -4 q4 -2 4 -8 q1 -6 -7 -6 q-7 1 -9 3 q-5 2 -5 8 q0 3 2 5 q2 1 6 2 l1 0 ZM414 207 q-1 -4 -4.5 -5.5 q-3.5 -1.5 -6.5 0.5 q-4 1 -7 4 q-4 3 -3 7 q1 4 4 5 q3 1 7 0 q10 -2 10 -11 ZM406 553 q0 -4 -3 -5 q-2 -1 -7 0 l0 0 q-5 1 -7 2 q-4 2 -4 6 q0 4 2 6.5 q2 2.5 6 1.5 q6 -1 8 -3 q4 -2 5 -8 ZM352 247 q1 -3 -1 -5.5 q-2 -2.5 -5 -2.5 q-5 0 -9 3 q-4 3 -5 8 q-1 3 1 5 q2 2 5 2 q5 0 9 -3 q4 -3 5 -7 ZM390 473 q4 -1 6 -2.5 q2 -1.5 0.5 -5.5 q-1.5 -4 -5 -6.5 q-3.5 -2.5 -7.5 -2.5 q-3 -1 -6 1.5 q-3 2.5 -3 5.5 q1 6 6 8 q2 1 9 2 ZM799 200 q4 -2 6 -4 q2 -3 1 -8 q0 -3 -2 -4.5 q-2 -1.5 -5 -1.5 q-5 0 -8.5 3.5 q-3.5 3.5 -4.5 8.5 q0 3 3 5.5 q3 2.5 8 1.5 l2 -1 ZM671 275 q6 -2 8 -4 q4 -3 4 -8 q0 -3 -3 -5 q-3 -2 -7 -1 q-4 2 -6 4 q-4 3 -4 6 q-1 8 8 8 ZM361 577 q4 0 7 -2.5 q3 -2.5 4 -5.5 q0 -4 -2.5 -6.5 q-2.5 -2.5 -6.5 -1.5 q-4 0 -7 2.5 q-3 2.5 -4 6.5 q-1 4 1.5 6 q2.5 2 7.5 1 ZM700 782 q4 1 7 -1.5 q3 -2.5 2 -6 q-1 -3.5 -4 -6.5 q-3 -3 -7 -3.5 q-4 -0.5 -6.5 1.5 q-2.5 2 -2 6 q0.5 4 3.5 7 q3 3 7 3 ZM402 821 q4 -1 5 -3 q1 -2 1 -7 q-1 -4 -3.5 -6 q-2.5 -2 -7.5 -3 q-4 -1 -6 1.5 q-2 2.5 -1 6.5 q1 9 12 11 ZM607 726 q4 1 6.5 -1.5 q2.5 -2.5 2.5 -5.5 q-1 -4 -4.5 -7 q-3.5 -3 -7.5 -3 q-9 -1 -8 7 q0 4 4 7 q2 1 6 3 q1 0 1 0 ZM309 275 q6 -2 8 -4 q4 -3 3 -9 q0 -3 -2 -4.5 q-2 -1.5 -5 -0.5 q-6 1 -8 3 q-4 4 -3 9 q-1 3 1.5 5 q2.5 2 5.5 1 ZM296 752 q0 5 4 8 q2 2 7 4 l1 0 q3 1 5 -1 q2 -2 2 -5 q0 -6 -4 -9 q-3 -2 -8 -3 q-3 -1 -5 1 q-1 0 -2 3 q0 1 0 2 ZM298 604 q3 -2 4.5 -4 q1.5 -2 1.5 -5 q1 -4 -1.5 -6 q-2.5 -2 -7 -1.5 q-4.5 0.5 -7.5 3 q-3 2.5 -3.5 6.5 q-0.5 4 2.5 6 q3 2 11 1 ZM780 829 q3 4 7.5 6.5 q4.5 2.5 9.5 2.5 q3 -1 4.5 -3.5 q1.5 -2.5 -0.5 -4.5 q-1 -4 -4.5 -7 q-3.5 -3 -7.5 -3 q-3 0 -5 3 q-2 1 -3 6 q0 0 -1 0 ZM493 163 q4 1 8 -1.5 q4 -2.5 6 -6.5 q1 -4 -2.5 -6 q-3.5 -2 -7.5 -1 l-1 0 q-5 1 -7 2 q-3 2 -3 7 q0 3 2 4 q1 1 3 2 q1 0 2 0 ZM631 287 q2 4 4.5 6 q2.5 2 6.5 0 q5 -2 7 -3 q3 -3 2.5 -7.5 q-0.5 -4.5 -2.5 -5.5 q-2 -1 -7 0 q-5 1 -8 3 q-3 3 -3 7 ZM848 857 q-1 0 -2.5 2.5 q-1.5 2.5 -1.5 6.5 q1 4 4.5 6.5 q3.5 2.5 7.5 3.5 q4 0 6.5 -2.5 q2.5 -2.5 1.5 -6.5 q-2 -8 -16 -10 ZM217 625 q1 4 3.5 6 q2.5 2 6.5 0 q5 -1 7 -3 q3 -3 2.5 -7.5 q-0.5 -4.5 -2.5 -5.5 q-2 -1 -7 0 q-10 2 -10 10 ZM610 312 q5 -2 7 -4 q4 -3 4 -7 q0 -2 -2.5 -4.5 q-2.5 -2.5 -4.5 -2.5 q-5 0 -8.5 3.5 q-3.5 3.5 -4.5 9.5 q0 3 2 4 q2 1 6 1 l1 0 ZM228 399 q0 -7 -10 -10 q-4 -1 -7 0 q-2 1 -3 6 q0 8 10 11 q3 1 6.5 -1 q3.5 -2 3.5 -6 ZM747 560 q0 0 2 1.5 q2 1.5 3 1.5 q2 1 5 1 q11 -2 10 -10 q0 -4 -2 -5 q-1 0 -5 0 l-2 0 q-5 0 -8 2 q-3 2 -3 9 ZM537 346 q3 2 7 3 q5 1 9 -2 q4 -3 5 -7 q1 -3 -1 -5.5 q-2 -2.5 -4 -2.5 q-6 0 -9 3 q-4 3 -7 11 ZM176 343 q0 3 2 5 q2 2 5 2 q5 -1 9 -4 q4 -3 4 -7 q1 -8 -9 -7 q-11 3 -11 11 ZM763 219 q12 -2 13 -11 q0 -2 -2.5 -4 q-2.5 -2 -4.5 -2 q-5 -1 -8.5 2 q-3.5 3 -4.5 8 q0 4 2 5.5 q2 1.5 5 1.5 ZM554 644 q11 0 13 -7 q0 -4 -2.5 -7 q-2.5 -3 -5.5 -2 q-4 0 -7.5 2.5 q-3.5 2.5 -5 6.5 q-1.5 4 1 6 q2.5 2 6.5 1 ZM624 414 q1 -6 -3 -8 q-1 -2 -6 -3 l-1 0 q-3 -2 -6.5 0 q-3.5 2 -2.5 6 q-1 4 2 7 q3 1 8 2 q4 1 6.5 0 q2.5 -1 2.5 -4 ZM815 532 q1 3 3.5 5 q2.5 2 5.5 0 l2 -1 q4 -2 6 -3 q3 -3 2 -7 q0 -4 -2 -5 q-2 -1 -7 0 q-5 1 -7.5 3.5 q-2.5 2.5 -2.5 7.5 ZM713 245 q0 -6 -7 -6 q-4 0 -7.5 2.5 q-3.5 2.5 -4 7 q-0.5 4.5 2 6.5 q2.5 2 6.5 1 q4 -1 7 -4 q3 -3 3 -7 ZM705 450 q1 4 4.5 7 q3.5 3 7.5 3 q4 1 6 -1 q2 -2 2 -6 q0 -5 -4 -7 q-2 -2 -7 -2 q-9 -2 -9 6 ZM720 789 q0 5 3 8 q3 2 7 3 l1 0 q4 2 5 1 q3 -1 4 -6 q0 -4 -2 -6 q-1 -2 -5 -3 l-3 -2 q-4 -2 -6.5 -0.5 q-2.5 1.5 -3.5 5.5 ZM261 617 q5 -1 7 -3 q3 -2 2 -6 q0 -4 -2 -6.5 q-2 -2.5 -5 -1.5 q-10 4 -11 10 q0 4 2 6 q2 2 6 1 l1 0 ZM866 154 q-2 -6 -10 -5 l-1 1 q-3 0 -4 1 q-1 1 -1 5 q0 8 9 6 q3 0 5 -2.5 q2 -2.5 2 -5.5 Z"},
        {title:"", id:"3", sample:"", manual:"", paths:"M371 543 q4 -8 3 -15 q-1 -5 -6 -10 q-2 -3 -8 -7 l-2 -1 q-3 -3 -6 0 q-3 3 -4 7 q-1 5 0 9 q2 3 5 5 q2 1 6.5 3 q4.5 2 6.5 4 q3 2 5 5 ZM494 503 q0 1 1 4 q1 4 3 5 q2 3 6 2 q7 -2 11 -9 q2 -4 6 -13 l0 -1 q0 -3 -2.5 -5.5 q-2.5 -2.5 -4.5 -1.5 l-3 2 q-8 3 -11 6 q-5 4 -6 11 ZM494 864 q1 6 3 8 q3 4 8 2 q7 -2 11 -8 q2 -4 5 -12 q0 -2 -0.5 -4 q-0.5 -2 -2 -3 q-1.5 -1 -3.5 -1 q-2 0 -3.5 1 q-1.5 1 -4.5 3 q-6 3 -8 5 q-4 4 -5 9 ZM660 536 q4 -2 5 -4 q3 -2 2 -5 q-2 -7 -7 -11.5 q-5 -4.5 -12 -5.5 q-4 -1 -6 3 q-2 2 -3 7 q-1 7 2 9 q1 2 7 3 q4 0 5 1 q3 1 4 4 l3 -1 ZM658 173 q5 -1 7 -3 q3 -2 2 -5 q-1 -7 -6.5 -11.5 q-5.5 -4.5 -12.5 -4.5 q-5 1 -7.5 4 q-2.5 3 -1.5 7 q0 5 3 7 q2 1 7 2 q4 1 5 1 q3 1 4 3 ZM345 162 q11 8 23 15 q4 1 5.5 -2 q1.5 -3 0.5 -7 q-1 -7 -6 -12 q-5 -5 -12 -7 q-4 -1 -6 3 q-3 3 -5 10 ZM270 284 q1 3 3 5.5 q2 2.5 6 2.5 q4 0 8 -4 q2 -3 4 -8 q1 -4 -1.5 -6.5 q-2.5 -2.5 -6.5 -2.5 q-4 0 -7 3 q-2 2 -5 8 q0 2 -1 2 ZM262 685 q4 -1 7 -5.5 q3 -4.5 2 -9.5 q0 -3 -3 -5 q-3 -2 -6 0 q-7 4 -10 12 q0 4 2.5 6.5 q2.5 2.5 7.5 1.5 ZM777 740 q2 1 3.5 5 q1.5 4 2.5 5 q2 2 5.5 2.5 q3.5 0.5 6.5 -1.5 q3 -2 3 -6 q0 -5 -3.5 -9 q-3.5 -4 -7.5 -5 q-4 0 -6 2 q-2 2 -4 7 ZM151 488 q-5 2 -7.5 5.5 q-2.5 3.5 -2.5 8.5 q0 3 1.5 5 q1.5 2 5.5 2 q5 0 8 -4 q3 -4 4 -8 q0 -4 -2.5 -6.5 q-2.5 -2.5 -6.5 -2.5 ZM171 457 q-5 0 -7 4 q-2 2 -4 7 q0 2 0 4 q0 2 1 3.5 q1 1.5 3 2 q2 0.5 4 0.5 q8 -1 10 -14 q1 -3 -1 -4 q-1 -1 -4 -2 q-1 0 -2 -1 ZM623 194 q0 4 3 6.5 q3 2.5 6 1.5 q5 0 7 -3 q1 -3 2 -8 l0 -3 q1 -3 -1 -5 q-2 -1 -5 -1 q-5 -1 -7 2 q-2 2 -4 7 q-1 2 -1 3 ZM209 758 q-9 0 -13 12 q-1 4 2 6.5 q3 2.5 6 1.5 q4 0 7 -3 q3 -3 4 -8 q2 -7 -6 -9 ZM321 208 q-6 0 -8 4 q-2 3 -4 9 q-1 3 1 6 q2 3 6 3 q5 0 8 -4 q2 -4 4 -9 q1 -3 -1 -6 q-1 -1 -5 -2 q-1 -1 -1 -1 ZM692 214 q-4 1 -5 3 q-2 2 -1 6 q1 6 4 8 q3 5 8 5 q3 -1 5.5 -3.5 q2.5 -2.5 1.5 -6.5 q-1 -5 -4.5 -8.5 q-3.5 -3.5 -7.5 -3.5 l-1 0 ZM598 261 q0 4 2 6.5 q2 2.5 5 2.5 q5 0 7 -4 q1 -2 2 -7 l1 -3 q1 -3 -1 -5 q-2 -2 -5 -2 q-5 0 -8 3 q-1 1 -2 7 q-1 2 -1 2 ZM527 812 q-10 2 -10 13 q0 4 2.5 6.5 q2.5 2.5 6 1.5 q3.5 -1 6 -4.5 q2.5 -3.5 3.5 -7.5 q1 -9 -8 -9 ZM734 297 q4 0 6 -3.5 q2 -3.5 0 -7.5 l0 0 q-1 -5 -2 -7 q-3 -4 -7 -4 q-4 0 -6.5 2 q-2.5 2 -1.5 6 q0 5 3.5 9 q3.5 4 7.5 5 ZM570 328 q0 4 2 6.5 q2 2.5 5 2.5 q5 0 8 -3 q1 -2 2 -7 l1 -3 q2 -3 -0.5 -6 q-2.5 -3 -6.5 -3 q-5 0 -7 3 q-2 2 -3 8 q0 1 -1 2 ZM438 345 q4 -1 5 -3 q2 -2 1 -6 l-1 0 q-2 -7 -4 -9 q-3 -3 -8 -2 l-1 0 q-4 1 -4 2 q-2 2 -1 6 l1 1 q2 6 3 8 q3 4 8 4 l1 -1 ZM557 360 q-1 4 1 6.5 q2 2.5 5 3.5 q5 1 7 -3 q2 -2 3 -6.5 q1 -4.5 0 -7.5 q-2 -4 -6 -4 q-4 0 -6 3 q-1 1 -3 5 q-1 2 -1 3 ZM424 695 q2 1 4 6 q1 4 2 5 q2 2 6 2 q4 0 6.5 -1.5 q2.5 -1.5 1.5 -6.5 l0 0 q-1 -6 -3 -9 q-2 -4 -7 -4 q-4 -1 -6 1.5 q-2 2.5 -4 6.5 ZM582 678 q-5 0 -8 3 q-2 3 -3 8 l-1 1 q-1 4 1 6.5 q2 2.5 6 2.5 q4 1 7 -2 q1 -1 3 -6 q1 -3 2 -4 q1 -3 -1 -6 q-2 -2 -6 -3 ZM216 378 q1 4 3 6 q2 2 5 1 q5 -2 7.5 -6 q2.5 -4 2.5 -9 q0 -3 -2 -4 q-2 -2 -5 -2 q-5 1 -7 4 q-2 2 -4 7 q0 2 0 3 ZM778 378 q2 5 4 8 q3 4 7 4 q4 1 6.5 -1.5 q2.5 -2.5 2.5 -5.5 q-2 -13 -11 -13 q-4 -1 -6.5 1 q-2.5 2 -2.5 6 l0 1 ZM529 429 q0 4 2.5 6.5 q2.5 2.5 6.5 2.5 q4 0 6 -3 q1 -2 2 -6 l0 -3 q1 -4 -0.5 -7 q-1.5 -3 -5.5 -3 q-4 0 -6 3 q-1 2 -3 6 q-1 3 -2 4 ZM816 443 q2 0 3.5 3.5 q1.5 3.5 2.5 4.5 q2 2 6 2 q4 0 6 -3 q2 -3 1 -6 q-1 -5 -4 -8 q-3 -4 -8 -4 q-8 0 -7 11 ZM847 846 q4 -1 6 -3 q2 -2 1 -6 l-1 -2 q-2 -5 -3 -7 q-3 -4 -8 -4 q-4 1 -6.5 3 q-2.5 2 -0.5 6 q1 6 3 8 q4 5 9 5 ZM272 645 q-2 4 0 7 q2 1 6.5 2 q4.5 1 7.5 -3 q2 -2 4 -7 l0 0 q2 -3 0 -6.5 q-2 -3.5 -6 -3.5 q-5 -1 -8 2 q-2 3 -4 9 ZM327 554 q0 3 2.5 5.5 q2.5 2.5 6.5 2.5 q5 -1 7 -5 q2 -3 3 -9 q1 -3 -1.5 -6 q-2.5 -3 -6.5 -2 q-5 1 -7 5 q-2 3 -4 9 ZM623 557 q0 3 3 5.5 q3 2.5 6 2.5 q4 -1 7 -3 q1 -2 1 -7 l1 -2 q1 -4 -1 -7 q-2 -3 -6 -3 q-4 0 -6 3 q-2 2 -3 7 q-1 2 -2 4 ZM693 575 q-5 2 -6 4 q-2 2 -1 6 l0 0 q2 6 3 8 q3 5 8 5 q4 0 6.5 -3 q2.5 -3 1.5 -7 q-1 -5 -4 -8.5 q-3 -3.5 -8 -4.5 l0 0 ZM391 586 q-8 1 -6 9 q3 13 12 11 q2 0 3.5 -2.5 q1.5 -2.5 1.5 -5.5 q0 -12 -11 -12 ZM547 788 q0 -5 -2 -7 q-2 -2 -6 -1.5 q-4 0.5 -6 4.5 q-2 2 -3 7 l0 0 q-1 4 1.5 6.5 q2.5 2.5 5.5 2.5 q5 1 7 -2 q1 -2 2 -6 q0 -3 1 -4 ZM160 833 q2 4 3 6 q3 2 7 1 q4 -1 6 -4 q1 -2 3 -7 l0 -1 q1 -4 -1.5 -6.5 q-2.5 -2.5 -6.5 -1.5 q-5 0 -7 4 q-1 2 -3 7 q0 2 -1 2 ZM629 585 q-1 -4 -3 -6.5 q-2 -2.5 -5 -1.5 q-5 1 -7.5 5 q-2.5 4 -2.5 9 q0 3 2 5 q2 2 5 2 q5 -1 8 -5 q1 -2 3 -8 q0 0 0 0 ZM309 584 q0 4 1 6 q2 2 6.5 1.5 q4.5 -0.5 7.5 -3.5 q1 -3 4 -8 l0 0 q1 -3 -1 -6.5 q-2 -3.5 -6 -3.5 q-4 0 -7 3 q-1 2 -3 7 q-1 2 -2 3 l0 1 ZM338 177 q-4 2 -6.5 5.5 q-2.5 3.5 -3.5 8.5 q-1 3 1.5 6 q2.5 3 6.5 2.5 q4 -0.5 6 -3.5 q1 -2 3 -8 l0 0 q3 -8 -7 -11 ZM382 211 q4 0 6 -2 q2 -2 2 -6 q-2 -6 -3 -8 q-3 -5 -8 -5 q-3 0 -4.5 2.5 q-1.5 2.5 -1.5 5.5 q0 6 1 9 q2 4 8 4 ZM553 745 q-5 1 -7.5 5 q-2.5 4 -1.5 9 q1 8 6 7 q5 -1 8 -4.5 q3 -3.5 3 -8.5 q1 -4 -2 -6 q-2 -1 -6 -2 ZM404 620 q-3 2 -4 4.5 q-1 2.5 0 5.5 q1 5 3 7 q2 4 6 4 q4 0 6.5 -2 q2.5 -2 1.5 -6 q0 -5 -4 -8.5 q-4 -3.5 -9 -4.5 ZM290 254 q1 3 2.5 5 q1.5 2 4.5 2 q11 -2 11 -14 q0 -3 -2 -5 q-2 -2 -5 -2 q-4 1 -7.5 5 q-3.5 4 -3.5 9 ZM704 255 q1 2 3 4 q2 4 3 5 q3 2 7 1.5 q4 -0.5 5.5 -3 q1.5 -2.5 0 -6.5 q-1.5 -4 -4 -7 q-2.5 -3 -6.5 -3.5 q-4 -0.5 -6 2.5 q-2 2 -2 7 ZM467 796 q0 5 1 8 q2 4 7 5 q4 0 6.5 -1.5 q2.5 -1.5 2.5 -5.5 q0 -4 -2 -7.5 q-2 -3.5 -6 -5 q-4 -1.5 -6.5 0.5 q-2.5 2 -2.5 6 ZM440 730 q1 4 3 8 q3 3 6.5 3.5 q3.5 0.5 5.5 -2 q2 -2.5 1.5 -7 q-0.5 -4.5 -3.5 -7.5 q-2 -4 -6 -4 q-7 -1 -7 9 ZM584 294 q0 4 2.5 7 q2.5 3 5.5 2 q5 -2 7.5 -6 q2.5 -4 1.5 -8 q0 -4 -1.5 -5.5 q-1.5 -1.5 -4.5 -1.5 q-5 0 -7 3 q-2 2 -3 7 q-1 1 -1 2 ZM847 483 q9 -3 6 -9 l0 -2 q-2 -5 -4 -7 q-3 -3 -7 -2.5 q-4 0.5 -6 2.5 q-3 2 -2 6 q2 6 4 8 q4 4 9 4 ZM489 480 q4 0 6 -2 q2 -2 1 -6 q0 -6 -1 -8 q-2 -4 -7 -5 q-4 0 -6.5 1.5 q-2.5 1.5 -2.5 5.5 q0 5 2.5 8.5 q2.5 3.5 7.5 5.5 ZM235 345 q-1 10 6.5 9.5 q7.5 -0.5 10.5 -10.5 q1 -4 -0.5 -7 q-1.5 -3 -5.5 -3 q-5 -1 -8 3 q-2 2 -3 8 ZM534 459 q0 -5 -2.5 -7.5 q-2.5 -2.5 -5.5 -1.5 q-4 1 -7 5 q-3 4 -2 9 q0 7 6 7 q6 -1 8 -5 q2 -2 3 -7 ZM584 656 q-1 4 1 6.5 q2 2.5 6 2 q4 -0.5 7 -3.5 q3 -3 3 -7 q1 -4 -1.5 -6.5 q-2.5 -2.5 -5.5 -2.5 q-8 0 -10 11 ZM467 436 q1 5 2 7 q3 4 7 4 q2 0 4 -1 q2 -1 3 -2.5 q1 -1.5 1.5 -3.5 q0.5 -2 -0.5 -4 q-2 -5 -4 -7 q-3 -4 -7 -3.5 q-4 0.5 -5 3.5 q-1 2 -1 7 ZM185 447 q9 -1 12 -13 q1 -3 -1.5 -6 q-2.5 -3 -6.5 -2 q-4 0 -7 3 q-2 3 -3 7 q-1 4 0.5 7.5 q1.5 3.5 5.5 3.5 ZM412 662 q2 6 4 8 q2 4 8 4 q6 1 6 -7 q-1 -7 -3 -9 q-2 -5 -8 -5 q-3 0 -5 2 q-1 2 -2 6 l0 1 ZM810 421 q4 -1 5.5 -4.5 q1.5 -3.5 -0.5 -6.5 q-1 -4 -4 -7 q-3 -4 -7 -3 q-4 1 -5 4 q-1 3 0 7 q2 10 11 10 ZM464 413 q4 0 5 -3 q1 -2 0 -7 l0 0 q-1 -5 -2 -7 q-2 -4 -6 -4 q-4 0 -6.5 2 q-2.5 2 -1.5 6 q1 6 3 8 q2 4 8 5 ZM770 359 q3 1 5.5 -1 q2.5 -2 2.5 -5 q0 -5 -3 -9 q-3 -4 -8 -5 q-3 -1 -5 1 q-2 2 -2 5 q0 5 3 9 q3 4 7 5 ZM544 397 q1 4 2.5 6 q1.5 2 5.5 0.5 q4 -1.5 6.5 -5 q2.5 -3.5 2.5 -7.5 q1 -3 -1.5 -6 q-2.5 -3 -5.5 -3 q-6 1 -8 6 q-1 2 -2 9 ZM817 806 q2 4 4 6 q3 2 8 1 q3 0 4.5 -2 q1.5 -2 1.5 -5 q0 -5 -3.5 -8.5 q-3.5 -3.5 -8.5 -4.5 q-3 0 -5.5 3 q-2.5 3 -1.5 8 l1 2 ZM742 678 q2 6 4 8 q3 4 8 4 q3 0 5 -3 q2 -3 1 -7 q-2 -4 -4 -6 q-3 -4 -6 -4 q-8 -1 -8 8 ZM440 368 q0 4 2.5 7 q2.5 3 5.5 4 q4 0 6.5 -2.5 q2.5 -2.5 1.5 -6.5 q0 -4 -2.5 -7 q-2.5 -3 -6.5 -4 q-4 -1 -6 1.5 q-2 2.5 -1 7.5 ZM235 707 q-1 4 1.5 7 q2.5 3 6 2 q3.5 -1 6.5 -4 q3 -3 3.5 -7 q0.5 -4 -1.5 -6.5 q-2 -2.5 -6 -2 q-4 0.5 -7 3.5 q-3 3 -3 7 ZM196 409 q1 4 3 5 q2 1 7 1 q4 -1 6 -3.5 q2 -2.5 3 -7.5 q1 -4 -1.5 -6 q-2.5 -2 -6.5 -1 q-9 1 -11 12 ZM291 614 q-1 4 1.5 6.5 q2.5 2.5 5.5 2.5 q4 -1 7 -4.5 q3 -3.5 3 -7.5 q1 -9 -7 -8 q-4 0 -7 4 q-1 2 -3 6 q0 1 0 1 ZM742 316 q2 6 4 8 q3 4 9 3 q3 0 4.5 -2 q1.5 -2 0.5 -5 q-1 -6 -3 -8 q-4 -4 -9 -3 q-3 -1 -5 1.5 q-2 2.5 -1 5.5 ZM265 303 q-5 0 -8 4 q-2 2 -4 7 l0 1 q-1 3 1 5 q2 2 5 2 q6 0 9 -4 q2 -3 3 -8 q1 -3 -1 -5 q0 -1 -3 -2 q-1 0 -2 0 ZM413 305 q2 3 4 4.5 q2 1.5 5 1.5 q4 1 6 -1.5 q2 -2.5 1.5 -7 q-0.5 -4.5 -3 -7.5 q-2.5 -3 -6.5 -3.5 q-4 -0.5 -6 2.5 q-2 3 -1 11 ZM188 787 q-4 3 -6.5 7.5 q-2.5 4.5 -2.5 9.5 q1 3 3.5 4.5 q2.5 1.5 4.5 -0.5 q4 -1 7 -4.5 q3 -3.5 3 -7.5 q0 -3 -3 -5 q-1 -2 -6 -3 q0 0 0 -1 ZM854 500 q-1 4 1.5 8 q2.5 4 6.5 6 q4 1 6 -2.5 q2 -3.5 1 -7.5 l0 -1 q-1 -5 -2 -7 q-2 -3 -7 -3 q-3 0 -4 2 q-1 1 -2 3 q0 1 0 2 ZM730 638 q-4 2 -6 4.5 q-2 2.5 0 6.5 q2 5 3 7 q3 3 7.5 2.5 q4.5 -0.5 5.5 -2.5 q1 -2 0 -7 q-1 -5 -3 -8 q-3 -3 -7 -3 ZM160 855 q0 -1 -2.5 -2.5 q-2.5 -1.5 -6.5 -1.5 q-4 1 -6.5 4.5 q-2.5 3.5 -3.5 7.5 q0 4 2.5 6.5 q2.5 2.5 6.5 1.5 q8 -2 10 -16 ZM392 224 q-4 1 -6 3.5 q-2 2.5 0 6.5 q1 5 3 7 q3 3 7.5 2.5 q4.5 -0.5 5.5 -2.5 q1 -2 0 -7 q-2 -10 -10 -10 ZM705 617 q2 5 4 7 q3 4 7 4 q2 0 4.5 -2.5 q2.5 -2.5 2.5 -4.5 q0 -5 -3.5 -8.5 q-3.5 -3.5 -9.5 -4.5 q-3 0 -4 2 q-1 2 -1 6 l0 1 ZM618 235 q7 0 10 -10 q1 -4 0 -7 q-1 -2 -6 -3 q-8 0 -11 10 q-1 3 1 6.5 q2 3.5 6 3.5 ZM457 754 q0 0 -1.5 2 q-1.5 2 -1.5 3 q-1 2 -1 5 q2 11 10 10 q4 0 5 -2 q0 -1 0 -5 l0 -2 q0 -5 -2 -8 q-2 -3 -9 -3 ZM671 544 q-2 3 -3 7 q-1 5 2 9 q3 4 7 5 q3 1 5.5 -1 q2.5 -2 2.5 -4 q0 -6 -3 -9 q-3 -4 -11 -7 ZM674 183 q-3 0 -5 2 q-2 2 -2 5 q1 5 4 9 q3 4 7 4 q8 1 7 -9 q-3 -11 -11 -11 ZM798 770 q2 12 11 13 q2 0 4 -2.5 q2 -2.5 2 -4.5 q1 -5 -2 -8.5 q-3 -3.5 -8 -4.5 q-4 0 -5.5 2 q-1.5 2 -1.5 5 ZM373 561 q0 11 7 13 q4 0 7 -2.5 q3 -2.5 2 -5.5 q0 -4 -2.5 -7.5 q-2.5 -3.5 -6.5 -5 q-4 -1.5 -6 1 q-2 2.5 -1 6.5 ZM603 631 q6 1 8 -3 q2 -1 3 -6 l0 -1 q2 -3 0 -6.5 q-2 -3.5 -6 -2.5 q-4 -1 -7 2 q-1 3 -2 8 q-1 4 0 6.5 q1 2.5 4 2.5 ZM485 822 q-3 1 -5 3.5 q-2 2.5 0 5.5 l1 2 q2 4 3 6 q3 3 7 2 q4 0 5 -2 q1 -2 0 -7 q-1 -5 -3.5 -7.5 q-2.5 -2.5 -7.5 -2.5 ZM772 720 q6 0 6 -7 q0 -4 -2.5 -7.5 q-2.5 -3.5 -7 -4 q-4.5 -0.5 -6.5 2 q-2 2.5 -1 6.5 q1 4 4 7 q3 3 7 3 ZM567 712 q-4 1 -7 4.5 q-3 3.5 -3 7.5 q-1 4 1 6 q2 2 6 2 q5 0 7 -4 q2 -2 2 -7 q2 -9 -6 -9 ZM228 727 q-5 0 -8 3 q-2 3 -3 7 l0 1 q-2 4 -1 5 q1 3 6 4 q4 0 6 -2 q2 -1 3 -5 l2 -3 q2 -4 0.5 -6.5 q-1.5 -2.5 -5.5 -3.5 ZM400 268 q1 5 3 7 q2 3 6 2 q4 0 6.5 -2 q2.5 -2 1.5 -5 q-4 -10 -10 -11 q-4 0 -6 2 q-2 2 -1 6 l0 1 ZM863 873 q6 -2 5 -10 l-1 -1 q0 -3 -1 -4 q-1 -1 -5 -1 q-8 0 -6 9 q0 3 2.5 5 q2.5 2 5.5 2 Z"},
        {title:"", id:"4", sample:"", manual:"", paths:"M518 533 q5 0 9 -4 q2 -2 4.5 -8 q2.5 -6 4.5 -8.5 q2 -2.5 -1 -4.5 q-3 -2 -7 -2 q-7 0 -13.5 4.5 q-6.5 4.5 -8.5 11.5 q-2 4 0 6 q2 1 6 2.5 q4 1.5 6 2.5 ZM845 661 q3 0 5 3 q2 1 3 6 q2 6 3 7 q3 3 9 2 q4 -1 7 -4.5 q3 -3.5 2 -7.5 q-3 -7 -9 -11.5 q-6 -4.5 -14 -5.5 q-3 0 -5 3 q-3 3 -1 8 ZM511 667 q-2 -1 -5 -5 q-5 -6 -8 -8 q-6 -4 -12 -4 q-2 0 -4 2.5 q-2 2.5 -2.5 4.5 q-0.5 2 0.5 3 q4 1 5 4 q2 2 3 6 q2 6 3 7 q3 3 8 3 q5 0 8.5 -4 q3.5 -4 3.5 -9 ZM155 533 q5 -2 8 -6 q3 -3 6 -9 q2 -4 3 -6 q2 -2 -1.5 -4.5 q-3.5 -2.5 -7.5 -2.5 q-7 1 -12.5 5 q-5.5 4 -7.5 10 q-2 5 1 8 q2 1 8 4 q2 1 3 1 ZM498 387 q6 -2 8 -4 q4 -2 3 -6 q0 -7 -5 -12 q-5 -5 -11 -7 q-3 0 -5 1 q-2 1 -3.5 3 q-1.5 2 0 4 q1.5 2 1.5 4 q1 2 1 5 q1 5 2 8 q2 3 6 5 l3 -1 ZM874 374 q-4 -7 -6 -10 q-5 -4 -10 -5 q-5 0 -7.5 3 q-2.5 3 0.5 7 q1 2 1.5 7.5 q0.5 5.5 1.5 7.5 q2 4 8 3 q5 0 8.5 -4 q3.5 -4 3.5 -9 ZM572 553 q8 5 16 7 q3 0 5.5 -3 q2.5 -3 1.5 -6 q0 -5 -4 -7 q-2 -1 -8 -2 l-3 0 q-3 -1 -5 2 q-2 3 -3 9 ZM311 265 q3 0 5 -2 q2 -2 2 -5 q0 -5 -4 -8 q-3 -3 -9 -4 q-3 -1 -6 1 q-3 2 -3 6 q0 5 4 8 q3 2 10 4 q0 0 1 0 ZM816 346 q0 5 4 8 q2 1 7 3 l2 1 q4 2 6.5 -0.5 q2.5 -2.5 2.5 -6.5 q0 -5 -4 -8 q-2 -2 -8 -4 q-3 -1 -6 1 q-1 2 -4 5 q0 1 0 1 ZM788 641 q3 1 6 -1 q3 -2 3.5 -6 q0.5 -4 -2.5 -6 q-2 -2 -7 -4 l-3 -1 q-4 -2 -6 1 q-2 2 -2.5 6 q-0.5 4 1.5 7 q2 1 6 2 q3 1 4 2 ZM185 191 q4 0 6.5 -2.5 q2.5 -2.5 1.5 -6.5 q0 -5 -5 -8 q-3 -3 -10 -3 q-3 -1 -4.5 1.5 q-1.5 2.5 -1.5 4.5 q0 5 3 9 q2 2 8 4 q2 1 2 1 ZM767 321 q4 0 7 -2 q3 -2 3 -5 q0 -5 -4 -8 q-2 -1 -8 -3 l-1 -1 q-4 -1 -6.5 1 q-2.5 2 -2.5 6 q0 5 3 7 q2 2 7 4 q1 0 2 1 ZM532 874 q-2 -5 -3 -6 q-2 -3 -6 -2 q-5 1 -8 3 q-4 3 -5 8 q0 4 2 6.5 q2 2.5 5 2.5 q6 0 10 -3.5 q4 -3.5 5 -8.5 ZM481 687 q-2 -4 -3 -5 q-2 -2 -6 -2 q-5 -1 -9 2 q-4 3 -5 8 q0 3 2 6 q2 3 6 2 q5 0 9 -3 q4 -3 6 -6 l0 -2 ZM741 735 q-6 2 -8 5 q-4 3 -4 7 q0 4 2.5 6 q2.5 2 6.5 1 l1 0 q6 -2 8 -4 q4 -3 3 -8 q0 -3 -3 -5.5 q-3 -2.5 -6 -1.5 ZM217 209 q3 0 5.5 -2.5 q2.5 -2.5 2.5 -6.5 q-1 -4 -6 -7 q-4 -3 -8 -3 q-4 0 -6.5 2.5 q-2.5 2.5 -1.5 6.5 q2 4 5.5 7 q3.5 3 8.5 3 ZM448 705 q-1 -4 -2 -5 q-2 -2 -5 -2 q-14 3 -16 13 q0 1 2.5 3.5 q2.5 2.5 4.5 2.5 q6 1 10 -2 q4 -3 7 -8 l-1 -2 ZM537 178 q0 6 4 9 q2 2 8 3 q4 2 7 -1 q2 -3 2 -6 q0 -5 -4 -8 q-2 -2 -8 -4 l-1 0 q-4 -2 -6 1 q-1 2 -2 6 ZM705 284 q3 1 6 -1 q3 -2 4 -6 q0 -5 -5 -8 q-3 -2 -10 -4 q-3 -1 -5 2 q-2 3 -2 6.5 q0 3.5 3 6.5 q2 1 7 3 q1 1 2 1 ZM372 756 q1 -1 4 -2 q4 -2 6 -4 q3 -2 3.5 -6 q0.5 -4 -2 -6.5 q-2.5 -2.5 -5.5 -2.5 q-5 0 -9 3 q-4 3 -5 8 q-1 7 8 10 ZM155 885 q6 -2 8 -4 q4 -3 4 -8 q0 -3 -2.5 -5.5 q-2.5 -2.5 -6.5 -1.5 q-12 3 -12 12 q0 4 2 6 q2 2 7 2 l0 -1 ZM271 804 q0 4 2 6 q2 2 7 1 q12 -3 12 -12 q0 -3 -3 -5.5 q-3 -2.5 -6 -1.5 q-5 1 -8 3 q-4 3 -4 9 ZM366 607 q0 -4 -2 -7 q-2 -1 -6 -3 l-4 -1 q-5 -2 -8 0.5 q-3 2.5 -3 7 q0 4.5 2 6.5 q2 1 7 2 q3 1 4 1 q4 2 6 0 q2 -1 3 -5 q1 0 1 -1 ZM283 569 q-3 -1 -4.5 1 q-1.5 2 -1.5 6 q0 5 3 8 q2 1 8 3 l1 0 q4 1 7 -1 q3 -2 3 -6 q0 -5 -4 -7 q-2 -1 -7 -3 q-3 0 -5 -1 ZM350 275 q-1 -4 -5 -7 q-4 -3 -9 -3 q-2 0 -3.5 0.5 q-1.5 0.5 -3 2 q-1.5 1.5 -2 3.5 q-0.5 2 0.5 4 q2 4 6 6.5 q4 2.5 9 2.5 q3 0 5 -3 q1 -2 2 -6 ZM812 706 q-1 -4 -2 -6 q-2 -3 -6 -2 q-12 2 -13 11 q-1 3 1.5 6 q2.5 3 5.5 3 q5 -1 9 -4 q4 -3 5 -7 l0 -1 ZM657 799 q-1 -4 -3 -5 q-2 -2 -6 -2 q-6 1 -9 3 q-4 3 -4 8 q0 4 3 6 q3 2 6 0 l3 0 q5 -2 7 -3 q3 -2 3 -7 ZM831 400 q1 -1 3 -1 q3 -1 5 -2 q2 -2 2 -5 q0 -5 -3 -7.5 q-3 -2.5 -7 -1.5 l-3 1 q-4 2 -6 3 q-3 2 -3 5 q0 10 12 8 ZM627 480 q6 -1 8 -2 q3 -2 3 -7 q0 -4 -2.5 -6 q-2.5 -2 -6.5 -2 q-4 1 -7.5 3 q-3.5 2 -5 6 q-1.5 4 1 6 q2.5 2 6.5 2 l3 0 ZM629 567 q0 -4 -3 -6 q-1 -2 -6 -3 l-2 -1 q-9 -3 -11 4 q-1 5 3 8 q2 2 8 3 q4 2 7 0 q3 -2 4 -5 ZM613 830 q1 -1 3 -2 q5 -2 6 -4 q3 -3 3 -6.5 q0 -3.5 -3.5 -5.5 q-3.5 -2 -6.5 0 l-1 0 q-5 2 -7 3 q-3 3 -3 7 q0 3 2.5 5.5 q2.5 2.5 6.5 2.5 ZM620 217 q-2 -6 -14 -9 q-3 0 -5.5 2.5 q-2.5 2.5 -1.5 6.5 q0 4 5 7 q2 1 7 3 l1 0 q4 1 6 -2 q2 -3 2 -8 ZM673 264 q3 1 6 -0.5 q3 -1.5 4 -5.5 q1 -4 -2 -7 q-2 -1 -6 -3 l-3 -2 q-4 -2 -7 0 q-3 2 -3 6 q-1 5 3 8 q2 3 8 4 ZM264 566 q0 -4 -3 -6 q-2 -2 -7 -4 l0 0 q-4 -1 -7 -1 q-3 1 -4 5 q-1 6 2 9 q2 3 8 3 q4 1 7 -0.5 q3 -1.5 4 -5.5 ZM584 848 q5 -2 6 -4 q3 -3 3 -8 q0 -4 -2 -6 q-2 -2 -6 -1 q-5 1 -8.5 4.5 q-3.5 3.5 -3.5 7.5 q0 4 3 6 q3 2 7 1 l1 0 ZM228 496 q1 -1 3 -2 q4 -1 6 -3 q2 -3 2 -7 q0 -4 -2 -5.5 q-2 -1.5 -7 -0.5 q-6 1 -9 3 q-3 3 -3 8 q0 4 2.5 5.5 q2.5 1.5 7.5 1.5 ZM549 500 q-1 4 1 6 q2 2 7 2 q5 0 8 -2 q3 -1 5 -5 q1 -4 -1 -7 q-2 -3 -6 -3 q-4 0 -8 2 q-4 2 -6 7 ZM390 626 q5 1 7.5 -1.5 q2.5 -2.5 1.5 -5.5 q-1 -4 -4.5 -6.5 q-3.5 -2.5 -7.5 -3 q-4 -0.5 -6.5 1.5 q-2.5 2 -2.5 5 q0 5 3 8 q3 1 8 2 q0 0 1 0 ZM721 613 q7 3 8 -7 q1 -4 -3 -7 q-2 -2 -7 -3 l-2 -1 q-3 -1 -6 1.5 q-3 2.5 -3 5.5 q0 5 2 7 q2 1 7 3 q2 1 4 1 ZM718 434 q0 4 2 6 q2 2 7 1 l1 0 q6 -2 8 -3 q3 -3 3 -8.5 q0 -5.5 -7 -5.5 q-6 1 -9 2 q-4 3 -5 8 ZM216 849 q1 -1 4 -2 q5 -2 6 -4 q3 -3 3 -7 q0 -3 -1 -5 q-2 -2 -5 -2 q-5 0 -9.5 3 q-4.5 3 -6.5 8 q0 3 2 5.5 q2 2.5 7 3.5 ZM198 856 q-2 -9 -10 -7 q-4 0 -7 2.5 q-3 2.5 -4 6.5 q-1 4 1.5 6.5 q2.5 2.5 6.5 2.5 q4 0 8 -3.5 q4 -3.5 5 -7.5 ZM467 359 q7 0 7 -9 q-1 -5 -5 -8 q-4 -2 -8 -3 q-3 0 -5.5 2.5 q-2.5 2.5 -2 6 q0.5 3.5 3.5 6.5 q2 2 8 4 q1 0 2 1 ZM308 459 q-2 -5 -3 -6 q-2 -3 -6 -2 q-6 1 -9 3 q-4 2 -4 8 q0 4 2.5 6 q2.5 2 6.5 1 l3 -1 q4 -2 6 -3 q3 -2 4 -6 ZM822 693 q2 3 4.5 4 q2.5 1 6.5 1 q4 -1 7 -3.5 q3 -2.5 4 -6.5 q1 -4 -2 -6.5 q-3 -2.5 -6 -1.5 q-6 0 -9.5 4 q-3.5 4 -4.5 9 ZM810 644 q1 5 5 7.5 q4 2.5 8 2.5 q4 0 6.5 -2.5 q2.5 -2.5 1.5 -5.5 q-1 -4 -4.5 -6.5 q-3.5 -2.5 -7.5 -2.5 q-4 -1 -6 1 q-2 2 -3 6 ZM808 331 q-2 -4 -5.5 -6.5 q-3.5 -2.5 -8.5 -3.5 q-3 0 -5.5 2.5 q-2.5 2.5 -1.5 6.5 q1 4 4.5 6.5 q3.5 2.5 7.5 2.5 q4 0 6 -2 q2 -2 3 -6 ZM516 171 q4 0 6.5 -1 q2.5 -1 3.5 -5 q0 -4 -3 -7 q-1 -1 -6 -2 l-1 0 q-10 -3 -10 4 q-1 4 2 7 q2 1 6 3 q1 1 2 1 ZM457 654 q5 0 7 -1 q3 -2 3 -6 q0 -5 -4 -8 q-3 -2 -9 -3 q-4 0 -6.5 2 q-2.5 2 -1.5 6 q0 4 4 7 q2 1 7 3 ZM550 546 q8 3 10 -6 q1 -4 -1 -7 q-2 -1 -7 -3 l-1 -1 q-5 -1 -8.5 0.5 q-3.5 1.5 -3.5 6.5 q0 7 11 10 ZM431 322 q-5 -1 -7 1.5 q-2 2.5 -1.5 6.5 q0.5 4 4 6.5 q3.5 2.5 7.5 3 q4 0.5 6.5 -1.5 q2.5 -2 2.5 -5 q-1 -9 -12 -11 ZM433 413 q4 -1 6 -2 q3 -3 3 -7 q0 -3 -2 -5 q-2 -2 -5 -2 q-4 -1 -8.5 1.5 q-4.5 2.5 -5.5 7.5 q-1 3 2 5.5 q3 2.5 8 2.5 l2 -1 ZM435 634 q0 -4 -3 -6 q-2 -2 -6 -3 l-2 -1 q-4 -2 -7.5 0 q-3.5 2 -4.5 6 q-1 4 1 6 q2 1 6 2 q2 1 3 2 q8 4 13 -6 ZM406 735 q1 -1 4 -2.5 q3 -1.5 5 -2.5 q2 -2 2 -5.5 q0 -3.5 -3 -5.5 q-3 -2 -7 -1.5 q-4 0.5 -7 3.5 q-3 3 -3.5 7 q-0.5 4 1.5 6 q2 2 8 1 ZM390 312 q1 4 6 6 q3 1 8 2 q3 1 5.5 -1.5 q2.5 -2.5 1.5 -6.5 q-1 -4 -5 -7 q-4 -3 -8 -4 q-4 0 -6 3 q-2 3 -2 8 ZM396 427 q6 -1 9 -3 q4 -2 3 -8 q0 -3 -2 -5 q-2 -2 -5 -1 l-1 0 q-6 2 -8 3 q-4 3 -4.5 7.5 q-0.5 4.5 2.5 5.5 q2 1 6 1 ZM562 857 q0 -9 -7 -9 q-5 0 -8.5 2.5 q-3.5 2.5 -4.5 6.5 q-1 4 1.5 6.5 q2.5 2.5 6.5 2.5 q4 0 7.5 -2.5 q3.5 -2.5 4.5 -6.5 ZM579 208 q5 1 7.5 -1 q2.5 -2 2 -6 q-0.5 -4 -4 -7 q-3.5 -3 -7.5 -3 q-4 0 -6.5 1.5 q-2.5 1.5 -2.5 4.5 q0 8 11 11 ZM370 301 q5 1 7 0 q2 -1 3 -5 q1 -4 -2 -7 q-2 -2 -7 -4 l0 0 q-3 -2 -6.5 -1 q-3.5 1 -4.5 4 q-1 5 2 9 q2 2 8 4 l0 0 ZM363 441 q1 -1 4 -2 q4 -1 6 -3 q2 -2 2 -6 q-1 -4 -3.5 -5 q-2.5 -1 -7.5 0 q-5 1 -8 3.5 q-3 2.5 -3 5.5 q1 7 10 7 ZM603 483 q-1 -3 -3.5 -4.5 q-2.5 -1.5 -5.5 -0.5 q-11 2 -12 9 q0 4 2.5 6.5 q2.5 2.5 6.5 1.5 l1 0 q6 -2 8 -3 q3 -3 3 -9 ZM761 727 q-1 4 1 6.5 q2 2.5 6 2.5 q5 0 8.5 -3 q3.5 -3 4.5 -8 q1 -3 -1 -5 q-2 -2 -5 -2 q-5 0 -9 2 q-4 2 -5 7 ZM772 416 q0 -4 -2 -5.5 q-2 -1.5 -6 -0.5 l-1 1 q-5 2 -7 3 q-4 3 -4 8 q0 5 8 5 q6 -1 8 -3 q4 -2 4 -8 ZM341 444 q0 -4 -3.5 -6 q-3.5 -2 -7.5 -1 q-5 1 -8 3 q-4 3 -2 9 q1 4 3 5 q3 1 7 0 l2 -1 q5 -1 7 -2 q3 -2 2 -7 ZM310 591 q1 4 5.5 6.5 q4.5 2.5 8.5 2.5 q4 0 5.5 -1.5 q1.5 -1.5 1.5 -4.5 q0 -6 -4 -9 q-4 -2 -9 -2 q-3 -1 -5.5 1.5 q-2.5 2.5 -2.5 6.5 ZM323 779 q-1 -3 -3 -5 q-2 -1 -5 -1 q-6 2 -9 3 q-4 3 -4 8 q0 4 2 6.5 q2 2.5 7 0.5 q4 -1 8 -3.5 q4 -2.5 5 -7.5 l-1 -1 ZM641 579 q1 4 5 6 q2 1 7 2 l2 0 q3 1 5.5 -1.5 q2.5 -2.5 2.5 -6.5 q0 -5 -4 -7 q-2 -1 -7 -2 l-3 0 q-3 -1 -5.5 1.5 q-2.5 2.5 -2.5 7.5 ZM196 508 q5 -1 7 -3 q3 -2 3 -6 q0 -4 -1.5 -6.5 q-1.5 -2.5 -6.5 -1.5 q-5 1 -8 4 q-4 3 -4.5 7 q-0.5 4 2.5 5 q2 1 7 1 l1 0 ZM752 626 q6 1 9 -1 q3 -2 2 -6 q-1 -4 -4.5 -6.5 q-3.5 -2.5 -7 -3 q-3.5 -0.5 -6 1.5 q-2.5 2 -2.5 5.5 q0 3.5 2.5 6.5 q2.5 3 6.5 3 ZM684 582 q-5 1 -7.5 3 q-2.5 2 -2.5 6 q2 4 6 6.5 q4 2.5 8 2.5 q4 1 6.5 -2 q2.5 -3 1.5 -6 q-1 -5 -4.5 -7.5 q-3.5 -2.5 -7.5 -2.5 ZM287 239 q-1 -5 -5 -8 q-4 -3 -9 -3 q-2 0 -4.5 1.5 q-2.5 1.5 -2.5 4.5 q0 9 12 12 q3 1 5.5 -1 q2.5 -2 3.5 -6 ZM260 480 q6 0 8 -1 q4 -1 5 -6 q0 -4 -1 -6 q-2 -3 -6 -3 q-5 0 -9.5 2.5 q-4.5 2.5 -5 6.5 q-0.5 4 1.5 6 q2 1 7 1 q0 0 0 0 ZM209 550 q1 5 5 7 q3 2 8 3 l1 0 q3 0 5 -3 q1 -2 1 -6 q0 -4 -3 -6 q-2 -1 -7 -2 l-1 -1 q-7 -1 -9 8 ZM250 828 q5 -2 7 -3 q3 -3 3 -8 q0 -3 -2.5 -4.5 q-2.5 -1.5 -5.5 -1.5 q-5 1 -8 4 q-4 3 -4 8 q0 3 2 4 q1 1 5 2 q0 0 1 0 l2 -1 ZM247 227 q5 0 6 -2 q3 -2 2 -6 q0 -4 -3 -6 q-2 -2 -6 -3 l-2 -1 q-4 -1 -7 1 q-3 2 -2 6 q0 5 3 7 q3 2 9 4 q0 0 0 0 ZM736 302 q4 0 6.5 -1.5 q2.5 -1.5 2.5 -5.5 q0 -4 -4 -7 q-2 -2 -8 -4 l-1 0 q-3 -1 -6 1 q-3 2 -3 6 q0 4 4 6 q1 2 6 4 q2 1 3 1 ZM706 773 q4 0 7.5 -3 q3.5 -3 4.5 -7 q1 -7 -8 -7 q-4 0 -7.5 2.5 q-3.5 2.5 -4.5 6.5 q-1 3 1.5 5.5 q2.5 2.5 6.5 2.5 ZM685 450 q1 3 4 4 q3 1 6 0 q5 -1 7 -3 q3 -3 3 -7 q0 -4 -3.5 -6 q-3.5 -2 -6.5 0 l-1 0 q-5 2 -7 3 q-3 3 -2 9 ZM678 773 q-1 0 -3 1 q-4 2 -5 4 q-3 3 -3 6.5 q0 3.5 2.5 5.5 q2.5 2 6.5 1 q5 -1 7 -3 q3 -2 3 -7 q1 -8 -8 -8 ZM671 459 q0 -8 -8 -8 q-5 1 -8 2 q-4 2 -4 7 q0 8 5 8 q5 0 9 -2 q4 -2 6 -7 ZM334 766 q1 4 3.5 5.5 q2.5 1.5 6.5 0.5 q9 -3 9 -11 q0 -8 -9 -6 q-4 0 -7 3.5 q-3 3.5 -3 7.5 ZM631 236 q1 4 4 6.5 q3 2.5 7 2.5 q3 2 6 -0.5 q3 -2.5 3 -6.5 q0 -4 -3 -6 q-3 -2 -7.5 -3 q-4.5 -1 -7 0.5 q-2.5 1.5 -2.5 6.5 ZM184 529 q-5 0 -7.5 2.5 q-2.5 2.5 -1.5 5.5 q1 5 5 7 q4 2 9 2 q3 0 5 -2 q2 -2 2 -4 q0 -5 -4 -8 q-2 -1 -7 -3 q-1 0 -1 0 ZM806 404 q-1 -3 -2 -5 q-1 -2 -4 -2 q-13 0 -14 9 q-1 3 1 5.5 q2 2.5 5 2.5 q5 0 8.5 -2.5 q3.5 -2.5 5.5 -7.5 l0 0 ZM464 400 q5 -1 8 -2 q3 -3 3 -7 q0 -4 -2.5 -6 q-2.5 -2 -6.5 -1 l0 0 q-5 2 -7 3 q-4 3 -4 6.5 q0 3.5 2.5 5 q2.5 1.5 6.5 1.5 ZM154 171 q8 0 8 -8 q0 -3 -3 -5 q-2 -1 -6 -2 q-4 -1 -7 0 q-3 2 -3 6 q0 4 3 6 q3 2 8 3 Z"},
        {title:"", id:"5", sample:"", manual:"", paths:"M496 530 q0 5 4 9 q2 2 8 4.5 q6 2.5 8.5 4.5 q2.5 2 4.5 -1 q2 -3 2 -7 q0 -7 -4.5 -13.5 q-4.5 -6.5 -11.5 -8.5 q-4 -2 -6 0 q-1 2 -2.5 6 q-1.5 4 -2.5 6 ZM368 857 q0 3 -3 5 q-1 2 -6 3 q-6 2 -7 3 q-3 3 -2 9 q1 4 4.5 7 q3.5 3 7.5 2 q7 -3 11.5 -9 q4.5 -6 5.5 -14 q0 -3 -3 -5 q-3 -3 -8 -1 ZM362 523 q1 -2 5 -5 q6 -5 8 -8 q4 -6 4 -12 q0 -2 -2.5 -4 q-2.5 -2 -4.5 -2.5 q-2 -0.5 -3 0.5 q-1 4 -4 5 q-2 2 -6 3 q-6 2 -7 3 q-3 3 -3 8 q0 5 4 8.5 q4 3.5 9 3.5 ZM496 167 q2 5 6 8 q3 3 9 6 q4 2 6 3 q2 2 4.5 -1.5 q2.5 -3.5 2.5 -7.5 q-1 -7 -5 -12.5 q-4 -5.5 -10 -7.5 q-5 -2 -8 1 q-1 2 -4 8 q-1 2 -1 3 ZM642 510 q2 6 4 8 q2 4 6 3 q7 0 12 -5 q5 -5 7 -11 q0 -3 -1 -5 q-1 -2 -3 -3.5 q-2 -1.5 -4 0 q-2 1.5 -4 1.5 q-2 1 -5 1 q-5 1 -8 2 q-3 2 -5 6 l1 3 ZM655 886 q7 -4 10 -6 q4 -5 5 -10 q0 -5 -3 -7.5 q-3 -2.5 -7 0.5 q-2 1 -7.5 1.5 q-5.5 0.5 -7.5 1.5 q-4 2 -3 8 q0 5 4 8.5 q4 3.5 9 3.5 ZM476 584 q-5 8 -7 16 q0 3 3 5.5 q3 2.5 6 1.5 q5 0 7 -4 q1 -2 2 -8 l0 -3 q1 -3 -2 -5 q-3 -2 -9 -3 ZM764 323 q0 3 2 5 q2 2 5 2 q5 0 8 -4 q3 -3 4 -9 q1 -3 -1 -6 q-2 -3 -6 -3 q-5 0 -8 4 q-2 3 -4 10 q0 0 0 1 ZM683 828 q-5 0 -8 4 q-1 2 -3 7 l-1 2 q-2 4 0.5 6.5 q2.5 2.5 6.5 2.5 q5 0 8 -4 q2 -2 4 -8 q1 -3 -1 -6 q-2 -1 -5 -4 q-1 0 -1 0 ZM388 800 q-1 3 1 6 q2 3 6 3.5 q4 0.5 6 -2.5 q2 -2 4 -7 l1 -3 q2 -4 -1 -6 q-2 -2 -6 -2.5 q-4 -0.5 -7 1.5 q-1 2 -2 6 q-1 3 -2 4 ZM838 197 q0 4 2.5 6.5 q2.5 2.5 6.5 1.5 q5 0 8 -5 q3 -3 3 -10 q1 -3 -1.5 -4.5 q-2.5 -1.5 -4.5 -1.5 q-5 0 -9 3 q-2 2 -4 8 q-1 2 -1 2 ZM708 779 q0 4 2 7 q2 3 5 3 q5 0 8 -4 q1 -2 3 -8 l1 -1 q1 -4 -1 -6.5 q-2 -2.5 -6 -2.5 q-5 0 -7 3 q-2 2 -4 7 q0 1 -1 2 ZM155 544 q5 -2 6 -3 q3 -2 2 -6 q-1 -5 -3 -8 q-3 -4 -8 -5 q-4 0 -6.5 2 q-2.5 2 -2.5 5 q0 6 3.5 10 q3.5 4 8.5 5 ZM342 493 q4 -2 5 -3 q2 -2 2 -6 q1 -5 -2 -9 q-3 -4 -8 -5 q-3 0 -6 2 q-3 2 -2 6 q0 5 3 9 q3 4 6 6 l2 0 ZM294 753 q-2 -6 -5 -8 q-3 -4 -7 -4 q-4 0 -6 2.5 q-2 2.5 -1 6.5 l0 1 q2 6 4 8 q3 4 8 3 q3 0 5.5 -3 q2.5 -3 1.5 -6 ZM820 229 q0 3 2.5 5.5 q2.5 2.5 6.5 2.5 q4 -1 7 -6 q3 -4 3 -8 q0 -4 -2.5 -6.5 q-2.5 -2.5 -6.5 -1.5 q-4 2 -7 5.5 q-3 3.5 -3 8.5 ZM324 460 q4 -1 5 -2 q2 -2 2 -5 q-3 -14 -13 -16 q-1 0 -3.5 2.5 q-2.5 2.5 -2.5 4.5 q-1 6 2 10 q3 4 8 7 l2 -1 ZM851 549 q-6 0 -9 4 q-2 2 -3 8 q-2 4 1 7 q3 2 6 2 q5 0 8 -4 q2 -2 4 -8 l0 -1 q2 -4 -1 -6 q-2 -1 -6 -2 ZM745 717 q-1 3 1 6 q2 3 6 4 q5 0 8 -5 q2 -3 4 -10 q1 -3 -2 -5 q-3 -2 -6.5 -2 q-3.5 0 -6.5 3 q-1 2 -3 7 q-1 1 -1 2 ZM273 384 q1 1 2 4 q2 4 4 6 q2 3 6 3.5 q4 0.5 6.5 -2 q2.5 -2.5 2.5 -5.5 q0 -5 -3 -9 q-3 -4 -8 -5 q-7 -1 -10 8 ZM144 167 q2 6 4 8 q3 4 8 4 q3 0 5.5 -2.5 q2.5 -2.5 1.5 -6.5 q-3 -12 -12 -12 q-4 0 -6 2 q-2 2 -2 7 l1 0 ZM225 283 q-4 0 -6 2 q-2 2 -1 7 q3 12 12 12 q3 0 5.5 -3 q2.5 -3 1.5 -6 q-1 -5 -3 -8 q-3 -4 -9 -4 ZM422 378 q4 0 7 -2 q1 -2 3 -6 l1 -4 q2 -5 -0.5 -8 q-2.5 -3 -7 -3 q-4.5 0 -6.5 2 q-1 2 -2 7 q-1 3 -1 4 q-2 4 0 6 q1 2 5 3 q0 1 1 1 ZM460 295 q1 -3 -1 -4.5 q-2 -1.5 -6 -1.5 q-5 0 -8 3 q-1 2 -3 8 l0 1 q-1 4 1 7 q2 3 6 3 q5 0 7 -4 q1 -2 3 -7 q0 -3 1 -5 ZM754 362 q4 -1 7 -5 q3 -4 3 -9 q0 -2 -0.5 -3.5 q-0.5 -1.5 -2 -3 q-1.5 -1.5 -3.5 -2 q-2 -0.5 -4 0.5 q-4 2 -6.5 6 q-2.5 4 -2.5 9 q0 3 3 5 q2 1 6 2 ZM323 824 q4 -1 6 -2 q3 -2 2 -6 q-2 -12 -11 -13 q-3 -1 -6 1.5 q-3 2.5 -3 5.5 q1 5 4 9 q3 4 7 5 l1 0 ZM230 669 q4 -1 5 -3 q2 -2 2 -6 q-1 -6 -3 -9 q-3 -4 -8 -4 q-4 0 -6 3 q-2 3 0 6 l0 3 q2 5 3 7 q2 3 7 3 ZM629 843 q1 1 1 3 q1 3 2 5 q2 2 5 2 q5 0 7.5 -3 q2.5 -3 1.5 -7 l-1 -3 q-2 -4 -3 -6 q-2 -3 -5 -3 q-10 0 -8 12 ZM549 639 q1 6 2 8 q2 3 7 3 q4 0 6 -2.5 q2 -2.5 2 -6.5 q-1 -4 -3 -7.5 q-2 -3.5 -6 -5 q-4 -1.5 -6 1 q-2 2.5 -2 6.5 l0 3 ZM462 641 q4 0 6 -3 q2 -1 3 -6 l1 -2 q3 -9 -4 -11 q-5 -1 -8 3 q-2 2 -3 8 q-2 4 0 7 q2 3 5 4 ZM199 625 q1 1 2 3 q2 5 4 6 q3 3 6.5 3 q3.5 0 5.5 -3.5 q2 -3.5 0 -6.5 l0 -1 q-2 -5 -3 -7 q-3 -3 -7 -3 q-3 0 -5.5 2.5 q-2.5 2.5 -2.5 6.5 ZM812 632 q6 -2 9 -14 q0 -3 -2.5 -5.5 q-2.5 -2.5 -6.5 -1.5 q-4 0 -7 5 q-1 2 -3 7 l0 1 q-1 4 2 6 q3 2 8 2 ZM765 685 q-1 3 0.5 6 q1.5 3 5.5 4 q4 1 7 -2 q1 -2 3 -6 l2 -3 q2 -4 0 -7 q-2 -3 -6 -3 q-5 -1 -8 3 q-3 2 -4 8 ZM463 276 q4 0 6 -3 q2 -2 4 -7 l0 0 q1 -4 1 -7 q-1 -3 -5 -4 q-6 -1 -9 2 q-3 2 -3 8 q-1 4 0.5 7 q1.5 3 5.5 4 ZM181 596 q2 5 4 6 q3 3 8 3 q4 0 6 -2 q2 -2 1 -6 q-1 -5 -4.5 -8.5 q-3.5 -3.5 -7.5 -3.5 q-4 0 -6 3 q-2 3 -1 7 l0 1 ZM533 240 q1 1 2 3 q1 4 3 6 q3 2 7 2 q4 0 5.5 -2 q1.5 -2 0.5 -7 q-1 -6 -3 -9 q-3 -3 -8 -3 q-4 0 -5.5 2.5 q-1.5 2.5 -1.5 7.5 ZM529 561 q-4 -1 -6 1 q-2 2 -2 7 q0 5 2 8 q1 3 5 5 q4 1 7 -1 q3 -2 3 -6 q0 -4 -2 -8 q-2 -4 -7 -6 ZM403 402 q-1 5 1.5 7.5 q2.5 2.5 5.5 1.5 q4 -1 6.5 -4.5 q2.5 -3.5 3 -7.5 q0.5 -4 -1.5 -6.5 q-2 -2.5 -5 -2.5 q-5 0 -8 3 q-1 3 -2 8 q0 0 0 1 ZM416 733 q-3 7 7 8 q4 1 7 -3 q2 -2 3 -7 l1 -2 q1 -3 -1.5 -6 q-2.5 -3 -5.5 -3 q-5 0 -7 2 q-1 2 -3 7 q-1 2 -1 4 ZM595 730 q-4 0 -6 2 q-2 2 -1 7 l0 1 q2 6 3 8 q3 3 8.5 3 q5.5 0 5.5 -7 q-1 -6 -2 -9 q-3 -4 -8 -5 ZM180 228 q1 1 2 4 q2 5 4 6 q3 3 7 3 q3 0 5 -1 q2 -2 2 -5 q0 -5 -3 -9.5 q-3 -4.5 -8 -6.5 q-3 0 -5.5 2 q-2.5 2 -3.5 7 ZM173 210 q9 -2 7 -10 q0 -4 -2.5 -7 q-2.5 -3 -6.5 -4 q-4 -1 -6.5 1.5 q-2.5 2.5 -2.5 6.5 q0 4 3.5 8 q3.5 4 7.5 5 ZM670 479 q0 7 9 7 q5 -1 8 -5 q2 -4 3 -8 q0 -3 -2.5 -5.5 q-2.5 -2.5 -6 -2 q-3.5 0.5 -6.5 3.5 q-2 2 -4 8 q0 1 -1 2 ZM570 320 q5 -2 6 -3 q3 -2 2 -6 q-1 -6 -3 -9 q-2 -4 -8 -4 q-4 0 -6 2.5 q-2 2.5 -1 6.5 l1 3 q2 4 3 6 q2 3 6 4 ZM336 834 q-3 2 -4 4.5 q-1 2.5 -1 6.5 q1 4 3.5 7 q2.5 3 6.5 4 q4 1 6.5 -2 q2.5 -3 1.5 -6 q0 -6 -4 -9.5 q-4 -3.5 -9 -4.5 ZM385 822 q-5 1 -7.5 5 q-2.5 4 -2.5 8 q0 4 2.5 6.5 q2.5 2.5 5.5 1.5 q4 -1 6.5 -4.5 q2.5 -3.5 2.5 -7.5 q1 -4 -1 -6 q-2 -2 -6 -3 ZM698 820 q4 -2 6.5 -5.5 q2.5 -3.5 3.5 -8.5 q0 -3 -2.5 -5.5 q-2.5 -2.5 -6.5 -1.5 q-4 1 -6.5 4.5 q-2.5 3.5 -2.5 7.5 q0 4 2 6 q2 2 6 3 ZM858 528 q0 4 1 6.5 q1 2.5 5 3.5 q4 0 7 -3 q1 -1 2 -6 l0 -1 q3 -10 -4 -10 q-4 -1 -7 2 q-1 2 -3 6 q-1 1 -1 2 ZM375 469 q0 5 1 7 q2 3 6 3 q5 0 8 -4 q2 -3 3 -9 q0 -4 -2 -6.5 q-2 -2.5 -6 -1.5 q-4 0 -7 4 q-1 2 -3 7 ZM483 562 q-3 8 6 10 q4 1 7 -1 q1 -2 3 -7 l1 -1 q1 -5 -0.5 -8.5 q-1.5 -3.5 -6.5 -3.5 q-7 0 -10 11 ZM707 443 q1 -5 -1.5 -7 q-2.5 -2 -6.5 -1.5 q-4 0.5 -6.5 4 q-2.5 3.5 -3 7.5 q-0.5 4 1.5 6.5 q2 2.5 5 2.5 q9 -1 11 -12 ZM616 445 q1 4 2 6 q3 3 7 3 q3 0 5 -2 q2 -2 2 -5 q1 -4 -1.5 -8.5 q-2.5 -4.5 -7.5 -5.5 q-3 -1 -5.5 2 q-2.5 3 -2.5 8 l1 2 ZM395 447 q4 0 6 -3 q2 -2 3 -6 l1 -2 q2 -4 0 -7.5 q-2 -3.5 -6 -4.5 q-4 -1 -6 1 q-1 2 -2 6 q-1 2 -2 3 q-4 8 6 13 ZM294 418 q1 1 2.5 4 q1.5 3 2.5 5 q2 2 5.5 2 q3.5 0 5.5 -3 q2 -3 1.5 -7 q-0.5 -4 -3.5 -7 q-3 -3 -7 -3.5 q-4 -0.5 -6 1.5 q-2 2 -1 8 ZM717 402 q-4 1 -6 6 q-1 3 -2 8 q-1 3 1.5 5.5 q2.5 2.5 6.5 1.5 q4 -1 7 -5 q3 -4 4 -8 q0 -4 -3 -6 q-3 -2 -8 -2 ZM602 408 q1 6 3 9 q2 4 8 3 q3 0 5 -2 q2 -2 1 -5 l0 -1 q-2 -6 -3 -8 q-3 -4 -7.5 -4.5 q-4.5 -0.5 -5.5 2.5 q-1 2 -1 6 ZM172 574 q9 0 9 -7 q0 -5 -2.5 -8.5 q-2.5 -3.5 -6.5 -4.5 q-4 -1 -6.5 1.5 q-2.5 2.5 -2.5 6.5 q0 4 2.5 7.5 q2.5 3.5 6.5 4.5 ZM821 591 q-1 5 1 7.5 q2 2.5 6 2 q4 -0.5 7 -4 q3 -3.5 3 -7.5 q0 -4 -1.5 -6.5 q-1.5 -2.5 -4.5 -2.5 q-8 0 -11 11 ZM728 382 q-1 5 0 7 q1 2 5 3 q4 1 7 -2 q2 -2 4 -7 l0 0 q2 -3 1 -6.5 q-1 -3.5 -4 -4.5 q-5 -1 -9 2 q-2 2 -4 8 l0 0 ZM588 375 q1 1 2 4 q1 4 3 6 q2 2 6 2 q4 -1 5 -3.5 q1 -2.5 0 -7.5 q-1 -5 -3.5 -8 q-2.5 -3 -5.5 -3 q-7 1 -7 10 ZM546 615 q3 -1 4.5 -3.5 q1.5 -2.5 0.5 -5.5 q-2 -11 -9 -12 q-4 0 -6.5 2.5 q-2.5 2.5 -1.5 6.5 l0 1 q2 6 3 8 q3 3 9 3 ZM302 773 q-4 -1 -6.5 1 q-2.5 2 -2.5 6 q0 5 3 8.5 q3 3.5 8 4.5 q3 1 5 -1 q2 -2 2 -5 q0 -5 -2 -9 q-2 -4 -7 -5 ZM613 784 q4 0 5.5 -2 q1.5 -2 0.5 -6 l-1 -1 q-2 -5 -3 -7 q-3 -4 -8 -4 q-5 0 -5 8 q1 6 3 8 q2 4 8 4 ZM585 353 q4 0 6 -3.5 q2 -3.5 1 -7.5 q-1 -5 -3 -8 q-3 -4 -9 -2 q-4 1 -5 3 q-1 3 0 7 l1 2 q1 5 2 7 q2 3 7 2 ZM438 322 q-4 1 -6.5 5.5 q-2.5 4.5 -2.5 8.5 q0 4 1.5 5.5 q1.5 1.5 4.5 1.5 q6 0 9 -4 q2 -4 2 -9 q1 -3 -1.5 -5.5 q-2.5 -2.5 -6.5 -2.5 ZM250 335 q3 -1 5 -3 q1 -2 1 -5 q-2 -6 -3 -9 q-3 -4 -8 -4 q-4 0 -6.5 2 q-2.5 2 -0.5 7 q1 4 3.5 8 q2.5 4 7.5 5 l1 -1 ZM450 653 q-4 1 -6 5 q-1 2 -2 7 l0 2 q-1 3 1.5 5.5 q2.5 2.5 6.5 2.5 q5 0 7 -4 q1 -2 2 -7 l0 -3 q1 -3 -1.5 -5.5 q-2.5 -2.5 -7.5 -2.5 ZM521 208 q1 5 3 7 q2 3 6 3 q4 0 6.5 -1.5 q2.5 -1.5 1.5 -6.5 q-1 -5 -4 -8 q-3 -4 -7 -4.5 q-4 -0.5 -5 2.5 q-1 2 -1 7 l0 1 ZM403 764 q-1 6 1 9 q2 3 6 2 q4 -1 6.5 -4.5 q2.5 -3.5 3 -7 q0.5 -3.5 -1.5 -6 q-2 -2.5 -5.5 -2.5 q-3.5 0 -6.5 2.5 q-3 2.5 -3 6.5 ZM447 696 q-1 -5 -3 -7.5 q-2 -2.5 -6 -2.5 q-4 2 -6.5 6 q-2.5 4 -2.5 8 q-1 4 2 6.5 q3 2.5 6 1.5 q5 -1 7.5 -4.5 q2.5 -3.5 2.5 -7.5 ZM790 299 q5 -1 8 -5 q3 -4 3 -9 q0 -2 -1.5 -4.5 q-1.5 -2.5 -4.5 -2.5 q-9 0 -12 12 q-1 3 1 5.5 q2 2.5 6 3.5 ZM549 272 q0 6 1 8 q1 4 6 5 q4 0 6 -1 q3 -2 3 -6 q0 -5 -2.5 -9.5 q-2.5 -4.5 -6.5 -5 q-4 -0.5 -6 1.5 q-1 2 -1 7 q0 0 0 0 ZM479 221 q-5 1 -7 5 q-2 3 -3 8 l0 1 q0 3 3 5 q2 1 6 1 q4 0 6 -3 q1 -2 2 -7 l1 -1 q1 -7 -8 -9 ZM201 262 q2 5 3 7 q3 3 8 3 q3 0 4.5 -2.5 q1.5 -2.5 1.5 -5.5 q-1 -5 -4 -8 q-3 -4 -8 -4 q-3 0 -4 2 q-1 1 -2 5 q0 0 0 1 l1 2 ZM802 259 q0 5 2 6 q2 3 6 2 q4 0 6 -3 q2 -2 3 -6 l1 -2 q1 -4 -1 -7 q-2 -3 -6 -2 q-5 0 -7 3 q-2 3 -4 9 q0 0 0 0 ZM727 748 q0 4 1.5 6.5 q1.5 2.5 5.5 2.5 q4 0 7 -4 q2 -2 4 -8 l0 -1 q1 -3 -1 -6 q-2 -3 -6 -3 q-4 0 -6 4 q-2 1 -4 6 q-1 2 -1 3 ZM256 718 q0 4 3 7.5 q3 3.5 7 4.5 q7 1 7 -8 q0 -4 -2.5 -7.5 q-2.5 -3.5 -6.5 -4.5 q-3 -1 -5.5 1.5 q-2.5 2.5 -2.5 6.5 ZM579 697 q-3 1 -4 4 q-1 3 0 6 q1 5 3 7 q3 3 7 3 q4 0 6 -3.5 q2 -3.5 0 -6.5 l0 -1 q-2 -5 -3 -7 q-3 -3 -9 -2 ZM256 690 q0 -1 -1 -3 q-2 -4 -4 -5 q-3 -3 -6.5 -3 q-3.5 0 -5.5 2.5 q-2 2.5 -1 6.5 q1 5 3 7 q2 3 7 3 q8 1 8 -8 ZM570 683 q8 0 8 -8 q-1 -5 -2 -8 q-2 -4 -7 -4 q-8 0 -8 5 q0 5 2 9 q2 4 7 6 ZM263 346 q-4 1 -5.5 3.5 q-1.5 2.5 -0.5 6.5 q3 9 11 9 q8 0 6 -9 q0 -4 -3.5 -7 q-3.5 -3 -7.5 -3 ZM793 643 q-4 1 -6.5 4 q-2.5 3 -2.5 7 q-2 3 0.5 6 q2.5 3 6.5 3 q4 0 6 -3 q2 -3 3 -7.5 q1 -4.5 -0.5 -7 q-1.5 -2.5 -6.5 -2.5 ZM500 196 q0 -5 -2.5 -7.5 q-2.5 -2.5 -5.5 -1.5 q-5 1 -7 5 q-2 4 -2 9 q0 3 2 5 q2 2 4 2 q5 0 8 -4 q1 -2 3 -7 q0 -1 0 -1 ZM625 818 q3 -1 5 -2 q2 -1 2 -4 q0 -13 -9 -14 q-3 -1 -5.5 1 q-2.5 2 -2.5 5 q0 5 2.5 8.5 q2.5 3.5 7.5 5.5 l0 0 ZM629 476 q1 5 2 8 q3 3 7 3 q4 0 6 -2.5 q2 -2.5 1 -6.5 l0 0 q-2 -5 -3 -7 q-3 -4 -6.5 -4 q-3.5 0 -5 2.5 q-1.5 2.5 -1.5 6.5 ZM858 166 q0 8 8 8 q3 0 5 -3 q1 -2 2 -6 q1 -4 0 -7 q-2 -3 -6 -3 q-4 0 -6 3 q-2 3 -3 8 Z"},
        {title:"", id:"6", sample:"", manual:"", paths:"M256 610 q12 -13 20 -27 l6 -12 q8 -16 11 -24 q6 -15 7 -26 q4 -31 -11 -48 q-15 -16 -46 -16 q-31 0 -45 16 q-15 16 -12 48 q2 12 7 27 q4 8 12 26 q4 9 6 14 q8 15 19 28 l-89 35 q14 3 28 2 q11 -2 24 -6 q7 -3 21 -9 q8 -4 12 -6 q7 -4 15 -4 q8 0 15 4 q22 15 47 20.5 q25 5.5 51 0.5 q12 -3 25 -9 q9 -3 25 -11 q15 -7 22 -10 q42 33 87 32 q44 -1 90 -35 q42 33 85.5 34.5 q43.5 1.5 88.5 -27.5 q3 -2 11 0 q6 1 12 5 q17 9 28 14 q16 6 29 7 q16 2 32 -3 q-8 -4 -25 -7 q-14 -4 -20 -6 q-25 -10 -48 -23 q15 -17 28 -35 q14 -25 20 -52 q4 -21 0 -37 q-6 -18 -23 -24 q-17 -6 -35 -5.5 q-18 0.5 -35 6.5 q-16 6 -21 24 q-3 16 1 35 q8 30 21 58 q9 15 19 28 q-29 20 -57 26.5 q-28 6.5 -52 -1 q-24 -7.5 -43 -27.5 q11 -12 18 -26 q17 -34 24 -71 q3 -26 -10 -40 q-12 -14 -37 -16 q-32 -2 -50 11 q-18 14 -17 40 q1 14 6 30 q3 10 11 30 q6 12 8 18 q7 14 17 24 q-25 20 -51 27.5 q-26 7.5 -52 0.5 q-26 -7 -50 -27 q18 -19 29.5 -43 q11.5 -24 16.5 -50 q3 -30 -13 -46 q-16 -16 -47 -16 q-28 1 -41 13.5 q-13 12.5 -15 41.5 q-1 27 11 53 q10 19 31 44 q-15 15 -34.5 23.5 q-19.5 8.5 -41 9 q-21.5 0.5 -41.5 -7.5 q-20 -8 -35 -23 ZM610 606 q-26 -22 -38 -41 q-13 -21 -12 -45 q1 -13 7 -25.5 q6 -12.5 16 -20.5 q12 -6 25.5 -5 q13.5 1 24.5 8 q10 9 14.5 21 q4.5 12 3.5 25 q-4 13 -12 29 q-4 10 -15 29 q-9 16 -14 25 ZM784 602 q-14 -16 -22 -27 q-10 -14 -16 -27 q-5 -15 -5 -32 q0 -22 12.5 -35.5 q12.5 -13.5 32.5 -14.5 q14 0 24.5 6 q10.5 6 16.5 17 q6 11 6 26 q1 17 -6 33 q-6 14 -18 28 q-7 9 -25 26 ZM241 601 q-23 -21 -33 -41 q-12 -22 -11 -48 q0 -13 6.5 -23.5 q6.5 -10.5 17 -17 q10.5 -6.5 23 -6.5 q12.5 0 23 6.5 q10.5 6.5 17 17 q6.5 10.5 6.5 23.5 q0 17 -6 34 q-6 14 -18 28 q-9 11 -25 27 ZM415 601 q-20 -32 -35 -66 q-5 -12 -4.5 -23.5 q0.5 -11.5 5.5 -20.5 q6 -10 17 -15 q13 -5 26.5 -4.5 q13.5 0.5 26.5 5.5 q17 8 21 25 q3 16 -5 34 q-17 34 -39 66 l-13 -1 l0 0 Z"},
        {title:"", id:"7", sample:"", manual:"", paths:"M774 501 q-12 13 -20 27 l-6 12 q-8 16 -11 24 q-6 15 -7 26 q-4 31 11 48 q15 16 46 16 q31 0 45 -16 q15 -16 12 -48 q-2 -12 -7 -27 q-4 -8 -12 -26 q-4 -9 -6 -14 q-8 -15 -19 -28 l89 -35 q-14 -3 -28 -2 q-11 2 -24 6 q-7 3 -21 9 q-8 4 -12 6 q-7 4 -15 4 q-8 0 -15 -4 q-22 -15 -47 -20.5 q-25 -5.5 -51 -0.5 q-12 3 -25 9 q-9 3 -25 11 q-15 7 -22 10 q-42 -33 -87 -32 q-44 1 -90 35 q-42 -33 -85.5 -34.5 q-43.5 -1.5 -88.5 27.5 q-3 2 -11 0 q-6 -1 -12 -5 q-17 -9 -28 -14 q-16 -6 -29 -7 q-16 -2 -32 3 q8 4 25 7 q14 4 20 6 q25 10 48 23 q-15 17 -28 35 q-14 25 -20 52 q-4 21 0 37 q6 18 23 24 q17 6 35 5.5 q18 -0.5 35 -6.5 q16 -6 21 -24 q3 -16 -1 -35 q-8 -30 -21 -58 q-9 -15 -19 -28 q29 -20 57 -26.5 q28 -6.5 52 1 q24 7.5 43 27.5 q-11 12 -18 26 q-17 34 -24 71 q-3 26 10 40 q12 14 37 16 q32 2 50 -11 q18 -14 17 -40 q-1 -14 -6 -30 q-3 -10 -11 -30 q-6 -12 -8 -18 q-7 -14 -17 -24 q25 -20 51 -27.5 q26 -7.5 52 -0.5 q26 7 50 27 q-18 19 -29.5 43 q-11.5 24 -16.5 50 q-3 30 13 46 q16 16 47 16 q28 -1 41 -13.5 q13 -12.5 15 -41.5 q1 -27 -11 -53 q-10 -19 -31 -44 q15 -15 34.5 -23.5 q19.5 -8.5 41 -9 q21.5 -0.5 41.5 7.5 q20 8 35 23 ZM420 505 q26 22 38 41 q13 21 12 45 q-1 13 -7 25.5 q-6 12.5 -16 20.5 q-12 6 -25.5 5 q-13.5 -1 -24.5 -8 q-10 -9 -14.5 -21 q-4.5 -12 -3.5 -25 q4 -13 12 -29 q4 -10 15 -29 q9 -16 14 -25 ZM246 509 q14 16 22 27 q10 14 16 27 q5 15 5 32 q0 22 -12.5 35.5 q-12.5 13.5 -32.5 14.5 q-14 0 -24.5 -6 q-10.5 -6 -16.5 -17 q-6 -11 -6 -26 q-1 -17 6 -33 q6 -14 18 -28 q7 -9 25 -26 ZM789 510 q23 21 33 41 q12 22 11 48 q0 13 -6.5 23.5 q-6.5 10.5 -17 17 q-10.5 6.5 -23 6.5 q-12.5 0 -23 -6.5 q-10.5 -6.5 -17 -17 q-6.5 -10.5 -6.5 -23.5 q0 -17 6 -34 q6 -14 18 -28 q9 -11 25 -27 ZM615 510 q20 32 35 66 q5 12 4.5 23.5 q-0.5 11.5 -5.5 20.5 q-6 10 -17 15 q-13 5 -26.5 4.5 q-13.5 -0.5 -26.5 -5.5 q-17 -8 -21 -25 q-3 -16 5 -34 q17 -34 39 -66 l13 1 l0 0 Z"},
        {title:"", id:"8", sample:"", manual:"", paths:"M133 613 q16 8 28 2 q10 -5 16 -19 q5 -9 10 -20 q2 -7 8 -22 q5 -15 8 -23 l0 -1 q5 -11 8 -17 q5 -9 11 -13 q8 -4 18 -2 q11 5 20 13 q9 8 15 19 q4 7 8 15 q2 6 5 17 q4 13 6 19 q17 41 52.5 40.5 q35.5 -0.5 50.5 -41.5 q3 -7 7 -20 q6 -19 10 -29 l0 0 q5 -11 8 -16 q5 -9 11 -13 q8 -5 18 -5 q15 0 24 11 q8 9 13 24 l4 12 q8 25 12 37 q4 17 19 28.5 q15 11.5 33 12 q18 0.5 32 -10.5 q11 -10 18 -29 q3 -6 7 -20 q4 -12 6 -19 q4 -9 8 -16 q7 -11 16 -19 q10 -9 18 -9 q8 0 19 10 q9 8 15 19 q13 28 22 57 q5 16 18 26 q13 10 29 10 q18 1 31 -8 q12 -9 20 -26 q3 -7 7 -16 q2 -6 5 -17 q5 -18 9 -26 q6 -15 14 -24 q10 -12 24 -19 q-15 -3 -25 2 q-9 4 -16 13 q-4 7 -10 20 q-5 10 -11 31 q-4 12 -6 18 q-6 16 -14 25 q-10 10 -26 10 q-27 0 -39 -35 l-5 -15 q-9 -26 -14 -39 q-8 -17 -17 -25 q-12 -10 -30 -10 q-18 0 -30 10 q-9 8 -17 25 q-4 9 -8 20 q-2 7 -6 21 l-4 13 q-6 17 -14 25 q-9 9 -25.5 9.5 q-16.5 0.5 -26.5 -10.5 q-8 -8 -14 -24 q-2 -7 -6 -21 q-4 -11 -6 -17 q-3 -9 -6 -16 q-8 -17 -17 -25 q-12 -10 -30 -10 q-17 -1 -30 9 q-13 10 -17 26 q-7 14 -17 46 l-1 2 q-4 13 -8 19 q-5 11 -12 16 q-8 6 -20 6.5 q-12 0.5 -21 -5.5 q-7 -5 -13 -15 q-4 -7 -8 -19 q-2 -7 -7 -20 q-6 -19 -10 -29 q-8 -19 -20 -28 q-14 -9 -34 -7 q-13 1 -21 7 q-7 6 -13 15 q-3 6 -8 18 l-2 6 q-3 7 -7 22 q-6 17 -9 26 q-6 13 -15 22 q-10 11 -25 16 Z"},
        {title:"", id:"9", sample:"", manual:"", paths:"M874 613 q-15 -5 -25 -16 q-9 -9 -15 -22 q-3 -9 -9 -26 q-4 -15 -7 -22 l-2 -6 q-5 -12 -8 -18 q-6 -9 -13 -15 q-8 -6 -21 -7 q-20 -2 -34 7 q-12 9 -20 28 q-4 10 -10 29 q-5 13 -7 20 q-4 12 -8 19 q-6 10 -13 15 q-9 6 -21 5.5 q-12 -0.5 -20 -6.5 q-7 -5 -12 -16 q-4 -6 -8 -19 l-1 -2 q-10 -32 -17 -46 q-4 -16 -17 -26 q-13 -10 -30 -9 q-18 0 -30 10 q-9 8 -17 25 q-3 7 -6 16 q-2 6 -6 17 q-4 14 -6 21 q-6 16 -14 24 q-10 11 -26.5 10.5 q-16.5 -0.5 -25.5 -9.5 q-8 -8 -14 -25 l-4 -13 q-4 -14 -6 -21 q-4 -11 -8 -20 q-8 -17 -17 -25 q-12 -10 -30 -10 q-18 0 -30 10 q-9 8 -17 25 q-5 13 -14 39 l-5 15 q-12 35 -39 35 q-16 0 -26 -10 q-8 -9 -14 -25 q-2 -6 -6 -18 q-6 -21 -11 -31 q-6 -13 -10 -20 q-7 -9 -16 -13 q-10 -5 -25 -2 q14 7 24 19 q8 9 14 24 q4 8 9 26 q3 11 5 17 q4 9 7 16 q8 17 20 26 q13 9 31 8 q16 0 29 -10 q13 -10 18 -26 q9 -29 22 -57 q6 -11 15 -19 q11 -10 19 -10 q8 0 18 9 q9 8 16 19 q4 7 8 16 q2 7 6 19 q4 14 7 20 q7 19 18 29 q14 11 32 10.5 q18 -0.5 33 -12 q15 -11.5 19 -28.5 q4 -12 12 -37 l4 -12 q5 -15 13 -24 q9 -11 24 -11 q10 0 18 5 q6 4 11 13 q3 5 8 16 l0 0 q4 10 10 29 q4 13 7 20 q15 41 50.5 41.5 q35.5 0.5 52.5 -40.5 q2 -6 6 -19 q3 -11 5 -17 q4 -8 8 -15 q6 -11 15 -19 q9 -8 20 -13 q10 -2 18 2 q6 4 11 13 q3 6 8 17 l0 1 q3 8 8 23 q6 15 8 22 q5 11 10 20 q6 14 16 19 q12 6 28 -2 Z"},
        {title:"", id:"10", sample:"", manual:"", paths:"M338 461 q-2 14 -5 27 q-3 8 -9 24 q-7 22 -11 33 q-8 18 -16 31 q-10 15 -24.5 20.5 q-14.5 5.5 -29 0 q-14.5 -5.5 -25.5 -20.5 q-20 -34 -32 -71 q-7 -23 -11 -45 q-6 4 -8.5 7.5 q-2.5 3.5 -1.5 7.5 q2 10 8 32 q5 26 9 38 q6 21 14 35 q13 22 30 34 q16 10 33.5 9.5 q17.5 -0.5 33.5 -12.5 q17 -13 29 -35 l21 -39 q25 45 44 66 q19 22 37.5 22.5 q18.5 0.5 40.5 -20.5 q20 -19 48 -63 q17 29 37 55 q24 28 49 28 q25 0 49 -29 q19 -26 35 -54 q20 33 45 63 q10 11 24 16 q14 5 28.5 2 q14.5 -3 25.5 -12 q18 -14 31 -40 q13 -26 17 -56 q4 -31 -4 -57 q-2 16 -6 32 q-3 9 -9 27 q-7 20 -10 29 q-7 15 -13 26 q-12 19 -28 25 q-16 6 -32.5 -1.5 q-16.5 -7.5 -27.5 -26.5 q-16 -32 -27 -67 q-2 -7 -5 -15 q-1 -5 -3 -15 l-3 -11 q-10 11 -12 25 q-3 8 -9 25 q-6 21 -10 31 q-7 17 -14 29 q-12 19 -27 25.5 q-15 6.5 -30.5 0 q-15.5 -6.5 -27.5 -25.5 q-7 -11 -14 -26 q-3 -9 -9 -28 q-6 -19 -10 -28 q-3 -7 -8 -22 l-1 -5 q-9 15 -13 32 q-3 8 -9 22 q-9 23 -14 34 q-8 19 -17 31.5 q-9 12.5 -20.5 17 q-11.5 4.5 -23.5 0.5 q-12 -4 -21 -17 q-9 -12 -18 -31 q-6 -10 -15 -33 q-5 -13 -8 -19 q-7 -19 -10 -38 l-7 0 Z"},
        {title:"", id:"11", sample:"", manual:"", paths:"M345 623 q3 -19 10 -38 q3 -6 8 -19 q9 -23 15 -33 q9 -19 18 -31 q9 -13 21 -17 q12 -4 23.5 0.5 q11.5 4.5 20.5 17 q9 12.5 17 31.5 q5 11 14 34 q6 14 9 22 q4 17 13 32 l1 -5 q5 -15 8 -22 q4 -9 10 -28 q6 -19 9 -28 q7 -15 14 -26 q12 -19 27.5 -25.5 q15.5 -6.5 30.5 0 q15 6.5 27 25.5 q7 12 14 29 q4 10 10 31 q6 17 9 25 q2 14 12 25 l3 -11 q2 -10 3 -15 q3 -8 5 -15 q11 -35 27 -67 q11 -19 27.5 -26.5 q16.5 -7.5 32.5 -1.5 q16 6 28 25 q6 11 13 26 q3 9 10 29 q6 18 9 27 q4 16 6 32 q8 -26 4 -57 q-4 -30 -17 -56 q-13 -26 -31 -40 q-11 -9 -25.5 -12 q-14.5 -3 -28.5 2 q-14 5 -24 16 q-25 30 -45 63 q-16 -28 -35 -54 q-24 -29 -49 -29 q-25 0 -49 28 q-20 26 -37 55 q-28 -44 -48 -63 q-22 -21 -40.5 -20.5 q-18.5 0.5 -37.5 22.5 q-19 21 -44 66 l-21 -39 q-12 -22 -29 -35 q-16 -12 -33.5 -12.5 q-17.5 -0.5 -33.5 9.5 q-17 12 -30 34 q-8 14 -14 35 q-4 12 -9 38 q-6 22 -8 32 q-1 4 1.5 7.5 q2.5 3.5 8.5 7.5 q4 -22 11 -45 q12 -37 32 -71 q11 -15 25.5 -20.5 q14.5 -5.5 29 0 q14.5 5.5 24.5 20.5 q8 13 16 31 q4 11 11 33 q6 16 9 24 q3 13 5 27 l7 0 Z"},
        {title:"", id:"12", sample:"", manual:"", paths:"M790 797 q3 -10 5 -20 l3 -39 q9 -95 12 -143 l2 -23 q4 -50 5 -75 q2 -42 0 -76 q-2 -40 -10 -75 q-14 -67 -52.5 -95.5 q-38.5 -28.5 -106.5 -23.5 q-37 3 -63 18.5 q-26 15.5 -39.5 42.5 q-13.5 27 -11.5 64 q0 20 3 44 q1 15 5 44 q4 31 5 47 q2 14 5 41 q4 37 5 56 q3 31 3 55 q1 36 -22 54 q-21 18 -64 18 q-26 0 -42.5 -7.5 q-16.5 -7.5 -25 -22.5 q-8.5 -15 -9.5 -41 q-2 -50 4 -100 q2 -24 7 -72 q5 -39 7 -58 q3 -33 4 -59 q1 -40 -19 -65 q-19 -25 -54 -32 q-42 -9 -72.5 5 q-30.5 14 -49.5 49 q-10 19 -15 41 q-15 58 -17 123 q-2 56 5 123 q5 48 17 123 q1 2 2 3 q1 1 4 4 q4 4 7 8 l-5 -120 q-4 -64 -5 -96 q-3 -54 -4 -98 q-1 -30 8.5 -59.5 q9.5 -29.5 27.5 -54.5 q10 -16 25 -26 q15 -10 32.5 -12 q17.5 -2 35.5 3 q17 4 31 15.5 q14 11.5 22 27.5 q8 16 8 34 q0 18 -2 42 q-1 13 -3 41 q-2 24 -3 36 q-1 18 -5 55 q-4 44 -5 66 q-3 36 -3 65 q0 31 17 49 q16 17 46 22 q34 5 68 0 q15 -1 28 -9 q13 -8 21 -21 q8 -13 10 -28 q5 -51 1 -103 q-2 -35 -10.5 -104 q-8.5 -69 -10.5 -104 q-1 -16 2.5 -32 q3.5 -16 10.5 -30 q13 -23 32 -35 q18 -11 42 -14 q20 -2 47 0 q38 3 63 24 q25 21 33 56 q18 72 17 145 q-1 42 -4 93 q-2 31 -7 94 q-4 60 -6 90 q-1 12 0 35 q0 12 0 18 l8 -1 Z"},
        {title:"", id:"13", sample:"", manual:"", paths:"M767 688 q-5 -18 -15 -50 q-23 -75 -34 -111 l-4 -14 q-25 -79 -39 -118 q-3 -11 -2 -17 q1 -6 7 -8 q5 -2 16 -3 l1 0 q27 -1 36 0 q14 1 21 6 q7 5 13 18 q3 9 12 35 l0 0 q51 155 76 232 q7 15 16 28 l8 -2 q0 -14 -3 -27 q-59 -179 -93 -284 q-1 -8 -7 -15 q-6 -7 -14 -9.5 q-8 -2.5 -17 -1.5 q-21 2 -67 4 l-38 1 l19 62 q53 169 80 256 q-41 0 -81 -5 q-6 -1 -13 -11 q-5 -8 -8 -18 q-21 -62 -62 -187 l-31 -96 l-115 0 q-10 0 -14 3 q-4 3 -4 10 q0 5 3 14 q23 71 67 214 l13 40 q2 7 6 23 l3 9 q-41 0 -82 -5 q-5 -1 -11 -8 q-5 -7 -7 -15 q-56 -166 -85 -261 q-4 -14 -11.5 -19.5 q-7.5 -5.5 -21.5 -4.5 q-24 1 -72 0 q-26 0 -40 0 l3 13 q3 14 5 21 l7 22 q52 170 80 255 q1 4 5 9 q2 3 7.5 7.5 q5.5 4.5 7.5 7.5 l10 -7 l-98 -309 q39 -2 79 1 q6 1 12 9 q6 8 8 16 q53 156 83 253 q6 20 16 28 q11 9 31 8 q15 -1 33 -1 q11 0 33 0 q25 1 37 1 l-95 -312 q8 -1 23 -3 q17 -2 25 -2 q13 -1 23 1 q7 1 15 11 q7 9 11 19 q14 41 42 126 q22 69 34 103 q3 9 7 22 q5 15 7 20 q3 7 8 10 q5 3 16 4 q7 0 28 1 l13 0 q19 1 58 1 l20 0 Z"},
        {title:"", id:"14", sample:"", manual:"", paths:"M285 347 q5 18 15 50 q23 75 34 111 l4 14 q25 79 39 118 q3 11 2 17 q-1 6 -7 8 q-5 2 -16 3 l-1 0 q-27 1 -36 0 q-14 -1 -21 -6 q-7 -5 -13 -18 q-3 -9 -12 -35 l0 0 q-51 -155 -76 -232 q-7 -15 -16 -28 l-8 2 q0 14 3 27 q59 179 93 284 q1 8 7 15 q6 7 14 9.5 q8 2.5 17 1.5 q21 -2 67 -4 l38 -1 l-19 -62 q-53 -169 -80 -256 q41 0 81 5 q6 1 13 11 q5 8 8 18 q21 62 62 187 l31 96 l115 0 q10 0 14 -3 q4 -3 4 -10 q0 -5 -3 -14 q-23 -71 -67 -214 l-13 -40 q-2 -7 -6 -23 l-3 -9 q41 0 82 5 q5 1 11 8 q5 7 7 15 q56 166 85 261 q4 14 11.5 19.5 q7.5 5.5 21.5 4.5 q24 -1 72 0 q26 0 40 0 l-3 -13 q-3 -14 -5 -21 l-7 -22 q-52 -170 -80 -255 q-1 -4 -5 -9 q-2 -3 -7.5 -7.5 q-5.5 -4.5 -7.5 -7.5 l-10 7 l98 309 q-39 2 -79 -1 q-6 -1 -12 -9 q-6 -8 -8 -16 q-53 -156 -83 -253 q-6 -20 -16 -28 q-11 -9 -31 -8 q-15 1 -33 1 q-11 0 -33 0 q-25 -1 -37 -1 l95 312 q-8 1 -23 3 q-17 2 -25 2 q-13 1 -23 -1 q-7 -1 -15 -11 q-7 -9 -11 -19 q-14 -41 -42 -126 q-22 -69 -34 -103 q-3 -9 -7 -22 q-5 -15 -7 -20 q-3 -7 -8 -10 q-5 -3 -16 -4 q-7 0 -28 -1 l-13 0 q-19 -1 -58 -1 l-20 0 Z"},
        {title:"", id:"15", sample:"", manual:"", paths:"M790 227 q-10 -3 -20 -5 l-39 -3 q-95 -9 -143 -12 l-23 -2 q-50 -4 -75 -5 q-42 -2 -76 0 q-40 2 -75 10 q-67 14 -95.5 52.5 q-28.5 38.5 -23.5 106.5 q3 37 18.5 63 q15.5 26 42.5 39.5 q27 13.5 64 11.5 q20 0 44 -3 q15 -1 44 -5 q31 -4 47 -5 q14 -2 41 -5 q37 -4 56 -5 q31 -3 55 -3 q36 -1 54 22 q18 21 18 64 q0 26 -7.5 42.5 q-7.5 16.5 -22.5 25 q-15 8.5 -41 9.5 q-50 2 -100 -4 q-24 -2 -72 -7 q-39 -5 -58 -7 q-33 -3 -59 -4 q-40 -1 -65 19 q-25 19 -32 54 q-9 42 5 72.5 q14 30.5 49 49.5 q19 10 41 15 q58 15 123 17 q56 2 123 -5 q48 -5 123 -17 q2 -1 3 -2 q1 -1 4 -4 q4 -4 8 -7 l-120 5 q-64 4 -96 5 q-54 3 -98 4 q-30 1 -59.5 -8.5 q-29.5 -9.5 -54.5 -27.5 q-16 -10 -26 -25 q-10 -15 -12 -32.5 q-2 -17.5 3 -35.5 q4 -17 15.5 -31 q11.5 -14 27.5 -22 q16 -8 34 -8 q18 0 42 2 q13 1 41 3 q24 2 36 3 q18 1 55 5 q44 4 66 5 q36 3 65 3 q31 0 49 -17 q17 -16 22 -46 q5 -34 0 -68 q-1 -15 -9 -28 q-8 -13 -21 -21 q-13 -8 -28 -10 q-51 -5 -103 -1 q-35 2 -104 10.5 q-69 8.5 -104 10.5 q-16 1 -32 -2.5 q-16 -3.5 -30 -10.5 q-23 -13 -35 -32 q-11 -18 -14 -42 q-2 -20 0 -47 q3 -38 24 -63 q21 -25 56 -33 q72 -18 145 -17 q42 1 93 4 q31 2 94 7 q60 4 90 6 q12 1 35 0 q12 0 18 0 l-1 -8 Z"},
        {title:"", id:"16", sample:"", manual:"", paths:"M787 215 q-2 13 -2 27 q1 16 3 47 q4 45 4 67 q1 24 3 73 q4 68 5 102 q1 57 -1 102 q-2 66 -32 101 q-30 34 -86 39 q-35 3 -62.5 -8.5 q-27.5 -11.5 -42.5 -36.5 q-16 -26 -17 -61 q0 -39 5 -79 q2 -23 6 -69 q6 -51 8 -76 q3 -43 4 -77 q1 -40 -24 -61 q-24 -20 -70 -20 q-47 1 -71 22 q-26 21 -25 61 q0 28 3 62 q1 20 5 61 q4 43 5 65 q6 62 4 125 q-2 29 -16 44 q-13 14 -39 19 q-26 5 -43 3 q-18 -3 -31 -12.5 q-13 -9.5 -21 -28.5 q-22 -45 -30 -95 q-9 -68 -4 -149 q3 -60 16 -148 q1 -6 2 -18 l0 -7 l-7 -1 q-8 14 -11 30 q-1 24 -4 71 q-4 79 -5 118 q-2 65 -1 118 q1 25 14 55 q10 23 29 53 q15 26 45 32 q23 5 57 -2 q29 -6 46 -23 q17 -18 18 -46 q3 -74 -2 -148 q-1 -23 -6 -70 q-4 -35 -5 -53 q-2 -29 -2 -53 q0 -21 10 -37 q9 -14 26 -22 q17 -8 40 -9 q36 -1 57 16 q21 17 24 50 q3 50 -3 100 q-2 27 -7 82 q-4 44 -6 66 q-3 37 -5 66 q0 15 4 29.5 q4 14.5 12 26.5 q16 27 47 42 q28 13 63 13 q35 0 64 -15 q32 -15 49 -42 q21 -32 30 -73 q8 -35 7 -78 q-2 -52 -6 -117 q-2 -39 -8 -117 l-4 -67 q-1 -16 -5 -46 q-2 -15 -3 -23 l-8 0 Z"},
        {title:"", id:"17", sample:"", manual:"", paths:"M229 235 q13 2 27 2 q16 -1 47 -3 q45 -4 67 -4 q24 -1 73 -3 q68 -4 102 -5 q57 -1 102 1 q66 2 101 32 q34 30 39 86 q3 35 -8.5 62.5 q-11.5 27.5 -36.5 42.5 q-26 16 -61 17 q-39 0 -79 -5 q-23 -2 -69 -6 q-51 -6 -76 -8 q-43 -3 -77 -4 q-40 -1 -61 24 q-20 24 -20 70 q1 47 22 71 q21 26 61 25 q28 0 62 -3 q20 -1 61 -5 q43 -4 65 -5 q62 -6 125 -4 q29 2 44 16 q14 13 19 39 q5 26 3 43 q-3 18 -12.5 31 q-9.5 13 -28.5 21 q-45 22 -95 30 q-68 9 -149 4 q-60 -3 -148 -16 q-6 -1 -18 -2 l-7 0 l-1 7 q14 8 30 11 q24 1 71 4 q79 4 118 5 q65 2 118 1 q25 -1 55 -14 q23 -10 53 -29 q26 -15 32 -45 q5 -23 -2 -57 q-6 -29 -23 -46 q-18 -17 -46 -18 q-74 -3 -148 2 q-23 1 -70 6 q-35 4 -53 5 q-29 2 -53 2 q-21 0 -37 -10 q-14 -9 -22 -26 q-8 -17 -9 -40 q-1 -36 16 -57 q17 -21 50 -24 q50 -3 100 3 q27 2 82 7 q44 4 66 6 q37 3 66 5 q15 0 29.5 -4 q14.5 -4 26.5 -12 q27 -16 42 -47 q13 -28 13 -63 q0 -35 -15 -64 q-15 -32 -42 -49 q-32 -21 -73 -30 q-35 -8 -78 -7 q-52 2 -117 6 q-39 2 -117 8 l-67 4 q-16 1 -46 5 q-15 2 -23 3 l0 8 Z"},
        {title:"", id:"18", sample:"", manual:"", paths:"M429 233 l76 0 q16 0 21 1 q8 1 11.5 4 q3.5 3 4.5 10 q0 6 0 21 l4 465 l0 33 q12 0 34 0 q41 -1 62 0 q11 1 17 -2 q6 -3 9 -10 q3 -7 3 -18 q0 -121 3 -364 l2 -99 q0 -7 1 -22 l1 -9 l115 0 l0 488 l11 0 l0 -507 l-147 0 l0 163 q-1 196 -1 294 q0 31 -3 45 q-4 17 -12.5 23.5 q-8.5 6.5 -26.5 5.5 q-15 -1 -45 -9 q-4 -2 -8 -5 l0 -523 l-153 0 l0 554 l-162 0 l0 -545 l-11 0 l0 565 l194 0 l0 -559 Z"},
        {title:"", id:"19", sample:"", manual:"", paths:"M791 414 l0 76 q0 16 -1 21 q-1 8 -4 11.5 q-3 3.5 -10 4.5 q-6 0 -21 0 l-465 4 l-33 0 q0 12 0 34 q1 41 0 62 q-1 11 2 17 q3 6 10 9 q7 3 18 3 q121 0 364 3 l99 2 q7 0 22 1 l9 1 l0 115 l-488 0 l0 11 l507 0 l0 -147 l-163 0 q-196 -1 -294 -1 q-31 0 -45 -3 q-17 -4 -23.5 -12.5 q-6.5 -8.5 -5.5 -26.5 q1 -15 9 -45 q2 -4 5 -8 l523 0 l0 -153 l-554 0 l0 -162 l545 0 l0 -11 l-565 0 l0 194 l559 0 Z"},
        {title:"", id:"20", sample:"", manual:"", paths:"M637 793 l149 0 l0 -518 l-10 0 l0 499 l-123 0 l0 -387 q0 -81 -1 -121 q0 -3 -2.5 -8.5 q-2.5 -5.5 -6 -9 q-3.5 -3.5 -5.5 -3.5 q-19 -1 -42 -1 q-14 -1 -43 0 l-31 0 l0 534 l-119 0 l0 -563 l-193 0 l0 569 l7 0 l1 -10 q1 -12 1 -18 l3 -241 q2 -166 2 -249 q0 -20 8 -28 q8 -8 27 -8 q14 1 43 0 q22 -1 33 -1 q20 0 27 1 q11 1 15 5 q4 4 6 13 q1 8 1 27 q1 125 2 377 l1 113 l0 31 l154 0 l0 -537 l96 4 l0 530 Z"},
        {title:"", id:"21", sample:"", manual:"", paths:"M210 644 l0 149 l518 0 l0 -10 l-499 0 l0 -123 l387 0 q81 0 121 -1 q3 0 8.5 -2.5 q5.5 -2.5 9 -6 q3.5 -3.5 3.5 -5.5 q1 -19 1 -42 q1 -14 0 -43 l0 -31 l-534 0 l0 -119 l563 0 l0 -193 l-569 0 l0 7 l10 1 q12 1 18 1 l241 3 q166 2 249 2 q20 0 28 8 q8 8 8 27 q-1 14 0 43 q1 22 1 33 q0 20 -1 27 q-1 11 -5 15 q-4 4 -13 6 q-8 1 -27 1 q-125 1 -377 2 l-113 1 l-31 0 l0 154 l537 0 l-4 96 l-530 0 Z"},
        {title:"", id:"22", sample:"", manual:"", paths:"M670 665 q8 17 19 44 l3 9 q10 26 6 47.5 q-4 21.5 -21.5 33 q-17.5 11.5 -46.5 13.5 q-12 0 -39 0 l-21 0 q3 6 8 16 q9 23 13 33 q9 25 3 46 q-5 20 -22.5 32 q-17.5 12 -43.5 12 q-39 1 -74 -13 q-30 -11 -63 -35 q-57 -39 -128 -90 q-42 -30 -126 -92 l-84 -61 q-5 -5 -9 -10 q8 -14 13 -17 q7 -6 14 -3 q7 2 20 11 l54 38 q85 62 128 91 q72 51 129 91 q36 24 78 33 q9 2 20 1 q14 -1 23 -4 q11 -4 14.5 -9.5 q3.5 -5.5 1.5 -18.5 q-2 -10 -7 -22 q-4 -12 -9 -19 q-34 -42 -75 -77 q-51 -42 -153 -123 q-72 -58 -109 -87 q-2 -1 -7 -5 q-8 -5 -11 -7 q-5 -5 -6 -10 q-2 -6 3 -14 q0 -1 8 0.5 q8 1.5 17 4.5 q10 4 14 7 q45 30 134 93 q114 79 172 119 q34 24 75 32 q17 4 29 0 q13 -4 20 -13 q7 -9 6 -22 q-1 -13 -10 -28 q-24 -43 -62 -74 q-62 -51 -139 -112 q-47 -38 -142 -111 l-10 -8 q-13 -11 -14.5 -21.5 q-1.5 -10.5 11.5 -25.5 l11 7 q15 10 22 15 l48 36 q61 46 92 69 q51 37 93 67 q16 11 38 25 q14 7 40 22 q26 14 39 22 q7 4 14 6 q23 6 37 4 q19 -1 31.5 -16.5 q12.5 -15.5 7.5 -33.5 q-3 -15 -16 -32 q-32 -40 -72 -74 q-42 -34 -95 -74 q-31 -25 -95 -75 l-73 -56 q-6 -4 -10 -10 q-7 -9 -18 -30 q4 2 12 3 q8 1 12 2 q6 1 10 4 q33 24 100 73 q94 67 141 100 q59 38 122 71 q18 9 39 9 q19 1 31.5 -8 q12.5 -9 16.5 -22 q2 -15 -6 -31 q-19 -40 -53 -71 q-50 -39 -113 -88 q-38 -30 -115 -87 l-76 -59 l-25 -18 q7 -16 16 -20 q6 -3 17 1 q5 3 16 11 l1 1 q177 127 265 192 q31 23 93 72 l44 35 q4 2 6 5 q8 9 21 28 l7 10 l-40 11 l2 7 q2 10 3 16 q1 11 -2 22.5 q-3 11.5 -9.5 21 q-6.5 9.5 -16.5 15.5 q-10 6 -21 8 q-14 3 -28 3 q-18 -3 -26 -3 q-11 1 -15.5 6 q-4.5 5 -2 16 q2.5 11 11.5 31 q8 22 3 42 q-3 18 -19.5 30 q-16.5 12 -40.5 14 q-17 1 -53 0 q-16 0 -26 0 Z"},
        {title:"", id:"23", sample:"", manual:"", paths:"M342 683 q-17 7 -44 18 l-9 4 q-26 10 -47.5 6 q-21.5 -4 -33.5 -22 q-12 -18 -13 -46 q0 -13 0 -39 l0 -21 q-6 3 -17 7 q-22 10 -32 14 q-25 8 -46 3 q-20 -5 -32 -22.5 q-12 -17.5 -12 -44.5 q-1 -38 12 -73 q12 -30 36 -64 q39 -56 90 -127 q30 -42 92 -126 l61 -84 q4 -5 10 -9 q14 8 17 13 q5 6 3 13 q-2 8 -12 21 l-38 54 q-61 85 -90 128 q-52 71 -91 129 q-24 36 -33 78 q-2 9 -2 20 q2 13 5 22 q4 12 9.5 15.5 q5.5 3.5 17.5 1.5 q11 -2 23 -7 q12 -5 19 -10 q42 -33 77 -74 q42 -51 123 -153 q58 -73 86 -109 q2 -2 6 -7 q4 -8 7 -11 q5 -5 9 -7 q7 -1 15 3 q0 1 -1 8.5 q-1 7.5 -4 16.5 q-4 10 -8 15 q-30 45 -92 133 q-79 115 -119 172 q-24 35 -33 76 q-3 17 1 29 q4 13 13 19.5 q9 6.5 22 6 q13 -0.5 28 -9.5 q43 -24 74 -62 q50 -62 112 -140 q38 -47 111 -142 l7 -9 q11 -13 21.5 -14.5 q10.5 -1.5 26.5 11.5 l-7 11 q-10 15 -16 22 l-36 48 q-45 61 -68 91 q-37 52 -67 93 q-11 17 -25 39 q-8 13 -22 40 q-15 25 -22 38 q-4 7 -6 15 q-7 22 -5 36 q2 20 17 32 q15 12 34 7 q15 -2 32 -16 q40 -31 73 -71 q34 -42 75 -95 q25 -31 74 -96 l56 -73 q5 -5 10 -10 q10 -6 31 -17 q-2 4 -3 12 q-1 8 -2 12 q-1 6 -4 10 q-24 33 -73 100 q-67 93 -100 141 q-38 59 -71 122 q-9 18 -10 39 q0 18 8.5 31 q8.5 13 22.5 17 q14 2 30 -6 q41 -20 71 -53 q40 -50 89 -114 q30 -38 87 -115 l58 -76 l19 -25 q16 7 19 16 q4 7 0 17 q-3 6 -11 17 l-1 1 q-127 177 -192 265 q-23 31 -72 93 l-35 43 q-2 4 -5 7 q-10 8 -28 21 l-10 7 l-12 -40 l-6 1 q-10 3 -16 3 q-11 2 -22.5 -1 q-11.5 -3 -21 -9.5 q-9.5 -6.5 -15.5 -16.5 q-6 -10 -8 -22 q-3 -13 -3 -27 q2 -18 3 -27 q-1 -10 -6 -14.5 q-5 -4.5 -16 -2 q-11 2.5 -31 10.5 q-22 9 -42 4 q-18 -4 -30.5 -20.5 q-12.5 -16.5 -13.5 -39.5 q-1 -17 0 -53 q0 -16 0 -26 Z"},
        {title:"", id:"24", sample:"", manual:"", paths:"M324 354 q-7 -17 -18 -44 l-4 -8 q-10 -27 -6 -48 q4 -21 21.5 -33 q17.5 -12 46.5 -13 q13 -1 39 -1 l21 1 q-3 -6 -8 -17 q-9 -22 -13 -32 q-9 -26 -3 -46 q5 -20 22.5 -32 q17.5 -12 44.5 -12 q38 -2 73 12 q30 11 63 35 q57 40 128 90 q42 31 126 92 l84 62 q5 4 9 9 q-8 14 -13 18 q-7 5 -14 2 q-7 -1 -20 -11 l-54 -38 q-85 -61 -128 -91 q-71 -51 -129 -90 q-36 -25 -78 -34 q-9 -1 -20 -1 q-14 1 -22 5 q-12 3 -15.5 8.5 q-3.5 5.5 -1.5 18.5 q2 10 7 23 q4 12 10 18 q33 43 74 77 q51 42 153 123 q73 59 109 87 q2 2 7 5 q8 5 11 7 q5 5 6 10 q2 6 -3 14 q0 1 -8 -0.5 q-8 -1.5 -17 -4.5 q-9 -3 -14 -7 q-45 -30 -133 -92 q-115 -80 -173 -119 q-34 -25 -75 -33 q-17 -4 -29 1 q-13 4 -19.5 12.5 q-6.5 8.5 -6 22 q0.5 13.5 9.5 28.5 q24 43 62 74 q62 50 140 112 q46 37 141 111 l10 7 q13 11 14.5 21.5 q1.5 10.5 -11.5 25.5 l-11 -7 q-15 -10 -22 -15 l-48 -36 q-61 -45 -91 -68 q-52 -38 -94 -68 q-16 -11 -38 -25 q-13 -7 -40 -22 q-25 -14 -39 -21 q-7 -4 -14 -6 q-22 -7 -36 -5 q-20 1 -32 16.5 q-12 15.5 -8 34.5 q3 14 16 32 q32 39 72 73 q42 34 95 75 q31 25 95 74 l73 56 q6 4 10 10 q7 10 18 30 q-4 -1 -12 -2 q-8 -1 -12 -3 q-6 0 -10 -3 q-33 -24 -100 -73 q-93 -67 -141 -101 q-59 -38 -122 -71 q-18 -8 -39 -9 q-19 0 -31.5 8.5 q-12.5 8.5 -16.5 21.5 q-2 15 6 31 q20 41 53 71 q50 40 114 89 q37 29 114 87 l77 58 l24 19 q-7 16 -15 19 q-7 4 -18 0 q-5 -3 -16 -12 l-1 0 q-177 -128 -265 -192 q-31 -23 -93 -72 l-44 -36 q-3 -1 -6 -4 q-8 -10 -21 -29 l-7 -10 l40 -11 l-2 -6 q-2 -11 -3 -16 q-1 -11 2 -22.5 q3 -11.5 9.5 -21 q6.5 -9.5 16.5 -16 q10 -6.5 21 -7.5 q14 -4 28 -3 q18 2 27 2 q10 -1 14.5 -5.5 q4.5 -4.5 2 -16 q-2.5 -11.5 -10.5 -31.5 q-9 -21 -4 -41 q3 -19 19.5 -31 q16.5 -12 40.5 -13 q17 -1 53 -1 q16 0 26 0 Z"},
        {title:"", id:"25", sample:"", manual:"", paths:"M653 337 q16 -8 43 -19 l9 -3 q27 -10 48 -6 q21 4 33 21.5 q12 17.5 13 45.5 q0 13 1 40 l-1 20 q6 -3 17 -7 q22 -10 32 -13 q25 -9 46 -3 q20 5 32 22.5 q12 17.5 12 43.5 q1 39 -12 73 q-12 31 -35 64 q-40 57 -91 127 q-30 43 -92 126 l-61 84 q-4 6 -9 10 q-14 -8 -18 -14 q-5 -6 -3 -13 q2 -7 12 -20 l38 -54 q61 -85 91 -128 q51 -72 90 -130 q24 -35 33 -77 q2 -9 2 -21 q-1 -13 -5 -22 q-4 -11 -9.5 -14.5 q-5.5 -3.5 -17.5 -1.5 q-11 2 -23 6 q-12 5 -18 10 q-43 33 -78 75 q-42 51 -123 153 q-58 72 -86 108 q-2 3 -6 8 q-4 7 -7 11 q-5 5 -9 6 q-7 2 -14 -3 q-1 -1 0.5 -8.5 q1.5 -7.5 4.5 -16.5 q3 -10 7 -15 q30 -45 92 -133 q79 -114 119 -172 q24 -34 33 -75 q4 -17 -1 -30 q-4 -13 -13 -19.5 q-9 -6.5 -22 -5.5 q-13 1 -28 9 q-43 25 -74 63 q-50 62 -112 139 q-38 47 -111 142 l-7 10 q-11 13 -21.5 14.5 q-10.5 1.5 -26.5 -11.5 l7 -11 q10 -15 16 -22 l36 -48 q45 -61 68 -92 q38 -52 67 -93 q11 -17 25 -39 q8 -13 23 -39 q14 -26 21 -39 q4 -7 6 -14 q7 -23 5 -37 q-2 -20 -17 -32 q-15 -12 -34 -7 q-14 3 -32 16 q-40 31 -73 71 q-34 42 -75 95 q-25 32 -74 96 l-56 73 q-4 6 -10 10 q-10 6 -31 17 q2 -3 3 -11 q1 -8 3 -12 q0 -6 3 -10 q24 -34 73 -101 q67 -93 100 -140 q38 -59 71 -122 q9 -19 10 -39 q0 -19 -8.5 -31.5 q-8.5 -12.5 -22.5 -16.5 q-14 -2 -30 6 q-41 19 -71 53 q-40 50 -89 113 q-29 38 -87 115 l-58 76 l-19 25 q-16 -7 -19 -16 q-4 -6 0 -17 q3 -5 11 -17 l1 0 q127 -177 192 -265 q23 -31 72 -93 l35 -44 q2 -4 5 -6 q10 -8 29 -22 l9 -6 l12 40 l6 -2 q10 -2 16 -3 q11 -2 22.5 1 q11.5 3 21 9.5 q9.5 6.5 15.5 17 q6 10.5 8 21.5 q3 14 3 27 q-2 19 -2 27 q0 11 5 15 q5 4 16 2 q11 -2 32 -11 q21 -9 41 -4 q19 4 31 20.5 q12 16.5 13 39.5 q1 17 0 53 q1 17 1 27 Z"},
        {title:"", id:"26", sample:"", manual:"", paths:"M732 509 q8 -6 21 -16 q29 -21 42 -32 q18 -15 24 -34.5 q6 -19.5 -2 -36.5 q-8 -19 -28 -31 q-19 -11 -27.5 -18.5 q-8.5 -7.5 -8 -14 q0.5 -6.5 8.5 -13.5 q7 -5 23 -14 q11 -8 20 -19 q8 -8 12.5 -19 q4.5 -11 4 -22.5 q-0.5 -11.5 -5 -22.5 q-4.5 -11 -12.5 -19 q-4 -4 -12 -11 l-5 -4 l25 -33 l-11 -4 q-22 -7 -34 -10 q-4 -1 -8 0 l-56 -2 q-79 -2 -118 -2 q-109 1 -327 5 l-1 0 q-14 0 -20 1 q-11 3 -14 10 q-5 8 -1 25 l31 0 l96 1 q96 0 144 1 q80 1 144 3 q45 4 85 25 q16 8 23 21 q5 13 0 27.5 q-5 14.5 -20 25.5 q-17 12 -37 16 q-70 11 -140 16 q-58 2 -173 4 q-83 1 -124 2 q-5 0 -10 3 q-4 1 -11 5 q-7 4 -11 5 q21 10 32 14 q7 2 14 2 l92 1 q81 1 121 2 q67 1 121 3 q52 3 101 16 q21 6 32 16 q15 12 14.5 31.5 q-0.5 19.5 -15.5 32.5 q-10 10 -32 18 q-7 3 -15 4 q-15 2 -44 6 q-30 4 -45 6 q-26 2 -46 3 q-51 1 -115 2 q-38 0 -114 0 l-60 0 q-9 0 -27 1 l-13 1 q-1 20 6.5 27.5 q7.5 7.5 24.5 8.5 l12 0 q120 2 180 4 q99 3 179 6 q49 2 94 22 q16 7 24.5 17 q8.5 10 8.5 21 q0 11 -8 22 q-7 11 -23 18 q-38 18 -80 19 q-70 3 -209 8 q-108 3 -162 6 q-6 0 -16 3 q-9 3 -16 6.5 q-7 3.5 -7 4.5 q1 9 6 13 q4 3 11 4 q4 0 13 -1 q6 0 9 0 q46 1 139 4 q130 4 196 7 q54 3 106 17 q8 2 19 9 q11 7 19 14 q9 9 9.5 15.5 q0.5 6.5 -6.5 16.5 q-5 8 -15 17 q-9 7 -17 11 q-39 18 -82 20 q-70 3 -158 5 q-52 2 -157 4 l-66 2 q-16 0 -23 3 q-7 2 -9 10 q-2 6 0 22 q6 2 13 2 l104 -1 q104 -1 156 -2 q87 -2 156 -4 q41 -1 72 -10 q36 -10 66 -34 q21 -16 28 -36 q7 -20 -1 -39 q-8 -20 -30 -35 q-9 -6 -30 -18 q-10 -6 -16 -9 l17 -12 q21 -16 31 -24 q22 -18 29 -38 q7 -20 -2.5 -39.5 q-9.5 -19.5 -33.5 -34.5 l-8 -5 q-25 -15 -41 -24 Z"},
        {title:"", id:"27", sample:"", manual:"", paths:"M309 496 q-8 6 -21 16 q-29 21 -42 32 q-18 15 -24 34.5 q-6 19.5 2 36.5 q8 19 28 31 q19 11 27.5 18.5 q8.5 7.5 8 14 q-0.5 6.5 -8.5 13.5 q-7 5 -23 14 q-11 8 -20 19 q-8 8 -12.5 19 q-4.5 11 -4 22.5 q0.5 11.5 5 22.5 q4.5 11 12.5 19 q4 4 12 11 l5 4 l-25 33 l11 4 q22 7 34 10 q4 1 8 0 l56 2 q79 2 118 2 q109 -1 327 -5 l1 0 q14 0 20 -1 q11 -3 14 -10 q5 -8 1 -25 l-31 0 l-96 -1 q-96 0 -144 -1 q-80 -1 -144 -3 q-45 -4 -85 -25 q-16 -8 -23 -21 q-5 -13 0 -27.5 q5 -14.5 20 -25.5 q17 -12 37 -16 q70 -11 140 -16 q58 -2 173 -4 q83 -1 124 -2 q5 0 10 -3 q4 -1 11 -5 q7 -4 11 -5 q-21 -10 -32 -14 q-7 -2 -14 -2 l-92 -1 q-81 -1 -121 -2 q-67 -1 -121 -3 q-52 -3 -101 -16 q-21 -6 -32 -16 q-15 -12 -14.5 -31.5 q0.5 -19.5 15.5 -32.5 q10 -10 32 -18 q7 -3 15 -4 q15 -2 44 -6 q30 -4 45 -6 q26 -2 46 -3 q51 -1 115 -2 q38 0 114 0 l60 0 q9 0 27 -1 l13 -1 q1 -20 -6.5 -27.5 q-7.5 -7.5 -24.5 -8.5 l-12 0 q-120 -2 -180 -4 q-99 -3 -179 -6 q-49 -2 -94 -22 q-16 -7 -24.5 -17 q-8.5 -10 -8.5 -21 q0 -11 8 -22 q7 -11 23 -18 q38 -18 80 -19 q70 -3 209 -8 q108 -3 162 -6 q6 0 16 -3 q9 -3 16 -6.5 q7 -3.5 7 -4.5 q-1 -9 -6 -13 q-4 -3 -11 -4 q-4 0 -13 1 q-6 0 -9 0 q-46 -1 -139 -4 q-130 -4 -196 -7 q-54 -3 -106 -17 q-8 -2 -19 -9 q-11 -7 -19 -14 q-9 -9 -9.5 -15.5 q-0.5 -6.5 6.5 -16.5 q5 -8 15 -17 q9 -7 17 -11 q39 -18 82 -20 q70 -3 158 -5 q52 -2 157 -4 l66 -2 q16 0 23 -3 q7 -2 9 -10 q2 -6 0 -22 q-6 -2 -13 -2 l-104 1 q-104 1 -156 2 q-87 2 -156 4 q-41 1 -72 10 q-36 10 -66 34 q-21 16 -28 36 q-7 20 1 39 q8 20 30 35 q9 6 30 18 q10 6 16 9 l-17 12 q-21 16 -31 24 q-22 18 -29 38 q-7 20 2.5 39.5 q9.5 19.5 33.5 34.5 l8 5 q25 15 41 24 Z"},
        {title:"", id:"28", sample:"", manual:"", paths:"M527 291 q-6 -8 -16 -21 q-21 -29 -32 -42 q-15 -18 -34.5 -24 q-19.5 -6 -36.5 2 q-19 8 -31 28 q-11 19 -18.5 27.5 q-7.5 8.5 -14 8 q-6.5 -0.5 -13.5 -8.5 q-5 -7 -14 -23 q-8 -11 -19 -20 q-8 -8 -19 -12.5 q-11 -4.5 -22.5 -4 q-11.5 0.5 -22.5 5 q-11 4.5 -19 12.5 q-4 4 -11 12 l-4 5 l-33 -25 l-4 11 q-7 22 -10 34 q-1 4 0 8 l-2 56 q-2 79 -2 118 q1 109 5 327 l0 1 q0 14 1 20 q3 11 10 14 q8 5 25 1 l0 -31 l1 -96 q0 -96 1 -144 q1 -80 3 -144 q4 -45 25 -85 q8 -16 21 -23 q13 -5 27.5 0 q14.5 5 25.5 20 q12 17 16 37 q11 70 16 140 q2 58 4 173 q1 83 2 124 q0 5 3 10 q1 4 5 11 q4 7 5 11 q10 -21 14 -32 q2 -7 2 -14 l1 -92 q1 -81 2 -121 q1 -67 3 -121 q3 -52 16 -101 q6 -21 16 -32 q12 -15 31.5 -14.5 q19.5 0.5 32.5 15.5 q10 10 18 32 q3 7 4 15 q2 15 6 44 q4 30 6 45 q2 26 3 46 q1 51 2 115 q0 38 0 114 l0 60 q0 9 1 27 l1 13 q20 1 27.5 -6.5 q7.5 -7.5 8.5 -24.5 l0 -12 q2 -120 4 -180 q3 -99 6 -179 q2 -49 22 -94 q7 -16 17 -24.5 q10 -8.5 21 -8.5 q11 0 22 8 q11 7 18 23 q18 38 19 80 q3 70 8 209 q3 108 6 162 q0 6 3 16 q3 9 6.5 16 q3.5 7 4.5 7 q9 -1 13 -6 q3 -4 4 -11 q0 -4 -1 -13 q0 -6 0 -9 q1 -46 4 -139 q4 -130 7 -196 q3 -54 17 -106 q2 -8 9 -19 q7 -11 14 -19 q9 -9 15.5 -9.5 q6.5 -0.5 16.5 6.5 q8 5 17 15 q7 9 11 17 q18 39 20 82 q3 70 5 158 q2 52 4 157 l2 66 q0 16 3 23 q2 7 10 9 q6 2 22 0 q2 -6 2 -13 l-1 -104 q-1 -104 -2 -156 q-2 -87 -4 -156 q-1 -41 -10 -72 q-10 -36 -34 -66 q-16 -21 -36 -28 q-20 -7 -39 1 q-20 8 -35 30 q-6 9 -18 30 q-6 10 -9 16 l-12 -17 q-16 -21 -24 -31 q-18 -22 -38 -29 q-20 -7 -39.5 2.5 q-19.5 9.5 -34.5 33.5 l-5 8 q-15 25 -24 41 Z"},
        {title:"", id:"29", sample:"", manual:"", paths:"M527 714 q9 16 24 41 l5 8 q15 24 34.5 33.5 q19.5 9.5 39.5 2.5 q20 -7 38 -29 q8 -10 24 -31 l12 -17 q3 6 9 16 q12 21 18 30 q15 22 35 30 q19 8 39 1 q20 -7 36 -28 q24 -30 34 -66 q9 -31 10 -72 q2 -69 4 -156 q1 -52 2 -156 l1 -104 q0 -7 -2 -13 q-16 -2 -22 0 q-8 2 -10 9 q-3 7 -3 23 l-2 66 q-2 105 -4 157 q-2 88 -5 158 q-2 43 -20 82 q-4 8 -11 17 q-9 10 -17 15 q-10 7 -16.5 6.5 q-6.5 -0.5 -15.5 -9.5 q-7 -8 -14 -19 q-7 -11 -9 -19 q-14 -52 -17 -106 q-3 -66 -7 -196 q-3 -93 -4 -139 q0 -3 0 -9 q1 -9 1 -13 q-1 -7 -4 -11 q-4 -5 -13 -6 q-1 0 -4.5 7 q-3.5 7 -6.5 16 q-3 10 -3 16 q-3 54 -6 162 q-5 139 -8 209 q-1 42 -19 80 q-7 16 -18 23 q-11 8 -22 8 q-11 0 -21 -8.5 q-10 -8.5 -17 -24.5 q-20 -45 -22 -94 q-3 -80 -6 -179 q-2 -60 -4 -180 l0 -12 q-1 -17 -8.5 -24.5 q-7.5 -7.5 -27.5 -6.5 l-1 13 q-1 18 -1 27 l0 60 q0 76 0 114 q-1 64 -2 115 q-1 20 -3 46 q-2 15 -6 45 q-4 29 -6 44 q-1 8 -4 15 q-8 22 -18 32 q-13 15 -32.5 15.5 q-19.5 0.5 -31.5 -14.5 q-10 -11 -16 -32 q-13 -49 -16 -101 q-2 -54 -3 -121 q-1 -40 -2 -121 l-1 -92 q0 -7 -2 -14 q-4 -11 -14 -32 q-1 4 -5 11 q-4 7 -5 11 q-3 5 -3 10 q-1 41 -2 124 q-2 115 -4 173 q-5 70 -16 140 q-4 20 -16 37 q-11 15 -25.5 20 q-14.5 5 -27.5 0 q-13 -7 -21 -23 q-21 -40 -25 -85 q-2 -64 -3 -144 q-1 -48 -1 -144 l-1 -96 l0 -31 q-17 -4 -25 1 q-7 3 -10 14 q-1 6 -1 20 l0 1 q-4 218 -5 327 q0 39 2 118 l2 56 q-1 4 0 8 q3 12 10 34 l4 11 l33 -25 l4 5 q7 8 11 12 q8 8 19 12.5 q11 4.5 22.5 5 q11.5 0.5 22.5 -4 q11 -4.5 19 -12.5 q11 -9 19 -20 q9 -16 14 -23 q7 -8 13.5 -8.5 q6.5 -0.5 14 8 q7.5 8.5 18.5 27.5 q12 20 31 28 q17 8 36.5 2 q19.5 -6 34.5 -24 q11 -13 32 -42 q10 -13 16 -21 Z"},
        {title:"", id:"30", sample:"", manual:"", paths:"M505 182 q4 -21 -4 -28 q-6 -7 -20 -3 q-12 2 -27 12 q-13 8 -24 18 l6 4 q17 14 25 19 q13 9 22 11 q10 3 16 -4 q6 -8 6 -29 ZM570 363 q-4 0 -6 1 q-2 1 -3 3 q-1 8 10 11 q9 3 9 -5 q0 -3 -2 -5 q-1 -2 -4 -3 q-3 -1 -4 -2 ZM642 424 q-3 0 -5 2 q-2 2 -2 4 q0 5 3 8 q3 3 7 3 q4 1 5.5 -1 q1.5 -2 1.5 -5 q0 -8 -10 -11 ZM470 865 q0 3 1.5 5.5 q1.5 2.5 4.5 2.5 q4 1 7.5 -0.5 q3.5 -1.5 4.5 -6.5 q0 -1 -2.5 -3 q-2.5 -2 -4.5 -3 q-4 -1 -7 0.5 q-3 1.5 -4 4.5 ZM530 690 q0 -3 -2 -4.5 q-2 -1.5 -5 -1.5 q-3 0 -6.5 2 q-3.5 2 -3.5 6 q-1 2 2 4.5 q3 2.5 4 2.5 q4 0 7.5 -2.5 q3.5 -2.5 3.5 -6.5 ZM832 368 q-1 -1 -2 -3 q-2 -3 -3 -4 q-3 -2 -5.5 -2 q-2.5 0 -4.5 2.5 q-2 2.5 -1 5.5 q2 5 3 7 q3 3 7 3 q4 0 5 -2 q1 -2 1 -7 ZM799 324 q-1 0 -2 -3 q-2 -2 -3 -3 q-2 -2 -5 -2 q-3 0 -5 2 q-2 2 0 5 q1 5 3 8 q2 3 7 3 q3 0 4 -3 q1 -2 1 -7 ZM819 685 q-8 1 -10 6 q-2 3 -2 11 q0 1 2.5 2 q2.5 1 3.5 1 q5 -3 6.5 -7.5 q1.5 -4.5 -0.5 -12.5 ZM567 272 q-4 0 -5 1 q-3 1 -3 4 q1 8 11 8 q2 0 5 -2 q3 -2 3 -3 q0 -4 -3 -6 q-2 -1 -7 -2 q-1 0 -1 0 ZM565 557 q1 3 2 4 q1 2 4 2 q4 -1 7 -6 q1 -3 2 -8 q0 -3 -2 -5 q-2 -2 -5 -1 q-4 2 -6 5 q-2 3 -2 7 l0 2 ZM302 816 q0 -3 -3 -6 q-2 -1 -6 -3 l-1 -1 q-3 -1 -6 -0.5 q-3 0.5 -3 3.5 q-2 5 2 8 q2 1 8 3 l1 0 q2 1 4.5 0 q2.5 -1 3.5 -4 ZM676 231 q0 4 3 6 q1 2 5.5 3.5 q4.5 1.5 7 -0.5 q2.5 -2 2 -5.5 q-0.5 -3.5 -3 -6 q-2.5 -2.5 -6.5 -1.5 l-1 0 q-3 0 -5 0 q-2 1 -2 4 ZM673 573 q-1 -10 -8 -9 q-3 1 -5 4 q-1 3 0 7 l0 0 q1 4 2 6 q1 3 5 1 q1 0 3 -2 q0 -1 2 -4 q1 -2 1 -3 ZM656 724 q-4 1 -7.5 3 q-3.5 2 -5 5 q-1.5 3 0.5 5 q2 2 5 2 q4 0 7.5 -2 q3.5 -2 4.5 -6 q1 -3 -0.5 -5 q-1.5 -2 -4.5 -2 ZM612 746 q-4 1 -7.5 3 q-3.5 2 -4.5 5 q-1 3 0.5 5 q1.5 2 4.5 2 q4 0 7.5 -2.5 q3.5 -2.5 4.5 -6.5 q2 -2 0 -4.5 q-2 -2.5 -5 -1.5 ZM696 691 q-13 3 -14 11 q0 3 2 4.5 q2 1.5 6 1.5 q3 -1 6 -4 q3 -3 3 -7 q0 -2 -1 -3.5 q-1 -1.5 -2 -2.5 ZM718 386 q0 5 3.5 7.5 q3.5 2.5 7.5 3.5 q3 0 5 -1 q2 -1 1.5 -5 q-0.5 -4 -3.5 -7 q-3 -3 -7 -4 q-3 0 -5 1.5 q-2 1.5 -2 4.5 ZM302 701 q0 -4 -3 -7 q-3 -3 -7 -4 q-2 -1 -4.5 0.5 q-2.5 1.5 -2.5 4.5 q0 4 2.5 7 q2.5 3 6.5 4 q3 1 5.5 -0.5 q2.5 -1.5 2.5 -4.5 ZM335 734 q-1 -4 -3.5 -7 q-2.5 -3 -6.5 -4 q-2 -1 -4.5 0.5 q-2.5 1.5 -2.5 4.5 q0 4 2.5 7 q2.5 3 6.5 3 q3 1 5 -0.5 q2 -1.5 3 -3.5 ZM269 658 q0 -5 -2.5 -7.5 q-2.5 -2.5 -6.5 -3.5 q-3 -2 -5 0 q-2 2 -2 4 q-1 4 1.5 7.5 q2.5 3.5 7.5 3.5 q2 1 4.5 -0.5 q2.5 -1.5 2.5 -3.5 ZM615 288 q-8 -1 -9 6 q0 4 2.5 6 q2.5 2 6 2.5 q3.5 0.5 6.5 -2.5 q3 -3 2 -5.5 q-1 -2.5 -6 -5.5 q-1 -1 -2 -1 ZM659 310 q-9 -1 -9 6 q0 3 2.5 5.5 q2.5 2.5 6 2.5 q3.5 0 6.5 -2.5 q3 -2.5 2 -5 q-1 -2.5 -6 -5.5 q-2 -1 -2 -1 ZM611 389 q-4 -1 -6 0.5 q-2 1.5 -2 4.5 q-1 7 8 11 q3 1 5.5 -0.5 q2.5 -1.5 2.5 -4.5 q1 -4 -2 -7 q-1 -1 -5 -3 q-1 -1 -1 -1 ZM577 496 q-3 0 -5 1.5 q-2 1.5 -3 4.5 q-1 4 0 7 q0 3 4 4.5 q4 1.5 6 -0.5 q2 -2 2 -6 q2 -8 -4 -11 ZM333 406 q4 -1 7 -4 q3 -3 3.5 -6.5 q0.5 -3.5 -1.5 -4.5 q-1 -1 -4 -1 q-5 0 -8 3 q-3 3 -3 7 q-1 3 1 4.5 q2 1.5 5 1.5 ZM342 564 q-5 -2 -9 4 q-2 3 -1 6.5 q1 3.5 4 5 q3 1.5 6 0.5 q3 -1 4 -5 q1 -3 -0.5 -6 q-1.5 -3 -3.5 -5 ZM340 528 q0 3 1 4 q1 2 4 2 q4 0 6 -3 q2 -3 2 -8 l0 -1 q1 -3 0 -4 q-1 -2 -5 -2 q-4 0 -6 3 q-1 2 -2 7 q-1 0 -1 1 l1 1 ZM360 624 q-2 -7 -3 -9 q-3 -4 -7 -3 q-3 0 -4 3 q-1 1 -1 5 q2 10 10 9 q5 0 5 -5 ZM380 758 q0 -4 -2.5 -7 q-2.5 -3 -6.5 -3.5 q-4 -0.5 -6.5 1.5 q-2.5 2 -1.5 6 q0 6 10 7 q3 1 5 -0.5 q2 -1.5 2 -3.5 ZM371 277 q-5 3 -6 6 q-1 3 1 5 q2 2 5 1 l2 0 q5 0 7 -1 q3 -2 3 -6 q1 -5 -9 -6 l-3 1 ZM751 613 q-5 0 -7 3 q-2 2 -4 6 l0 1 q-1 3 0.5 4.5 q1.5 1.5 5 1.5 q3.5 0 6 -2 q2.5 -2 3.5 -6 q2 -6 -4 -8 ZM764 468 q-3 0 -4.5 2 q-1.5 2 -1.5 5 q0 5 1 8 q2 4 6 5 q3 0 5 -2 q2 -2 2 -5 q0 -4 -2 -8 q-2 -4 -6 -5 ZM164 466 q-3 0 -5 2.5 q-2 2.5 -2 4.5 q-1 5 0.5 7.5 q1.5 2.5 5.5 2.5 q6 0 8 -9 q1 -3 -1 -5 q-2 -2 -6 -3 ZM403 456 q0 2 2 4 q2 2 5 1 q6 -1 11 -6 q2 -3 0 -5 q-2 -2 -5 -2 q-4 -1 -8 1 q-4 2 -5 7 ZM551 588 q0 -3 -2 -5 q-2 -2 -4 -2 q-4 1 -7.5 4 q-3.5 3 -3.5 7 q-1 3 0.5 4 q1.5 1 4.5 1 q4 0 7 -2 q3 -2 5 -7 ZM514 355 q1 4 4.5 6 q3.5 2 6.5 2 q7 0 7 -6 q0 -5 -3 -7 q-3 -1 -8 -2 l0 0 q-3 0 -5 2 q0 1 -2 4 q0 0 0 1 ZM441 862 q-5 -5 -12 -5 q-7 0 -13 5 q7 6 12 6 q6 0 13 -6 ZM845 650 q0 -7 -6 -6 q-4 0 -6.5 3.5 q-2.5 3.5 -1.5 6.5 l-1 2 q0 3 1 4 q1 1 4.5 1 q3.5 0 5.5 -2 q2 -2 3 -6 q1 -2 1 -3 ZM852 415 q-1 -5 -3 -7 q-2 -3 -7 -3 q-2 0 -4 2.5 q-2 2.5 -1 5.5 q2 10 9 10 q3 0 4.5 -2.5 q1.5 -2.5 1.5 -5.5 ZM863 459 q-1 -5 -3 -7 q-2 -4 -7 -3 q-2 0 -4 2 q-2 2 -1 5 q2 10 9 10 q3 0 4.5 -2 q1.5 -2 1.5 -5 ZM430 554 q0 4 0 5 q1 3 4 4 q5 1 8 -3 q2 -2 3 -7 q1 -3 -0.5 -5 q-1.5 -2 -5 -2 q-3.5 0 -6.5 2.5 q-3 2.5 -3 5.5 ZM147 559 q-4 6 -6 13 q0 1 2.5 3.5 q2.5 2.5 4.5 2.5 q4 0 6.5 -3.5 q2.5 -3.5 0.5 -7.5 q0 -2 -4 -5 q-2 -2 -4 -3 ZM442 598 q1 3 3.5 5 q2.5 2 6.5 2 q3 0 5 -1.5 q2 -1.5 1 -4.5 q0 -4 -3 -7 q-3 -3 -8 -2 q-2 0 -4 2.5 q-2 2.5 -1 5.5 ZM516 442 q-2 -4 -5.5 -6 q-3.5 -2 -7.5 -2 q-7 1 -4 7 q1 4 4 5 q2 1 6 2 q4 1 5 -1 q1 -1 2 -5 ZM475 779 q-3 -4 -8 -5 q-5 -1 -9 2 q-2 3 0 6 q1 2 4 3 q3 1 5.5 0.5 q2.5 -0.5 4.5 -2 q2 -1.5 3 -4.5 ZM463 524 q2 4 4.5 6 q2.5 2 5.5 1 q3 -1 6 -3 q4 -2 4 -4 q0 -6 -10 -6 q-3 0 -6 1.5 q-3 1.5 -4 4.5 ZM465 356 q5 2 8 2 q5 0 9 -3 q1 -4 -1 -7 q-12 -6 -16 8 ZM152 610 q-3 0 -5 2 q-2 2 -2 5 q0 3 1.5 6 q1.5 3 5 4 q3.5 1 6 -1.5 q2.5 -2.5 2.5 -5.5 q-1 -4 -3 -6.5 q-2 -2.5 -5 -3.5 ZM163 654 q-3 0 -5 2 q-2 2 -2 4 q-1 4 1 7 q2 3 5.5 3.5 q3.5 0.5 6 -1.5 q2.5 -2 1.5 -6 q0 -3 -2 -5.5 q-2 -2.5 -5 -3.5 ZM157 521 q0 -4 0 -5 q-1 -3 -4 -3 q-4 0 -6 2.5 q-2 2.5 -2 6.5 q0 4 1 6 q1 3 5 3 q3 0 4 -3 q1 -1 2 -5 q0 -1 0 -2 ZM187 422 q-5 1 -7 4 q-2 3 -2 6.5 q0 3.5 1.5 5 q1.5 1.5 4.5 1.5 q3 -1 5 -3 q1 -2 2 -5 l1 -2 q1 -3 -0.5 -5 q-1.5 -2 -4.5 -2 ZM776 737 q0 3 2 5 q2 2 5 1 q6 -3 9 -9 q1 -3 0 -5 q-1 -2 -5 -2 q-4 0 -7 3 q-3 3 -4 7 ZM762 284 q-4 0 -5 2 q-2 1 -2 4.5 q0 3.5 2.5 5.5 q2.5 2 6.5 2.5 q4 0.5 6 -1 q2 -1.5 1 -6.5 q-1 -3 -3.5 -5 q-2.5 -2 -5.5 -2 ZM761 566 q-3 6 -5 12 q0 1 2.5 3.5 q2.5 2.5 4.5 2.5 q3 -1 4.5 -4 q1.5 -3 1.5 -7 q-1 -6 -8 -7 ZM227 751 q-2 -3 -5 -6 q-3 -3 -7 -3 q-6 0 -5 7 q1 3 3.5 5.5 q2.5 2.5 5.5 2.5 q3 1 5 -1 q2 -2 3 -5 ZM413 274 q1 2 5 3 q2 0 6 0 l0 0 q3 -1 5 -2.5 q2 -1.5 0 -4.5 q-4 -4 -9 -4 q-3 0 -5.5 2 q-2.5 2 -1.5 6 ZM741 772 q0 3 2 5 q1 0 5 1 l0 0 q4 -1 6.5 -3.5 q2.5 -2.5 2.5 -5.5 q1 -3 -0.5 -5.5 q-1.5 -2.5 -4.5 -2.5 q-4 1 -7 4 q-3 3 -4 7 ZM416 766 q-8 0 -9 6 q0 3 2 4 q1 1 4 1 l2 0 q10 2 11 -3 q0 -3 -2.5 -5 q-2.5 -2 -7.5 -3 ZM716 666 q0 3 2 5 q2 2 5 1 q7 -2 7 -12 q0 -1 -2 -2.5 q-2 -1.5 -3 -1.5 q-5 0 -7 3 q-2 3 -2 7 ZM549 455 q-7 0 -6 6 q0 4 2.5 7 q2.5 3 6.5 3 q3 1 5 0 q2 -1 2 -5 q-1 -4 -3.5 -7 q-2.5 -3 -6.5 -4 ZM686 350 q2 3 5 6 q3 3 6 3 q4 0 6 -2 q2 -2 0 -5 q-3 -6 -9 -8 q-3 -2 -5 0 q-2 2 -3 6 ZM571 671 q-3 -1 -6 1 q-3 2 -5 5 q-3 6 4 7 q4 1 7 -0.5 q3 -1.5 4 -4.5 q2 -3 0.5 -5.5 q-1.5 -2.5 -4.5 -2.5 ZM664 467 q-2 1 -3 4 q-1 3 0 6 q0 1 0 3 q1 3 2 4 q1 3 4 2 q7 0 6 -9 q0 -4 -2.5 -7 q-2.5 -3 -6.5 -3 ZM659 822 q1 8 7 8 q4 1 7 -1 q3 -2 4 -5.5 q1 -3.5 -1.5 -6 q-2.5 -2.5 -6.5 -1.5 q-6 2 -10 6 ZM615 844 q2 7 8 8 q3 1 6 -1 q3 -2 4.5 -5.5 q1.5 -3.5 -1.5 -6 q-3 -2.5 -6 -1.5 q-6 2 -11 6 ZM702 800 q2 8 8 8 q3 1 6.5 -1 q3.5 -2 4.5 -5.5 q1 -3.5 -2 -6 q-3 -2.5 -6 -1.5 q-6 2 -11 6 ZM294 320 q-7 -2 -10 -1 q-4 0 -7 6 q0 4 3 6 q5 1 9 -1 q5 -2 7 -10 l-2 0 ZM250 352 q-7 -1 -9 -1 q-5 1 -7 7 q-1 4 2 6 q6 1 9 -1 q5 -3 8 -10 l-3 -1 ZM635 617 q1 3 3 4.5 q2 1.5 5 1.5 q3 -1 5 -3.5 q2 -2.5 3 -6.5 q1 -6 -6 -6 q-4 1 -6.5 3.5 q-2.5 2.5 -3.5 6.5 ZM334 828 q-3 0 -5 1 q-2 1 -2 4 q0 4 2 6.5 q2 2.5 6 2.5 l1 0 q4 0 6 0 q3 -1 2 -6 q0 -3 -3 -5 q-2 -1 -7 -3 ZM597 202 q3 1 4 0 q2 -1 2 -4 q1 -3 -2 -6 q-2 -2 -5.5 -2.5 q-3.5 -0.5 -6.5 -0.5 q-3 2 -3 5.5 q0 3.5 3 5.5 q1 1 5 2 q1 0 1 0 l2 0 ZM618 651 q0 -6 -6 -6 q-4 0 -6.5 2 q-2.5 2 -4 5 q-1.5 3 0 5.5 q1.5 2.5 4.5 2.5 q4 0 7.5 -2.5 q3.5 -2.5 4.5 -6.5 ZM318 302 q6 4 10.5 3.5 q4.5 -0.5 8.5 -4.5 q0 -4 -2 -7 q-5 -1 -9 1 q-4 2 -8 7 ZM865 520 q4 -4 4 -9.5 q0 -5.5 -4 -10.5 q-6 5 -5 10 q0 4 5 10 ZM863 550 q-3 1 -4.5 4 q-1.5 3 -0.5 6 q0 3 2.5 4.5 q2.5 1.5 5 0.5 q2.5 -1 3.5 -3.5 q1 -2.5 0 -5.5 l0 -1 q-1 -3 -2 -4 q-1 -2 -4 -1 ZM576 851 q-1 0 -3.5 0.5 q-2.5 0.5 -3.5 1.5 q-2 1 -1.5 4 q0.5 3 2.5 4.5 q2 1.5 5 1.5 q3 0 6 -2 q3 -2 3 -6 q0 -4 -8 -4 ZM852 597 q-2 2 -3.5 4.5 q-1.5 2.5 -1 5.5 q0.5 3 3 4.5 q2.5 1.5 4 1 q1.5 -0.5 3 -3 q1.5 -2.5 2 -5.5 q0.5 -3 -0.5 -4 q-2 -3 -7 -3 ZM264 470 q0 3 0 5 q1 2 5 2 q4 0 6 -4 q1 -2 1.5 -5.5 q0.5 -3.5 -0.5 -4.5 q-1 -3 -4.5 -3 q-3.5 0 -5.5 3 q-1 2 -2 7 l0 0 ZM386 373 q0 -2 -1.5 -4 q-1.5 -2 -4.5 -1 q-9 0 -11 5 q-1 4 1 5.5 q2 1.5 5 1.5 q4 1 7 -1 q3 -2 4 -6 ZM245 513 q0 5 1 7 q1 2 5 1 q5 -1 6 -10 q0 -3 -1.5 -5 q-1.5 -2 -4 -1 q-2.5 1 -5.5 6 q-1 1 -1 2 ZM390 851 q-5 -3 -10 -4 q-3 -1 -5 0 q-2 1 -1.5 4.5 q0.5 3.5 3 6 q2.5 2.5 6.5 1.5 q7 1 7 -8 ZM672 516 q-2 2 -3.5 5 q-1.5 3 -0.5 6 q1 4 2 5 q1 2 4.5 1 q3.5 -1 4.5 -5 q1 -3 1 -6 q0 -3 -2 -5 q-2 -2 -6 -1 ZM250 619 q4 -1 4 -5 q1 -2 0 -5.5 q-1 -3.5 -2 -5.5 q-2 -2 -5 -0.5 q-3 1.5 -4 4.5 q-1 2 0 6 q0 3 2 4.5 q2 1.5 5 1.5 ZM260 785 q-2 -4 -3 -6 q-2 -2 -5 -1 q-3 0 -6 4 q-1 2 -2 2 q5 5 11 8 q2 0 3 -1 q1 -2 2 -5 q0 0 0 -1 ZM554 773 q1 3 4 4 q3 0 7 0 q2 0 4 -2 q2 -2 2 -5 q0 -4 -3 -5 q-2 -1 -6 0 q-4 0 -6 2.5 q-2 2.5 -2 5.5 ZM553 179 q-8 0 -10.5 0.5 q-2.5 0.5 -3 4.5 q-0.5 4 1.5 5 q1 1 5 1.5 q4 0.5 6 0.5 q3 -2 3 -6 q0 -2 -0.5 -3.5 q-0.5 -1.5 -1 -2 q-0.5 -0.5 -0.5 -0.5 ZM464 267 q1 4 5 5 q3 1 6 0 l1 0 q3 -1 4 -1 q2 -2 1 -5 q-1 -4 -4 -5 q-2 -1 -7 -1 q-2 0 -4 2.5 q-2 2.5 -2 4.5 ZM721 259 q0 3 2.5 5.5 q2.5 2.5 5.5 2.5 q3 0 5 -2 q2 -2 0 -5 q-2 -5 -7 -7 q-3 -1 -5 1 q-2 2 -1 5 ZM527 857 q-3 1 -5 2 q-2 2 -1 5 q1 5 8 5 q3 -1 5 -1 q3 -1 3 -4 q0 -4 -3 -5 q-1 -1 -5 -1 q-1 -1 -2 -1 ZM518 264 q0 0 -2.5 0.5 q-2.5 0.5 -3.5 0.5 q-1 1 -1 4 q0 4 3 5 q2 1 7 1 q2 0 4 -2 q2 -2 2 -4.5 q0 -2.5 -2 -3.5 q-2 -1 -5 -1 q-1 0 -2 0 ZM756 429 q-1 -3 -1 -4 q-2 -2 -6 -2 q-5 0 -5 7 q0 3 1.5 5.5 q1.5 2.5 3.5 2.5 q4 1 5.5 -0.5 q1.5 -1.5 1.5 -5.5 l0 -3 ZM433 681 q-4 -2 -10 -4 q-7 -1 -7 6 q1 4 4 5 q2 2 5.5 1.5 q3.5 -0.5 4.5 -1.5 q3 -2 3 -7 ZM212 380 q-4 4 -7 10 q-1 2 0 4 q1 3 5 3 q4 0 6.5 -2.5 q2.5 -2.5 2.5 -6.5 q1 -3 -1 -5 q-2 -2 -6 -3 ZM429 352 q-4 0 -7 1 q-3 1 -4 4 q-1 3 0.5 5 q1.5 2 5 2 q3.5 0 6.5 -1 q3 -1 4 -4 q1 -3 -0.5 -5 q-1.5 -2 -4.5 -2 ZM767 538 q7 -5 8.5 -9.5 q1.5 -4.5 -2.5 -9.5 q-3 -2 -7 -1 q-3 4 -3 10 q0 6 4 10 ZM468 439 q0 -3 -1.5 -4 q-1.5 -1 -5.5 -2 l-1 0 q-4 0 -6 0 q-3 1 -4 4.5 q-1 3.5 1.5 5.5 q2.5 2 6.5 2 q4 0 6 -1 q3 -2 4 -5 ZM505 609 q0 -3 -1.5 -4.5 q-1.5 -1.5 -4.5 -2.5 q-4 0 -7 1 q-3 2 -3.5 5.5 q-0.5 3.5 1.5 4.5 q1 0 4 1 l2 0 q4 0 5 -1 q3 -1 4 -4 ZM188 702 q-3 -1 -4 1 q-1 1 -1 4 l0 2 q-1 2 0.5 4.5 q1.5 2.5 4.5 3.5 q7 2 7 -5 q0 -3 -2 -6 q-2 -3 -5 -4 ZM514 774 q0 1 -2.5 1.5 q-2.5 0.5 -2.5 1.5 q-1 1 -0.5 3.5 q0.5 2.5 2.5 4 q2 1.5 5 0.5 q4 -1 5 -4 q1 -3 0 -4 q-1 -1 -4 -2 q-2 0 -3 -1 ZM237 563 q-1 7 5 8 q3 1 5.5 -1 q2.5 -2 2.5 -4.5 q0 -2.5 -1 -6 q-1 -3.5 -2 -3.5 q-4 -1 -6.5 1 q-2.5 2 -3.5 6 ZM643 206 q-4 0 -6 1 q-2 1 -2 4.5 q0 3.5 2 4.5 q2 1 5 1 l1 0 q3 0 4 -1 q3 -1 2 -3 q0 -2 -4 -5 q-1 -1 -2 -2 ZM380 482 q1 -5 -5 -5 q-7 0 -7 9 q0 1 1.5 3 q1.5 2 2.5 2 q8 -2 8 -9 ZM301 422 q-4 1 -6.5 3 q-2.5 2 -2.5 6 q0 1 2 2.5 q2 1.5 3 1.5 q4 0 6.5 -2 q2.5 -2 3.5 -6 q1 -2 -1 -3 q-1 -1 -3 -1 q-2 0 -2 -1 Z"},
        {title:"", id:"31", sample:"", manual:"", paths:"M506 841 q-4 20 3 28 q7 7 21 3 q11 -3 27 -12 q13 -8 24 -18 l-6 -4 q-17 -14 -24 -19 q-14 -9 -23 -11 q-10 -3 -16 4 q-6 8 -6 29 ZM441 660 q3 0 5.5 -1 q2.5 -1 2.5 -3 q2 -8 -9 -11 q-10 -3 -10 5 q0 4 2 5 q1 2 5 3 q3 1 4 2 ZM369 598 q2 1 4 -1 q2 -2 2 -5 q0 -4 -2.5 -7.5 q-2.5 -3.5 -7.5 -3.5 q-3 0 -4.5 2 q-1.5 2 -1.5 5 q0 8 10 10 ZM541 157 q0 -3 -1.5 -5 q-1.5 -2 -4.5 -2 q-5 -1 -8 0.5 q-3 1.5 -4 5.5 q0 2 2.5 4 q2.5 2 4.5 2 q3 2 6.5 0.5 q3.5 -1.5 4.5 -5.5 ZM480 333 q0 2 2 4 q2 2 5 2 q4 1 7.5 -1.5 q3.5 -2.5 3.5 -6.5 q0 -2 -2.5 -4.5 q-2.5 -2.5 -4.5 -2.5 q-4 0 -7 2.5 q-3 2.5 -4 6.5 ZM179 655 q1 0 2 3 q2 2 3 4 q2 2 5 2 q3 0 5 -2.5 q2 -2.5 1 -5.5 q-2 -5 -3 -7 q-3 -4 -8 -4 q-3 0 -4 3 q-1 2 -1 7 ZM212 698 q1 1 2 3 q1 3 3 4 q2 2 5 2 q3 0 4.5 -2 q1.5 -2 0.5 -5 q-1 -5 -3 -8 q-2 -3 -7 -3 q-3 0 -4 3 q-1 2 -1 6 ZM192 338 q7 -1 10 -6 q2 -4 2 -11 q-2 -3 -6 -3 q-6 3 -7.5 7.5 q-1.5 4.5 1.5 12.5 ZM444 751 q3 -1 5 -1 q3 -2 3 -4 q-1 -5 -4 -7 q-3 -2 -8 -2 q-2 0 -4.5 2 q-2.5 2 -2.5 4 q0 4 3 6 q2 1 7 2 q0 0 1 0 ZM446 467 q-1 -4 -2 -5 q-1 -2 -4 -2 q-5 1 -7 6 q-2 3 -2 8 q-1 3 1.5 5 q2.5 2 5.5 1 q3 -2 5.5 -5.5 q2.5 -3.5 2.5 -7.5 l0 0 ZM708 206 q1 4 4 7 q2 1 6 3 l1 0 q3 2 5.5 1.5 q2.5 -0.5 3.5 -3.5 q1 -5 -2 -8 q-3 -1 -8 -3 l-1 0 q-2 -1 -4.5 0 q-2.5 1 -4.5 3 ZM334 792 q0 -4 -2 -6 q-2 -2 -6 -3.5 q-4 -1.5 -6.5 0 q-2.5 1.5 -2.5 5.5 q1 4 3.5 6 q2.5 2 6.5 2 l1 0 q3 0 4 0 q2 -1 2 -4 ZM338 449 q1 11 8 10 q3 -1 4 -4 q1 -3 1 -7 l0 0 q-1 -4 -2 -6 q-1 -3 -5 -2 q-2 1 -3 3 q-1 1 -2 4 q-1 2 -1 2 ZM355 299 q10 -2 12 -9 q1 -3 -0.5 -4.5 q-1.5 -1.5 -4.5 -1.5 q-4 0 -7.5 2 q-3.5 2 -4.5 6 q-1 2 0 4.5 q1 2.5 5 2.5 ZM398 277 q10 -2 13 -8 q1 -3 -0.5 -5 q-1.5 -2 -4.5 -2 q-4 0 -7.5 2 q-3.5 2 -5.5 6 q-1 2 0.5 4.5 q1.5 2.5 4.5 2.5 ZM315 332 q7 -2 10 -5 q3 -3 3 -7 q1 -3 -1.5 -4.5 q-2.5 -1.5 -5.5 -0.5 q-4 1 -6.5 4 q-2.5 3 -3.5 7 q0 2 1 3.5 q1 1.5 3 2.5 ZM293 636 q-1 -4 -4 -7 q-3 -3 -7 -3 q-4 0 -5 1 q-2 1 -1.5 5 q0.5 4 3.5 7 q3 3 7 3 q3 1 5 -0.5 q2 -1.5 2 -5.5 ZM708 322 q1 4 3.5 7 q2.5 3 6.5 4 q3 1 5 -0.5 q2 -1.5 2 -4.5 q1 -4 -1.5 -7 q-2.5 -3 -7.5 -4 q-2 -1 -4.5 0.5 q-2.5 1.5 -3.5 4.5 ZM676 289 q0 4 3 7 q3 3 6 4 q3 2 5.5 0 q2.5 -2 2.5 -4 q0 -5 -2.5 -8 q-2.5 -3 -6.5 -3 q-3 -1 -5.5 0.5 q-2.5 1.5 -2.5 3.5 ZM741 365 q1 5 3.5 8 q2.5 3 6.5 4 q3 1 5 -0.5 q2 -1.5 2 -4.5 q0 -4 -2.5 -7.5 q-2.5 -3.5 -6.5 -3.5 q-3 -1 -5 0.5 q-2 1.5 -3 3.5 ZM396 735 q4 1 7 -2 q1 -1 1 -4.5 q0 -3.5 -2.5 -6 q-2.5 -2.5 -6 -2.5 q-3.5 0 -6.5 2.5 q-3 2.5 -2 5.5 q1 2 6 6 q2 1 3 1 ZM352 713 q5 1 7 -1 q2 -2 2 -5.5 q0 -3.5 -2.5 -6 q-2.5 -2.5 -6.5 -2.5 q-4 0 -6.5 2.5 q-2.5 2.5 -1.5 5.5 q1 3 6 6 q1 1 2 1 ZM400 633 q8 2 8 -4 q1 -8 -9 -11 q-3 -1 -5 0.5 q-2 1.5 -2 4.5 q-1 4 1 7 q2 1 6 3 q1 0 1 0 ZM434 527 q3 0 5 -1.5 q2 -1.5 2 -4.5 q1 -4 1 -6 q-1 -4 -4.5 -5.5 q-3.5 -1.5 -5.5 0.5 q-2 2 -2.5 6 q-0.5 4 -0.5 6 q1 4 5 5 ZM678 617 q-4 1 -7 3.5 q-3 2.5 -4 6.5 q-1 4 2 5 q1 1 4 1 q4 -1 7 -3.5 q3 -2.5 4 -6.5 q1 -3 -1 -4.5 q-2 -1.5 -5 -1.5 ZM669 458 q3 2 5 0 q2 0 4 -3 q2 -3 1 -6.5 q-1 -3.5 -4 -5.5 q-3 -2 -6 -0.5 q-3 1.5 -4 4.5 q-1 4 0.5 7 q1.5 3 3.5 4 ZM671 495 q0 -3 -1 -5 q-1 -1 -4 -1 q-5 0 -7 3 q-2 3 -2 8 l0 1 q0 3 1 4 q0 2 4 2 q4 0 7 -3 q1 -2 2 -7 q0 -1 0 -1 l0 -1 ZM651 399 q1 7 3 9 q2 4 7 3 q3 0 4 -2.5 q1 -2.5 0 -5.5 q-1 -10 -10 -9 q-4 0 -4 5 ZM631 265 q0 3 2.5 6 q2.5 3 6 3.5 q3.5 0.5 6 -1.5 q2.5 -2 2.5 -6 q0 -5 -10 -7 q-3 0 -5 1.5 q-2 1.5 -2 3.5 ZM637 747 q7 -4 9 -8 q1 -2 -1 -4 q-2 -2 -6 -2 l-2 0 q-5 1 -7 1 q-3 2 -3 6 q0 6 10 7 l0 0 ZM260 410 q4 0 7 -3 q2 -2 3 -7 q2 -3 0 -5 q-2 -2 -5 -2 q-3 0 -6 2.5 q-3 2.5 -3 6.5 q-2 6 4 8 ZM246 555 q3 0 5 -2.5 q2 -2.5 2 -5.5 q0 -5 -1 -7 q-2 -4 -7 -5 q-3 0 -4.5 2 q-1.5 2 -1.5 5 q-1 4 1 7.5 q2 3.5 6 5.5 ZM847 557 q3 -1 5 -3 q2 -2 2 -5 q1 -4 -1 -6.5 q-2 -2.5 -5 -2.5 q-6 0 -9 9 q0 3 1.5 5 q1.5 2 6.5 3 ZM608 567 q0 -3 -2 -5 q-2 -2 -5 -1 q-7 2 -11 7 q-2 3 0 5 q2 2 5 2 q4 1 7.5 -1.5 q3.5 -2.5 5.5 -6.5 ZM460 435 q0 3 2 5 q2 2 4 2 q4 -1 7 -4 q3 -3 4 -7 q0 -3 -1.5 -4 q-1.5 -1 -3.5 -1 q-5 -1 -8 2 q-2 2 -4 7 ZM497 668 q-1 -5 -5 -7 q-3 -1 -7 -2 q-3 0 -4.5 1.5 q-1.5 1.5 -1.5 4.5 q0 5 3 7 q2 1 7 2 l1 0 q2 1 4 -1 q1 -1 2 -4 q0 -1 1 -1 ZM569 161 q6 5 13 4.5 q7 -0.5 12 -4.5 q-6 -7 -11.5 -7 q-5.5 0 -13.5 7 ZM166 372 q0 8 5 7 q4 -1 6.5 -4 q2.5 -3 2.5 -7 l0 -1 q1 -3 0 -4 q-1 -1 -5 -1 q-4 0 -6 2 q-1 1 -2 6 q-1 2 -1 2 ZM159 607 q1 6 2 8 q3 3 7 3 q3 0 4.5 -2.5 q1.5 -2.5 1.5 -5.5 q-1 -4 -3 -7 q-2 -3 -7 -3 q-5 0 -5 7 ZM148 564 q1 5 2 7 q3 3 7 3 q3 0 5 -2.5 q2 -2.5 1 -4.5 q-1 -5 -3 -7 q-2 -3 -7 -3 q-5 0 -5 7 ZM581 469 q1 -8 -4 -9 q-5 -1 -8 2 q-2 2 -3 8 q-1 2 0.5 4.5 q1.5 2.5 5 2.5 q3.5 0 6.5 -2.5 q3 -2.5 3 -5.5 ZM863 464 q4 -6 7 -13 q0 -2 -3 -4.5 q-3 -2.5 -4 -2.5 q-4 1 -6.5 4.5 q-2.5 3.5 -0.5 7.5 q0 2 4 5 q2 2 3 3 ZM569 425 q-1 -3 -4 -5 q-3 -2 -6 -2 q-3 0 -5 1.5 q-2 1.5 -2 4.5 q0 4 3.5 7 q3.5 3 7.5 2 q3 -1 4.5 -3 q1.5 -2 1.5 -5 ZM494 582 q2 3 5.5 5 q3.5 2 8.5 2 q7 0 4 -7 q-1 -3 -4 -5 q-2 -1 -6 -2 l-1 0 q-3 -1 -4 1 q-2 2 -3 6 ZM535 244 q3 4 8.5 5 q5.5 1 9.5 -2 q2 -3 0 -7 q-2 -1 -4.5 -2 q-2.5 -1 -5 -0.5 q-2.5 0.5 -5 2 q-2.5 1.5 -3.5 4.5 ZM548 499 q-2 -4 -4.5 -6 q-2.5 -2 -5.5 -1 q-4 1 -6 3 q-4 2 -4 4 q0 6 9 6 q4 0 6.5 -1.5 q2.5 -1.5 4.5 -4.5 ZM546 667 q-6 -2 -9 -2 q-4 0 -7 3 q-2 3 0 7 q12 6 16 -8 ZM859 413 q3 0 4.5 -2 q1.5 -2 2.5 -5 q0 -3 -2 -6 q-2 -3 -5 -4 q-3 -1 -6 1 q-3 2 -2 6 q0 3 2 6 q2 3 6 4 ZM848 369 q3 0 5 -2 q2 -2 2 -5 q0 -3 -1.5 -6 q-1.5 -3 -5 -4 q-3.5 -1 -6.5 1.5 q-3 2.5 -2 6.5 q0 3 2 5.5 q2 2.5 6 3.5 ZM853 502 q0 3 0 5 q1 3 4 3 q4 0 6.5 -3 q2.5 -3 1.5 -6 l0 0 q0 -5 0 -7 q-1 -3 -5 -2 q-4 0 -5 2 q-1 2 -2 5 q0 2 0 3 ZM824 601 q9 -1 9 -11 q0 -3 -1.5 -4.5 q-1.5 -1.5 -4.5 -1.5 q-4 1 -5 3 q-1 1 -2 5 l-1 2 q-1 3 0.5 5 q1.5 2 4.5 2 ZM234 286 q0 -4 -1.5 -5.5 q-1.5 -1.5 -4.5 -0.5 q-6 3 -9 9 q-2 3 -0.5 5 q1.5 2 5.5 2 q4 0 7 -3 q3 -3 3 -7 ZM249 739 q4 -1 5 -2 q2 -1 2 -5 q-1 -6 -9 -8 q-4 0 -6.5 1.5 q-2.5 1.5 -0.5 6.5 q1 3 3.5 5 q2.5 2 5.5 2 ZM250 457 q3 -6 4 -12 q0 -1 -2.5 -3.5 q-2.5 -2.5 -3.5 -2.5 q-3 1 -5 5 q-1 2 -1 6 q0 6 8 7 ZM784 271 q1 4 4.5 6.5 q3.5 2.5 7.5 3.5 q6 0 5 -7 q-1 -4 -3.5 -6 q-2.5 -2 -6.5 -2 q-2 -1 -4.5 0.5 q-2.5 1.5 -2.5 4.5 ZM598 749 q-2 -2 -5 -3 q-2 0 -6 0 q-4 1 -5.5 2.5 q-1.5 1.5 0.5 4.5 q1 2 3.5 2.5 q2.5 0.5 5.5 1 q3 0.5 5 -2 q2 -2.5 2 -5.5 ZM269 250 q1 -3 -2 -4 q-1 0 -4.5 0 q-3.5 0 -6 2.5 q-2.5 2.5 -3.5 5.5 q0 3 1.5 5.5 q1.5 2.5 4.5 2.5 q4 -1 7 -4 q3 -3 3 -8 ZM594 257 q4 0 6.5 -1.5 q2.5 -1.5 2.5 -5.5 q1 -3 -1 -4 q-1 0 -4 -1 l-2 0 q-10 -2 -11 3 q0 4 2.5 6 q2.5 2 6.5 3 ZM295 357 q0 -4 -2 -5.5 q-2 -1.5 -5 -0.5 q-8 2 -8 12 q0 1 2.5 2 q2.5 1 3.5 1 q5 1 7 -2 q2 -3 2 -7 ZM462 568 q7 0 6 -6 q0 -4 -3 -7 q-3 -3 -7 -4 q-3 0 -5 1 q-2 1 -1 5 q0 4 3 7 q3 3 7 4 ZM324 673 q-1 -4 -4 -6.5 q-3 -2.5 -7 -2.5 q-3 0 -5 1.5 q-2 1.5 -1 4.5 q4 6 10 9 q2 1 4 -0.5 q2 -1.5 3 -5.5 ZM439 353 q4 0 7 -2 q3 -2 4.5 -5 q1.5 -3 0.5 -5 q-1 -2 -4.5 -2.5 q-3.5 -0.5 -6.5 1 q-3 1.5 -5 5.5 q-1 2 0 4.5 q1 2.5 4 3.5 ZM347 556 q2 -2 3 -4.5 q1 -2.5 0 -5.5 l-1 -2 q0 -4 -1 -5 q-1 -3 -4 -2 q-4 0 -5 3 q-1 2 -1 6 q0 4 2.5 7 q2.5 3 6.5 3 ZM352 201 q-2 -8 -8 -8 q-3 -1 -6.5 1 q-3.5 2 -4.5 5.5 q-1 3.5 2 6 q3 2.5 6 1.5 q6 -2 11 -6 ZM396 179 q-2 -8 -8 -8 q-4 -1 -7 1 q-3 2 -4 5.5 q-1 3.5 1.5 6 q2.5 2.5 6.5 1.5 q6 -2 11 -6 ZM309 223 q-2 -8 -8 -9 q-4 0 -7 1.5 q-3 1.5 -4 5 q-1 3.5 1.5 6 q2.5 2.5 6.5 1.5 q6 -2 11 -5 ZM717 703 q7 2 9 1 q5 0 8 -6 q0 -4 -3 -6 q-6 -1 -9 1 q-5 2 -8 10 l3 0 ZM760 670 q7 2 10 2 q5 -1 7 -7 q0 -4 -2 -6 q-6 -1 -10 1 q-4 3 -7 10 l2 0 ZM375 406 q0 -3 -2 -5 q-2 -2 -5 -1 q-3 1 -5.5 3.5 q-2.5 2.5 -2.5 5.5 q-1 7 5 7 q4 -1 7 -3.5 q3 -2.5 3 -6.5 ZM677 195 q6 0 6 -5 q1 -4 -1.5 -6.5 q-2.5 -2.5 -6.5 -2.5 l-1 0 q-4 -1 -6 0 q-3 1 -2 5 q1 4 4 6 q2 1 7 3 ZM415 821 q-3 -1 -4 0 q-3 0 -4 4 q0 7 8 9 q4 1 6 0 q3 -1 3.5 -5 q0.5 -4 -2.5 -5 q-1 -1 -5 -2 q-1 -1 -2 -1 ZM393 372 q0 3 1.5 4.5 q1.5 1.5 4.5 1.5 q3 0 6 -2 q3 -2 4 -5 q2 -3 0.5 -5.5 q-1.5 -2.5 -4.5 -2.5 q-8 -1 -12 9 ZM692 720 q-6 -3 -10 -2.5 q-4 0.5 -8 4.5 q-1 1 0 3.5 q1 2.5 2 2.5 q5 2 9 0 q4 -2 7 -8 ZM145 502 q-4 5 -4 10.5 q0 5.5 4 10.5 q6 -5 5 -10 q0 -4 -5 -11 ZM147 473 q4 -1 5 -4 q1 -3 1 -7 q-1 -2 -3 -3.5 q-2 -1.5 -4.5 -0.5 q-2.5 1 -3.5 3.5 q-1 2.5 0 5.5 l0 1 q0 2 1 3 q2 2 4 2 ZM435 172 q1 0 3.5 -0.5 q2.5 -0.5 2.5 -1.5 q2 -1 2 -4 q0 -3 -2.5 -5 q-2.5 -2 -4.5 -1 q-4 0 -6.5 2 q-2.5 2 -2.5 5 q-1 5 8 5 ZM158 426 q3 -2 4 -5 q1 -3 1 -6 q0 -3 -2.5 -4.5 q-2.5 -1.5 -4 -0.5 q-1.5 1 -3 3 q-1.5 2 -2.5 5 q-1 8 7 8 ZM747 553 q0 -4 0 -5 q-1 -2 -5 -2 q-4 0 -6 3 q-2 3 -2 6.5 q0 3.5 0 4.5 q1 3 5 2.5 q4 -0.5 6 -3.5 q1 -2 2 -6 ZM624 650 q0 2 2 3.5 q2 1.5 4 1.5 q9 0 11 -6 q1 -3 -1 -4.5 q-2 -1.5 -5 -1.5 q-4 -1 -7 1 q-3 2 -4 6 ZM766 510 q0 -5 -1 -7 q-1 -2 -5 -1 q-5 0 -6 9 q0 4 1.5 6 q1.5 2 4 1 q2.5 -1 5.5 -6 q1 -1 1 -2 ZM621 171 q5 3 9 5 q3 1 5 -0.5 q2 -1.5 2 -4.5 q0 -3 -3 -5.5 q-3 -2.5 -6 -2.5 q-7 0 -7 8 ZM338 507 q3 -2 4 -5 q1 -3 0 -6 q0 -3 -1 -5 q-2 -2 -5 -1 q-6 2 -5 11 q0 3 1 5 q2 2 6 1 ZM761 404 q-6 2 -4 11 q0 3 2 4.5 q2 1.5 5 0.5 q3 -1 4 -4 q1 -2 0 -6 q0 -3 -2 -4.5 q-2 -1.5 -5 -1.5 ZM750 238 q2 4 4 5 q2 2 5 2 q2 0 5 -4 q2 -2 2 -3 q-4 -4 -10 -7 q-2 -1 -4 1 q0 1 -1 4 q-1 1 -1 2 ZM457 250 q-1 -4 -5 -4 q-2 -1 -6 0 q-6 1 -6 7 q0 4 3 5 q2 1 6 0 q3 0 5.5 -2.5 q2.5 -2.5 2.5 -5.5 ZM458 843 q7 1 9.5 0 q2.5 -1 3.5 -4.5 q1 -3.5 -1 -4.5 q-1 -1 -5.5 -1.5 q-4.5 -0.5 -5.5 -0.5 q-4 1 -3 6 q0 3 2 5 ZM547 756 q-1 -4 -5 -5 q-3 -1 -6 0 l-1 0 q-4 0 -5 1 q-2 2 -1 5 q2 4 5 5 q2 2 6 1 q3 0 5 -2 q2 -2 2 -5 ZM290 764 q0 -3 -2.5 -5.5 q-2.5 -2.5 -6 -2.5 q-3.5 0 -5 2 q-1.5 2 -0.5 5 q3 5 8 7 q2 1 4.5 -1 q2.5 -2 1.5 -5 ZM483 165 q4 0 5 -1 q2 -2 2 -5 q-1 -5 -8 -5 q-4 0 -5 1 q-3 1 -3 4 q0 4 3 5 q2 1 6 1 ZM493 759 q0 0 2.5 -0.5 q2.5 -0.5 3.5 -0.5 q1 -1 1 -4 q0 -4 -3 -6 q-2 0 -7 0 q-3 -1 -5 1 q-2 2 -1.5 5 q0.5 3 3.5 4 q2 1 6 1 ZM255 593 q0 3 1 5 q2 2 5 2 q6 0 6 -8 q0 -2 -1.5 -4.5 q-1.5 -2.5 -4.5 -2.5 q-3 -1 -4.5 0.5 q-1.5 1.5 -1.5 4.5 l0 3 ZM578 341 q4 3 9 4 q3 1 5 0 q3 -1 2 -5 q0 -7 -9 -7 q-3 0 -5 2 q-2 1 -2 6 ZM798 643 q4 -5 7 -10 q1 -3 0 -5 q-1 -2 -4.5 -2 q-3.5 0 -6 2.5 q-2.5 2.5 -3.5 6.5 q0 3 1 5 q2 2 6 3 ZM582 671 q4 0 7 -1.5 q3 -1.5 4 -4.5 q1 -3 -0.5 -4.5 q-1.5 -1.5 -5 -2 q-3.5 -0.5 -6.5 1 q-3 1.5 -4 4 q-1 2.5 0.5 4.5 q1.5 2 4.5 3 ZM243 485 q-6 5 -7.5 9.5 q-1.5 4.5 1.5 9.5 q3 2 7 1 q4 -4 3.5 -10 q-0.5 -6 -4.5 -10 ZM543 584 q0 3 1.5 4 q1.5 1 4.5 1 l1 0 q4 1 6 0 q3 0 4 -4 q1 -4 -1 -5.5 q-2 -1.5 -6 -1.5 q-4 0 -6 1 q-3 1 -4 5 ZM505 414 q0 3 2 4.5 q2 1.5 5 1.5 q4 0 6 -1 q3 -1 3.5 -4.5 q0.5 -3.5 -0.5 -4.5 q-1 -1 -5 -1 l-1 0 q-4 0 -6 0 q-3 1 -4 5 ZM823 321 q3 1 4 -1 q1 -1 1 -5 l0 -1 q1 -3 -1 -5 q-2 -2 -4 -3 q-7 -2 -7 4 q0 4 2 7 q2 3 5 4 ZM496 248 q1 0 3 -0.5 q2 -0.5 3 -1.5 q1 -1 0.5 -3.5 q-0.5 -2.5 -3 -4 q-2.5 -1.5 -5.5 -0.5 q-3 1 -5 4 q0 3 1 4 q1 1 4 2 q2 0 2 0 ZM774 460 q0 -7 -6 -8 q-2 -1 -4.5 1 q-2.5 2 -2.5 4.5 q0 2.5 1 6 q1 3.5 2 3.5 q3 0 6 -2 q3 -2 4 -5 ZM367 816 q5 0 6 -1 q3 -1 3 -4 q0 -3 -3 -4 q-1 -1 -4 -1 l-1 0 q-3 0 -5 0 q-2 1 -1 4 q0 2 3 5 q2 1 2 1 ZM631 541 q-1 2 0.5 3.5 q1.5 1.5 4.5 1.5 q7 0 7 -9 q0 -1 -1.5 -3 q-1.5 -2 -2.5 -2 q-8 2 -8 9 ZM710 600 q8 -1 8 -8 q0 -1 -1.5 -2.5 q-1.5 -1.5 -3.5 -1.5 q-3 0 -6 2 q-3 2 -3 5 q-1 3 0 4 q1 1 4 1 q1 0 2 0 Z"},
        {title:"", id:"32", sample:"", manual:"", paths:"M695 788 q52 -36 87 -79 q38 -47 58 -103 q19 -55 19 -112 q-1 -57 -19 -110.5 q-18 -53.5 -53 -97.5 q-35 -46 -84 -78 q-67 -44 -141 -55 q-69 -11 -138 7 q-65 18 -121 60 q-56 42 -93 101 q-38 61 -52 131 q-10 55 1 113 q10 56 38 108 q27 51 69 93 q42 42 92 69 q53 28 110 36 q57 10 114 1 q56 -9 106.5 -33.5 q50.5 -24.5 90.5 -63.5 q42 -40 69 -90 l19 -33 l8 4 q-5 9 -15 26 q-11 18 -16 28 q-10 15 -19 26 q-78 95 -175 129 q-101 36 -217 6 q-120 -31 -192 -114 q-70 -80 -91 -204 q-12 -65 6 -134 q18 -65 59 -122.5 q41 -57.5 99 -95.5 q59 -40 126 -53 q69 -14 138 0 q66 13 124 49.5 q58 36.5 98 89.5 q42 56 58 123 q17 71 5 142 q-12 71 -51 130 q-39 62 -100 102 q-7 4 -14 7 q-44 30 -96 43 q-51 13 -105 7.5 q-54 -5.5 -104 -27.5 q-52 -23 -94 -62 q-76 -69 -101 -151 q-26 -86 2 -181 q28 -94 92 -151 q65 -57 162 -76 q65 -13 130 3 q63 14 115.5 51 q52.5 37 85.5 90 q35 55 42 117 q8 57 -8 113 q-15 52 -48 98 q-32 44 -76.5 76 q-44.5 32 -94.5 46 q-52 15 -103 9 q-88 -10 -147 -54 q-62 -44 -94 -125 q-33 -83 -20 -159 q14 -77 74 -142 q56 -61 130 -78 q69 -16 149.5 6.5 q80.5 22.5 128.5 76.5 q50 54 62 138 q8 53 -7 106 q-15 50 -49 91.5 q-34 41.5 -81 66.5 q-48 26 -102 30 q-52 4 -99 -11 q-43 -13 -78 -42 q-34 -27 -56 -64 q-21 -37 -29 -78 q-8 -48 2.5 -98.5 q10.5 -50.5 38.5 -92.5 q30 -45 72 -72 q46 -29 102 -33 q43 -3 86 14 q42 16 77.5 47.5 q35.5 31.5 57.5 72.5 q22 42 25 85 q5 71 -23.5 122.5 q-28.5 51.5 -89.5 83.5 q-61 32 -122 27 q-60 -5 -117 -45 q-49 -35 -64 -90 q-13 -49 -1 -111 q11 -58 50 -97 q38 -38 98 -54 q45 -12 88 -4 q41 8 74 33 q33 25 51 65 q16 35 16 74 q0 35 -14 69 q-13 32 -36 59 q-22 26 -50 42 q-29 16 -58 18 q-33 3 -69 -9 q-35 -12 -62 -35 q-28 -24 -40 -53 q-15 -32 -14 -67 q0 -35 14 -66 q14 -32 41 -56 q22 -19 54 -27 q30 -9 61 -5 q32 3 56 18 q29 19 48 47 q19 27 25 58 q5 32 -3 64 q-8 23 -23 42 q-15 19 -36 31 q-21 12 -45 16 q-45 5 -76 -6 q-36 -12 -58 -46 q-13 -23 -17 -48 q-4 -25 1.5 -50 q5.5 -25 20.5 -47 q14 -18 37 -29 q24 -10 50 -11 q27 -1 49 9 q22 10 37 29 q15 19 20.5 42 q5.5 23 0.5 47 q-5 26 -23 44.5 q-18 18.5 -43 24.5 q-22 7 -44.5 0.5 q-22.5 -6.5 -37.5 -23.5 q-17 -18 -21.5 -42.5 q-4.5 -24.5 5.5 -46.5 q7 -16 20 -26 q13 -10 30.5 -12.5 q17.5 -2.5 36.5 3.5 q22 7 31 22.5 q9 15.5 4 39.5 q-3 16 -13.5 26 q-10.5 10 -26 12.5 q-15.5 2.5 -34.5 -3.5 l12 -46 l6 1 l-7 39 q23 4 36.5 -3.5 q13.5 -7.5 18.5 -26.5 q3 -10 0.5 -21 q-2.5 -11 -10 -19 q-7.5 -8 -17.5 -12 q-19 -7 -35 -5 q-18 2 -32 15 q-14 13 -17.5 32.5 q-3.5 19.5 3.5 37.5 q14 45 55 51 q22 4 42 -3.5 q20 -7.5 34 -24 q14 -16.5 19 -40.5 q4 -23 -2.5 -44.5 q-6.5 -21.5 -22.5 -38.5 q-16 -17 -38 -24 q-30 -9 -58 -3 q-28 6 -48 24 q-20 19 -28 47 q-7 23 -5 46 q2 23 13.5 43.5 q11.5 20.5 30.5 35 q19 14.5 41 20.5 q35 8 69 -1 q33 -8 57 -31 q24 -24 32 -57 q6 -26 1 -53 q-6 -27 -21.5 -51 q-15.5 -24 -37.5 -40 q-24 -17 -51 -23 q-33 -7 -65 1 q-32 8 -57 29 q-25 22 -38.5 52.5 q-13.5 30.5 -12.5 64.5 q1 33 16 63 q14 30 41 51 q48 36 95.5 39 q47.5 3 90.5 -26 q31 -21 53 -55 q20 -32 27 -69 q7 -38 -2 -71.5 q-9 -33.5 -32 -62 q-23 -28.5 -54 -45.5 q-33 -17 -68 -19 q-37 -1 -73 12 q-35 13 -63.5 36.5 q-28.5 23.5 -46.5 55.5 q-18 33 -22 69 q-5 58 15 105 q20 46 60.5 74.5 q40.5 28.5 96.5 34.5 q42 5 85 -8 q42 -14 76 -42 q35 -28 54 -66 q21 -41 20 -85 q-2 -66 -33 -118 q-31 -50 -89 -84 q-56 -32 -109 -32 q-56 0 -107 35 q-61 42 -89 101.5 q-28 59.5 -21 132.5 q6 70 45 119 q37 48 102 74 q46 18 97 15 q49 -2 95 -23.5 q46 -21.5 81 -57.5 q36 -37 53.5 -84 q17.5 -47 15.5 -97 q-2 -50 -23 -95 q-21 -45 -57.5 -79 q-36.5 -34 -84.5 -50 q-58 -21 -117 -19 q-56 3 -105.5 27 q-49.5 24 -84.5 66 q-35 44 -50 102 q-23 84 -1 157 q22 73 87 129 q69 59 147.5 68.5 q78.5 9.5 159.5 -31.5 q86 -44 130 -112 q46 -70 45 -164 q-1 -51 -21 -99 q-20 -46 -54 -85 q-34 -39 -79 -64 q-46 -25 -95 -33 q-67 -10 -129 3 q-60 12 -110 45.5 q-50 33.5 -84 84.5 q-35 52 -49 117 q-18 85 10 160 q27 71 92 132 q55 50 118 73 q61 22 127 16.5 q66 -5.5 133 -39.5 q4 -1 11 -4 q3 -1 4 -2 Z"},
        {title:"", id:"33", sample:"", manual:"", paths:"M513 529 q-5 -19 -6 -38 q0 -2 3.5 -4 q3.5 -2 7.5 -3.5 q4 -1.5 5 -0.5 l3 1 q13 8 19 12 q10 8 14 16 q4 11 2.5 22 q-1.5 11 -7.5 20 q-9 13 -23 19 q-14 5 -29 3.5 q-15 -1.5 -28 -10.5 q-13 -8 -20 -23 q-8 -17 -6.5 -36.5 q1.5 -19.5 12 -35.5 q10.5 -16 27.5 -26 q19 -9 40 -8 q20 1 38 11 q18 10 29 29 q9 15 12 32.5 q3 17.5 -1.5 35 q-4.5 17.5 -14.5 32.5 q-18 27 -46 38 q-26 9 -59 4 q-18 -2 -34 -11 q-16 -9 -27.5 -23.5 q-11.5 -14.5 -17.5 -32.5 q-11 -33 -5 -64 q6 -32 26 -55 q22 -23 54 -33 q25 -8 51 -5.5 q26 2.5 49 15 q23 12.5 40 32.5 q17 20 24 45 q7 23 3 48 q-4 25 -17 48.5 q-13 23.5 -33 41.5 q-20 19 -44 29 q-34 12 -71 7 q-35 -5 -63 -26 q-30 -21 -46 -54 q-16 -34 -15.5 -70.5 q0.5 -36.5 16.5 -67.5 q17 -32 47 -53 q58 -39 109 -37 q49 1 93 42 q30 28 48 65 q25 48 20 94.5 q-5 46.5 -40 88.5 q-34 40 -76 56 q-44 17 -96 5 q-41 -9 -74 -32 q-31 -23 -52.5 -55.5 q-21.5 -32.5 -28.5 -71.5 q-8 -40 -1 -82 q6 -36 27 -66 q20 -30 51 -50.5 q31 -20.5 67 -29.5 q38 -9 76 -3 q44 6 82 28 q37 20 62.5 52 q25.5 32 36.5 71 q12 40 6 82 q-6 44 -30 84 q-22 39 -57.5 68.5 q-35.5 29.5 -76.5 44.5 q-42 15 -83 11 q-45 -5 -85 -28 q-38 -22 -66.5 -57.5 q-28.5 -35.5 -43.5 -79.5 q-15 -45 -13 -92 q2 -49 23 -94 q23 -49 67 -83 q42 -32 95 -44 q55 -11 110 1 q59 13 105 49 q46 35 72 86 q26 52 27 112 q0 64 -27 118 q-26 51 -72 86 q-45 35 -102 48 q-57 15 -115 6 q-83 -13 -137 -63 q-55 -50 -77 -130 q-23 -85 -2 -159 q21 -75 87 -133 q44 -38 99 -56 q53 -17 109 -13 q56 4 107 29 q52 25 92 69 q56 63 76 129 q20 71 -2 149 q-16 55 -49 100 q-33 44 -78 74 q-45 29 -98 43 q-53 13 -108 8 q-56 -5 -108.5 -29.5 q-52.5 -24.5 -93.5 -67.5 q-39 -41 -62.5 -93 q-23.5 -52 -28.5 -107 q-4 -57 14 -110 q19 -61 60 -110 q38 -49 91 -81 q53 -32 112 -44 q61 -12 120 0 q61 12 115 46 q52 34 91 83.5 q39 49.5 58 107.5 q20 61 16 122 q-4 64 -32 123 q-28 58 -73.5 103.5 q-45.5 45.5 -102.5 73.5 q-59 28 -122 32 q-69 4 -134 -18 q-61 -21 -113 -63 q-50 -42 -85 -97 q-35 -55 -48 -116 q-14 -64 -4 -124 q10 -53 35 -103 q25 -52 63 -94 q41 -45 91 -75 q54 -31 115 -43 q66 -12 137 0 q87 16 154 65 q65 48 110 128 q4 7 11 21 l6 9 q1 -6 0 -12.5 q-1 -6.5 -4 -11.5 q-50 -93 -125 -146 q-77 -54 -179 -65 q-53 -5 -105 4 q-52 9 -100 32 q-48 23 -88 57.5 q-40 34.5 -69 79 q-29 44.5 -45 95 q-16 50.5 -17 103.5 q-2 74 25 143 q27 68 77 121 q51 54 119 85 q66 30 139 32 q72 2 139 -24 q68 -26 120 -76 q46 -44 74 -100 q27 -54 34.5 -115 q7.5 -61 -5.5 -121 q-14 -61 -48 -114 q-36 -55 -86 -93 q-49 -37 -106 -54 q-57 -17 -117 -14 q-62 4 -120 30 q-56 24 -100 67 q-43 41 -70 94 q-27 53 -34 110 q-7 60 7 115 q16 62 54 113 q36 49 87.5 82 q51.5 33 111.5 46 q62 13 124 2 q58 -10 108 -38 q49 -27 85 -69 q36 -42 55 -94 q19 -54 18 -112 q-1 -85 -46 -153 q-41 -62 -118 -109 q-52 -31 -113 -38 q-60 -6 -119 11 q-59 18 -106 57 q-45 38 -71 92 q-26 54 -29 114 q-4 62 17 119 q21 55 62 97 q41 41 95 63 q55 22 114 20 q46 -1 93 -20 q49 -20 87 -54 q42 -37 64 -84 q25 -53 24 -113 q-1 -40 -14 -78 q-13 -38 -37 -70.5 q-24 -32.5 -56 -57 q-32 -24.5 -70 -38 q-38 -13.5 -78 -15.5 q-40 -2 -79 8 q-53 13 -94 46 q-40 32 -62.5 78 q-22.5 46 -24.5 99 q-2 54 18 108 q20 56 61 96 q39 38 91 54 q53 16 109 5 q40 -7 77 -31 q36 -23 63.5 -57.5 q27.5 -34.5 41.5 -74.5 q15 -41 14 -81 q-2 -45 -21 -85 q-19 -38 -51.5 -66.5 q-32.5 -28.5 -74.5 -42.5 q-43 -15 -90 -13 q-63 2 -108 30 q-43 27 -65.5 75.5 q-22.5 48.5 -20.5 113.5 q1 38 21 75 q19 35 50.5 62 q31.5 27 70.5 41 q40 14 79 11 q43 -3 79 -25 q31 -20 52.5 -49.5 q21.5 -29.5 29.5 -65.5 q8 -36 1.5 -72.5 q-6.5 -36.5 -26.5 -66.5 q-31 -48 -74 -71 q-42 -23 -88 -19 q-47 4 -91 36 q-27 21 -44 52 q-17 30 -20 63 q-4 35 7 68 q9 30 29 53 q20 24 47 37 q27 14 58 16 q33 2 64 -10 q30 -11 53 -34 q23 -23 35 -54 q16 -41 11 -76 q-6 -37 -36 -68 q-62 -63 -153 -32 q-37 13 -55 41 q-17 26 -19 68 q-2 34 8 59 q11 27 37 45 q18 12 38 17 q20 5 41 2.5 q21 -2.5 40 -12.5 q21 -11 35 -29 q14 -18 19 -40 q5 -22 1 -45 q-4 -20 -15 -36 q-11 -16 -28 -26.5 q-17 -10.5 -36 -12.5 q-56 -5 -81 39 q-9 15 -12 32.5 q-3 17.5 1 33.5 q4 16 14 28 q14 17 34 21 q17 4 40 -2 q17 -4 27.5 -13.5 q10.5 -9.5 13.5 -24 q3 -14.5 -2 -30.5 q-7 -24 -26.5 -32 q-19.5 -8 -47.5 2 q4 3 5 10 q0 3 -1 12 q-2 7 -1 11 q0 5 3 9 q4 4 12 5 Z"},
        {title:"", id:"34", sample:"", manual:"", paths:"M726 493 q9 -10 13 -15 q27 -37 40 -70 q15 -39 11 -78 q-5 -57 -38 -103 q-29 -40 -82 -72 q-59 -36 -131 -41 q-62 -4 -137 14 l-8 2 q-23 5 -35 9 q-19 5 -33 12 q-18 7 -29 17 q-27 23 -45 54 q-17 32 -21 67 q-4 36 8 71 q13 37 44 68 q10 9 29 27 l15 14 l-14 11 q-20 14 -29 22 q-37 30 -58 71 q-20 38 -22 81 q-3 41 12 80 q15 40 46 71 q32 33 77 51 q54 21 117 26 q54 4 119 -4 q52 -7 92 -23 q46 -18 81 -49 q44 -39 61 -84 q17 -45 6 -91 q-11 -47 -50 -91 q-9 -10 -29 -31 q-8 -8 -13 -12 l3 -4 ZM325 455 q-14 -12 -21 -18 q-32 -28 -49 -60 q-16 -32 -17.5 -66.5 q-1.5 -34.5 12.5 -67.5 q14 -34 43 -64 q9 -11 22 -17 q61 -23 111 -33 q59 -11 112 -7 q58 5 112 30 q42 20 74 54 q32 34 47 75 q16 41 12 81 q-5 33 -19 63.5 q-14 30.5 -37 54.5 q-3 4 -9 11 l-5 7 q6 6 18 19 q13 13 20 20 q10 11 18 21 q44 53 43 108 q-1 55 -46 109 q-32 37 -75 60 q-39 21 -90 31 q-72 13 -135 10 q-68 -5 -130 -30 q-27 -11 -52 -35 q-23 -22 -41 -51.5 q-18 -29.5 -26 -60.5 q-9 -33 -6 -62 q3 -27 15 -52 q11 -21 30 -43 q15 -17 38 -37 q10 -9 32 -25 q10 -8 15 -12 l-16 -13 ZM529 163 q24 0 47 7 q20 6 41 19 q14 8 39 25 q16 11 24 17 l-35 14 q5 -11 3 -19 q-2 -8 -14 -16.5 q-12 -8.5 -38 -19.5 q-23 -10 -67 -27 ZM619 555 q36 35 45 72 q9 37 -10 74 q-6 12 -15.5 22 q-9.5 10 -21.5 17 q-49 23 -94 22 q-49 0 -93 -27 q-22 -13 -34 -31 q-11 -17 -12 -36 q-1 -19 9 -37 q10 -19 30 -34 q10 -7 23 -15 q9 -5 25 -15 q16 -8 23 -13 l0 0 q-6 3 -19 8 q-16 6 -24 10 q-13 6 -23 11 q-28 15 -40 37 q-13 23 -9 54 q4 27 21.5 48 q17.5 21 43.5 29 q41 17 85.5 16.5 q44.5 -0.5 85.5 -18.5 q30 -13 45 -40 q13 -24 13 -57 q-1 -35 -11 -57 q-13 -28 -42 -42 l-1 2 ZM597 390 l-25 11 q-29 13 -44 20 q-26 11 -46 9 q-24 -1 -43 -19 q-22 -20 -32 -43 q-11 -26 -7 -54 q4 -28 14 -45 q10 -18 27.5 -26.5 q17.5 -8.5 45.5 -10.5 q16 0 36 1 q12 1 36 3 q22 2 32 3 l2 -2 q-16 -11 -35 -15 q-17 -3 -37 -1 q-14 0 -37 4 q-31 5 -53 20 q-21 15 -31.5 37.5 q-10.5 22.5 -9.5 48.5 q2 27 17 54 q12 21 26 33 q17 14 38 16 q35 3 68 -9 q29 -10 60 -33 l-2 -2 ZM529 163 q44 17 67 27 q26 11 38 19.5 q12 8.5 14 16.5 q2 8 -3 19 l35 -14 q-7 -5 -22 -16 q-26 -18 -40 -25 q-22 -13 -41 -20 q-24 -7 -48 -7 ZM591 239 q17 14 27 32.5 q10 18.5 13 39.5 q3 23 -7 44 q-8 17 -27 35 l2 2 q19 -14 29 -35 q10 -21 9 -44.5 q-1 -23.5 -12.5 -43.5 q-11.5 -20 -31.5 -32 l-2 2 ZM494 554 q12 -1 23 -3 q25 -10 51 -8.5 q26 1.5 50 12.5 l2 -2 q-15 -11 -38 -15 q-22 -4 -45 1 q-25 4 -43 15 l0 0 Z"},
        {title:"", id:"35", sample:"", manual:"", paths:"M517 713 q10 9 15 13 q37 27 70 40 q39 15 78 11 q57 -5 103 -38 q40 -29 72 -82 q36 -59 41 -131 q4 -62 -14 -137 l-2 -8 q-5 -23 -9 -35 q-5 -19 -12 -33 q-7 -18 -17 -29 q-23 -27 -54 -45 q-32 -17 -67 -21 q-36 -4 -71 8 q-37 13 -68 44 q-9 10 -27 29 l-14 15 l-11 -14 q-14 -20 -22 -29 q-30 -37 -71 -58 q-38 -20 -81 -22 q-41 -3 -80 12 q-40 15 -71 46 q-33 32 -51 77 q-21 54 -26 117 q-4 54 4 119 q7 52 23 92 q18 46 49 81 q39 44 84 61 q45 17 91 6 q47 -11 91 -50 q10 -9 31 -29 q8 -8 12 -13 l4 3 ZM555 312 q12 -14 18 -21 q28 -32 60 -49 q32 -16 66.5 -17.5 q34.5 -1.5 67.5 12.5 q34 14 64 43 q11 9 17 22 q23 61 33 111 q11 59 7 112 q-5 58 -30 112 q-20 42 -54 74 q-34 32 -75 47 q-41 16 -81 12 q-33 -5 -63.5 -19 q-30.5 -14 -54.5 -37 q-4 -3 -11 -9 l-7 -5 q-6 6 -19 18 q-13 13 -20 20 q-11 10 -21 18 q-53 44 -108 43 q-55 -1 -109 -46 q-37 -32 -60 -75 q-21 -39 -31 -90 q-13 -72 -10 -135 q5 -68 30 -130 q11 -27 35 -52 q22 -23 51.5 -41 q29.5 -18 60.5 -26 q33 -9 62 -6 q27 3 52 15 q21 11 43 30 q17 15 37 38 q9 10 25 32 q8 10 12 15 l13 -16 ZM847 516 q0 24 -7 47 q-6 20 -19 41 q-8 14 -25 39 q-11 16 -17 24 l-14 -35 q11 5 19 3 q8 -2 16.5 -14 q8.5 -12 19.5 -38 q10 -23 27 -67 ZM455 606 q-35 36 -72 45 q-37 9 -74 -10 q-12 -6 -22 -15.5 q-10 -9.5 -17 -21.5 q-23 -49 -22 -94 q0 -49 27 -93 q13 -22 31 -34 q17 -11 36 -12 q19 -1 37 9 q19 10 34 30 q7 10 15 23 q5 9 15 25 q8 16 13 23 l0 0 q-3 -6 -8 -19 q-6 -16 -10 -24 q-6 -13 -11 -23 q-15 -28 -37 -40 q-23 -13 -54 -9 q-27 4 -48 21.5 q-21 17.5 -29 43.5 q-17 41 -16.5 85.5 q0.5 44.5 18.5 85.5 q13 30 40 45 q24 13 57 13 q35 -1 57 -11 q28 -13 42 -42 l-2 -1 ZM620 584 l-11 -25 q-13 -29 -20 -44 q-11 -26 -9 -46 q1 -24 19 -43 q20 -22 43 -32 q26 -11 54 -7 q28 4 45 14 q18 10 26.5 27.5 q8.5 17.5 10.5 45.5 q0 16 -1 36 q-1 12 -3 36 q-2 22 -3 32 l2 2 q11 -16 15 -35 q3 -17 1 -37 q0 -14 -4 -37 q-5 -31 -20 -53 q-15 -21 -37.5 -31.5 q-22.5 -10.5 -48.5 -9.5 q-27 2 -54 17 q-21 12 -33 26 q-14 17 -16 38 q-3 35 9 68 q10 29 33 60 l2 -2 ZM847 516 q-17 44 -27 67 q-11 26 -19.5 38 q-8.5 12 -16.5 14 q-8 2 -19 -3 l14 35 q5 -7 16 -22 q18 -26 25 -40 q13 -22 20 -41 q7 -24 7 -48 ZM771 578 q-14 17 -32.5 27 q-18.5 10 -39.5 13 q-23 3 -44 -7 q-17 -8 -35 -27 l-2 2 q14 19 35 29 q21 10 44.5 9 q23.5 -1 43.5 -12.5 q20 -11.5 32 -31.5 l-2 -2 ZM456 481 q1 12 3 23 q10 25 8.5 51 q-1.5 26 -12.5 50 l2 2 q11 -15 15 -38 q4 -22 -1 -45 q-4 -25 -15 -43 l0 0 Z"},
        {title:"", id:"36", sample:"", manual:"", paths:"M506 284 q-10 -9 -15 -13 q-37 -27 -70 -40 q-39 -15 -78 -11 q-57 5 -103 38 q-40 29 -72 82 q-36 59 -41 131 q-4 62 14 137 l2 8 q5 23 9 35 q5 19 12 33 q7 18 17 29 q23 27 54 45 q32 17 67 21 q36 4 71 -8 q37 -13 68 -44 q9 -10 27 -29 l14 -15 l11 14 q14 20 22 29 q30 37 71 58 q38 20 81 22 q41 3 80 -12 q40 -15 71 -46 q33 -32 51 -77 q21 -54 26 -117 q4 -54 -4 -119 q-7 -52 -23 -92 q-18 -46 -49 -81 q-39 -44 -84 -61 q-45 -17 -91 -6 q-47 11 -91 50 q-10 9 -31 29 q-8 8 -12 13 l-4 -3 ZM468 685 q-12 14 -18 21 q-28 32 -60 49 q-32 16 -66.5 17.5 q-34.5 1.5 -67.5 -12.5 q-34 -14 -64 -43 q-11 -9 -17 -22 q-23 -61 -33 -111 q-11 -59 -7 -112 q5 -58 30 -112 q20 -42 54 -74 q34 -32 75 -47 q41 -16 81 -12 q33 5 63.5 19 q30.5 14 54.5 37 q4 3 11 9 l7 5 q6 -6 19 -18 q13 -13 20 -20 q11 -10 21 -18 q53 -44 108 -43 q55 1 109 46 q37 32 60 75 q21 39 31 90 q13 72 10 135 q-5 68 -30 130 q-11 27 -35 52 q-22 23 -51.5 41 q-29.5 18 -60.5 26 q-33 9 -62 6 q-27 -3 -52 -15 q-21 -11 -43 -30 q-17 -15 -37 -38 q-9 -10 -25 -32 q-8 -10 -12 -15 l-13 16 ZM176 481 q0 -24 7 -47 q6 -20 19 -41 q8 -14 25 -39 q11 -16 17 -24 l14 35 q-11 -5 -19 -3 q-8 2 -16.5 14 q-8.5 12 -19.5 38 q-10 23 -27 67 ZM568 391 q35 -36 72 -45 q37 -9 74 10 q12 6 22 15.5 q10 9.5 17 21.5 q23 49 22 94 q0 49 -27 93 q-13 22 -31 34 q-17 11 -36 12 q-19 1 -37 -9 q-19 -10 -34 -30 q-7 -10 -15 -23 q-5 -9 -15 -25 q-8 -16 -13 -23 l0 0 q3 6 8 19 q6 16 10 24 q6 13 11 23 q15 28 37 40 q23 13 54 9 q27 -4 48 -21.5 q21 -17.5 29 -43.5 q17 -41 16.5 -85.5 q-0.5 -44.5 -18.5 -85.5 q-13 -30 -40 -45 q-24 -13 -57 -13 q-35 1 -57 11 q-28 13 -42 42 l2 1 ZM403 413 l11 25 q13 29 20 44 q11 26 9 46 q-1 24 -19 43 q-20 22 -43 32 q-26 11 -54 7 q-28 -4 -45 -14 q-18 -10 -26.5 -27.5 q-8.5 -17.5 -10.5 -45.5 q0 -16 1 -36 q1 -12 3 -36 q2 -22 3 -32 l-2 -2 q-11 16 -15 35 q-3 17 -1 37 q0 14 4 37 q5 31 20 53 q15 21 37.5 31.5 q22.5 10.5 48.5 9.5 q27 -2 54 -17 q21 -12 33 -26 q14 -17 16 -38 q3 -35 -9 -68 q-10 -29 -33 -60 l-2 2 ZM176 481 q17 -44 27 -67 q11 -26 19.5 -38 q8.5 -12 16.5 -14 q8 -2 19 3 l-14 -35 q-5 7 -16 22 q-18 26 -25 40 q-13 22 -20 41 q-7 24 -7 48 ZM252 419 q14 -17 32.5 -27 q18.5 -10 39.5 -13 q23 -3 44 7 q17 8 35 27 l2 -2 q-14 -19 -35 -29 q-21 -10 -44.5 -9 q-23.5 1 -43.5 12.5 q-20 11.5 -32 31.5 l2 2 ZM567 516 q-1 -12 -3 -23 q-10 -25 -8.5 -51 q1.5 -26 12.5 -50 l-2 -2 q-11 15 -15 38 q-4 22 1 45 q4 25 15 43 l0 0 Z"},
        {title:"", id:"37", sample:"", manual:"", paths:"M300 497 q-5 4 -13 12 q-20 21 -29 31 q-39 44 -50 91 q-11 46 6 91 q17 45 61 84 q35 31 81 49 q40 16 92 23 q65 8 119 4 q63 -5 117 -26 q45 -18 77 -51 q31 -31 46 -71 q15 -39 12 -80 q-2 -43 -22 -81 q-21 -41 -58 -71 q-9 -8 -29 -22 l-14 -11 l15 -14 q19 -18 29 -27 q31 -31 44 -68 q12 -35 8 -71 q-4 -35 -21 -67 q-18 -31 -45 -54 q-11 -10 -29 -17 q-14 -7 -33 -12 q-12 -4 -35 -9 l-8 -2 q-75 -18 -137 -14 q-72 5 -131 41 q-53 32 -82 72 q-33 46 -38 103 q-4 39 11 78 q13 33 40 70 q4 5 13 15 l3 4 ZM682 468 q5 4 15 12 q22 16 32 25 q23 20 38 37 q19 22 30 43 q12 25 15 52 q3 29 -6 62 q-8 31 -26 60.5 q-18 29.5 -41 51.5 q-25 24 -52 35 q-62 25 -130 30 q-63 3 -135 -10 q-51 -10 -90 -31 q-43 -23 -75 -60 q-45 -54 -46 -109 q-1 -55 43 -108 q8 -10 18 -21 q7 -7 20 -20 q12 -13 18 -19 l-5 -7 q-6 -7 -9 -11 q-23 -24 -37 -54.5 q-14 -30.5 -19 -63.5 q-4 -40 12 -81 q15 -41 47 -75 q32 -34 74 -54 q54 -25 112 -30 q53 -4 112 7 q50 10 111 33 q13 6 22 17 q29 30 43 64 q14 33 12.5 67.5 q-1.5 34.5 -17.5 66.5 q-17 32 -49 60 q-7 6 -21 18 l-16 13 ZM494 163 q-44 17 -67 27 q-26 11 -38 19.5 q-12 8.5 -14 16.5 q-2 8 3 19 l-35 -14 q8 -6 24 -17 q25 -17 39 -25 q21 -13 41 -19 q23 -7 47 -7 ZM403 553 q-29 14 -42 42 q-10 22 -11 57 q0 33 13 57 q15 27 45 40 q41 18 85.5 18.5 q44.5 0.5 85.5 -16.5 q26 -8 43.5 -29 q17.5 -21 21.5 -48 q4 -31 -9 -54 q-12 -22 -40 -37 q-10 -5 -23 -11 q-8 -4 -24 -10 q-13 -5 -19 -8 l0 0 q7 5 23 13 q16 10 25 15 q13 8 23 15 q20 15 30 34 q10 18 9 37 q-1 19 -12 36 q-12 18 -34 31 q-44 27 -93 27 q-45 1 -94 -22 q-12 -7 -21.5 -17 q-9.5 -10 -15.5 -22 q-19 -37 -10 -74 q9 -37 45 -72 l-1 -2 ZM424 392 q31 23 60 33 q33 12 68 9 q21 -2 38 -16 q14 -12 26 -33 q15 -27 17 -54 q1 -26 -9.5 -48.5 q-10.5 -22.5 -31.5 -37.5 q-22 -15 -53 -20 q-23 -4 -37 -4 q-20 -2 -37 1 q-19 4 -35 15 l2 2 q10 -1 32 -3 q24 -2 36 -3 q20 -1 36 -1 q28 2 45.5 10.5 q17.5 8.5 27.5 26.5 q10 17 14 45 q4 28 -7 54 q-10 23 -32 43 q-19 18 -43 19 q-20 2 -46 -9 q-15 -7 -44 -20 l-25 -11 l-2 2 ZM494 163 q-24 0 -48 7 q-19 7 -41 20 q-14 7 -40 25 q-15 11 -22 16 l35 14 q-5 -11 -3 -19 q2 -8 14 -16.5 q12 -8.5 38 -19.5 q23 -10 67 -27 ZM430 237 q-20 12 -31.5 32 q-11.5 20 -12.5 43.5 q-1 23.5 9 44.5 q10 21 29 35 l2 -2 q-19 -18 -27 -35 q-10 -21 -7 -44 q3 -21 13 -39.5 q10 -18.5 27 -32.5 l-2 -2 ZM529 554 q-18 -11 -43 -15 q-23 -5 -45 -1 q-23 4 -38 15 l2 2 q24 -11 50 -12.5 q26 -1.5 51 8.5 q11 2 23 3 l0 0 Z"},
        {title:"", id:"38", sample:"", manual:"", paths:"M297 504 q-9 10 -13 15 q-27 37 -40 70 q-15 39 -11 78 q5 57 38 103 q29 40 82 72 q59 36 131 41 q62 4 137 -14 l8 -2 q23 -5 35 -9 q19 -5 33 -12 q18 -7 29 -17 q27 -23 45 -54 q17 -32 21 -67 q4 -36 -8 -71 q-13 -37 -44 -68 q-10 -9 -29 -27 l-15 -14 l14 -11 q20 -14 29 -22 q37 -30 58 -71 q20 -38 22 -81 q3 -41 -12 -80 q-15 -40 -46 -71 q-32 -33 -77 -51 q-54 -21 -117 -26 q-54 -4 -119 4 q-52 7 -92 23 q-46 18 -81 49 q-44 39 -61 84 q-17 45 -6 91 q11 47 50 91 q9 10 29 31 q8 8 13 12 l-3 4 ZM698 542 q14 12 21 18 q32 28 49 60 q16 32 17.5 66.5 q1.5 34.5 -12.5 67.5 q-14 34 -43 64 q-9 11 -22 17 q-61 23 -111 33 q-59 11 -112 7 q-58 -5 -112 -30 q-42 -20 -74 -54 q-32 -34 -47 -75 q-16 -41 -12 -81 q5 -33 19 -63.5 q14 -30.5 37 -54.5 q3 -4 9 -11 l5 -7 q-6 -6 -18 -19 q-13 -13 -20 -20 q-10 -11 -18 -21 q-44 -53 -43 -108 q1 -55 46 -109 q32 -37 75 -60 q39 -21 90 -31 q72 -13 135 -10 q68 5 130 30 q27 11 52 35 q23 22 41 51.5 q18 29.5 26 60.5 q9 33 6 62 q-3 27 -15 52 q-11 21 -30 43 q-15 17 -38 37 q-10 9 -32 25 q-10 8 -15 12 l16 13 ZM494 834 q-24 0 -47 -7 q-20 -6 -41 -19 q-14 -8 -39 -25 q-16 -11 -24 -17 l35 -14 q-5 11 -3 19 q2 8 14 16.5 q12 8.5 38 19.5 q23 10 67 27 ZM404 442 q-36 -35 -45 -72 q-9 -37 10 -74 q6 -12 15.5 -22 q9.5 -10 21.5 -17 q49 -23 94 -22 q49 0 93 27 q22 13 34 31 q11 17 12 36 q1 19 -9 37 q-10 19 -30 34 q-10 7 -23 15 q-9 5 -25 15 q-16 8 -23 13 l0 0 q6 -3 19 -8 q16 -6 24 -10 q13 -6 23 -11 q28 -15 40 -37 q13 -23 9 -54 q-4 -27 -21.5 -48 q-17.5 -21 -43.5 -29 q-41 -17 -85.5 -16.5 q-44.5 0.5 -85.5 18.5 q-30 13 -45 40 q-13 24 -13 57 q1 35 11 57 q13 28 42 42 l1 -2 ZM426 607 l25 -11 q29 -13 44 -20 q26 -11 46 -9 q24 1 43 19 q22 20 32 43 q11 26 7 54 q-4 28 -14 45 q-10 18 -27.5 26.5 q-17.5 8.5 -45.5 10.5 q-16 0 -36 -1 q-12 -1 -36 -3 q-22 -2 -32 -3 l-2 2 q16 11 35 15 q17 3 37 1 q14 0 37 -4 q31 -5 53 -20 q21 -15 31.5 -37.5 q10.5 -22.5 9.5 -48.5 q-2 -27 -17 -54 q-12 -21 -26 -33 q-17 -14 -38 -16 q-35 -3 -68 9 q-29 10 -60 33 l2 2 ZM494 834 q-44 -17 -67 -27 q-26 -11 -38 -19.5 q-12 -8.5 -14 -16.5 q-2 -8 3 -19 l-35 14 q7 5 22 16 q26 18 40 25 q22 13 41 20 q24 7 48 7 ZM432 758 q-17 -14 -27 -32.5 q-10 -18.5 -13 -39.5 q-3 -23 7 -44 q8 -17 27 -35 l-2 -2 q-19 14 -29 35 q-10 21 -9 44.5 q1 23.5 12.5 43.5 q11.5 20 31.5 32 l2 -2 ZM529 443 q-12 1 -23 3 q-25 10 -51 8.5 q-26 -1.5 -50 -12.5 l-2 2 q15 11 38 15 q22 4 45 -1 q25 -4 43 -15 l0 0 Z"},
        {title:"", id:"39", sample:"", manual:"", paths:"M305 178 q194 -98 397 0 q28 15 50 37 q22 22 37 50 q16 26 20 55 q4 29 -3 57 q-8 29 -26 52 q-9 12 -21 26 q-8 9 -24 26 q-15 16 -22 24 q5 6 14 19 q17 23 25 36 q35 57 31 110.5 q-4 53.5 -46 104.5 q-33 34 -69 65 l2 2 q39 -19 67.5 -52.5 q28.5 -33.5 42.5 -75.5 q14 -39 9 -77 q-4 -34 -22 -68 q-16 -30 -44 -63 l14 -15 q17 -18 25 -27 q37 -38 49 -81 q12 -38 2 -78 q-9 -37 -34 -69 q-24 -31 -58 -54 q-64 -41 -143 -53 q-68 -10 -153 2 q-28 4 -43 7 q-24 5 -42 13 q-21 10 -37 25 l2 2 ZM668 840 q-50 26 -106 34 q-51 7 -108 0 q-49 -7 -107 -26 q-30 -9 -55 -34 q-23 -24 -36.5 -56 q-13.5 -32 -13.5 -65 q0 -35 16 -62 q9 -16 24 -35 q9 -11 29 -33 q19 -21 28 -32 l-11 -9 q-6 -6 -21 -18 q-16 -13 -23 -20 q-13 -11 -22 -21 q-29 -32 -41 -68 q-12 -36 -5.5 -73.5 q6.5 -37.5 31.5 -72.5 q7 -11 19 -25 q6 -8 20 -23 q13 -15 20 -23 l-2 -2 q-42 32 -67 72 q-27 44 -30 89 q-4 50 24 97 q30 53 97 99 q-35 35 -67 74 q-18 26 -24 59 q-5 30 2 63 q7 30 23 57.5 q16 27.5 38 46.5 q23 19 48 24 l21 5 q35 9 53 12 q30 6 55 9 q29 3 55 1 q41 -2 72 -10 q37 -11 66 -32 l-2 -2 ZM630 268 q4 9 13.5 25.5 q9.5 16.5 12.5 25.5 q7 14 9 26 q3 24 -4 47 q-7 23 -24.5 40 q-17.5 17 -40.5 24.5 q-23 7.5 -47 2.5 q-36 -5 -69.5 -19.5 q-33.5 -14.5 -61.5 -37.5 q-22 -17 -29 -41 q-7 -23 2 -46 q10 -23 33 -39 q42 -28 91 -30 q43 -2 94 15 l22 8 q-16 -15 -46 -23 q-27 -7 -60 -6.5 q-33 0.5 -62 9.5 q-30 8 -48 24 q-24 20 -32 45 q-7 25 1 50 q9 25 33 44 q30 23 66 37 q36 14 74 18 q20 4 39 -1.5 q19 -5.5 34 -18.5 q20 -17 32 -42 q10 -25 10 -52 q0 -27 -10 -49 q-11 -24 -32 -36 ZM625 725 q13 -25 14 -47 q1 -25 -14 -45 q-26 -32 -63.5 -49 q-37.5 -17 -78.5 -15 q40 11 79 27 q22 11 35 20 q16 11 24 23 q9 14 10 31 q1 19 -6 44 q-1 5 0 11 ZM440 582 q-57 43 -43 117 q2 16 6 26 q5 13 14 21 q9 10 24 14 q-39 -40 -40.5 -80.5 q-1.5 -40.5 34.5 -85.5 q4 -5 5 -12 ZM533 836 q28 1 58.5 -11.5 q30.5 -12.5 58.5 -36.5 q13 -8 27 -14 q-6 -12 -10.5 -13.5 q-4.5 -1.5 -11.5 5.5 q-20 24 -45 40 q-37 18 -77 30 ZM440 759 q33 18 70 21 q34 1 72 -10 q1 0 2 -1 q1 -2 2 -4 l1 -3 q-24 7 -49 8 q-15 0 -34 -3 q-12 -1 -34 -4 q-20 -2 -30 -4 Z"},
        {title:"", id:"40", sample:"", manual:"", paths:"M562 638 q1 9 7 14.5 q6 5.5 14 4.5 q4 1 8 -1 q4 -2 6.5 -5 q2.5 -3 4 -7 q1.5 -4 0.5 -8 q-1 -10 -8 -13 q-5 -3 -16 -3 q-9 -1 -12.5 4 q-3.5 5 -3.5 14 ZM778 198 q-8 0 -14.5 6 q-6.5 6 -6.5 15 q0 9 7 13 q5 3 14 3 q4 1 7.5 -0.5 q3.5 -1.5 6 -4 q2.5 -2.5 3.5 -6 q1 -3.5 1 -7.5 q-2 -18 -18 -19 ZM562 332 q0 19 17 19 q9 0 15 -6 q6 -6 6 -14 q0 -8 -6 -13.5 q-6 -5.5 -14 -4.5 q-4 0 -7.5 1.5 q-3.5 1.5 -6 4 q-2.5 2.5 -3.5 6 q-1 3.5 -1 7.5 ZM348 201 q-1 1 -4 1 q-8 0 -11 2 q-6 3 -5 10 q0 9 6.5 15 q6.5 6 14.5 6 q17 1 18 -19 q1 -8 -4 -11.5 q-5 -3.5 -15 -3.5 ZM328 745 q1 9 7 14.5 q6 5.5 14 4.5 q4 1 8 -1 q4 -2 6.5 -5 q2.5 -3 4 -7 q1.5 -4 0.5 -8 q-1 -10 -8 -13 q-5 -3 -16 -3 q-9 -1 -12.5 4 q-3.5 5 -3.5 14 ZM797 454 q-8 0 -14.5 6 q-6.5 6 -6.5 15 q0 9 7 13 q5 3 14 3 q4 1 7.5 -0.5 q3.5 -1.5 6 -4 q2.5 -2.5 3.5 -6 q1 -3.5 1 -7.5 q-2 -18 -18 -19 ZM328 472 q0 19 17 19 q9 0 15 -6 q6 -6 6 -14 q0 -8 -6 -13.5 q-6 -5.5 -14 -4.5 q-4 0 -7.5 1.5 q-3.5 1.5 -6 4 q-2.5 2.5 -3.5 6 q-1 3.5 -1 7.5 ZM796 725 q-1 1 -4 1 q-8 0 -11 2 q-6 3 -5 10 q0 9 6.5 15 q6.5 6 14.5 6 q17 1 18 -19 q1 -8 -4 -11.5 q-5 -3.5 -15 -3.5 Z"},
        {title:"", id:"41", sample:"", manual:"", paths:"M244 518 q-9 1 -14.5 7 q-5.5 6 -4.5 14 q-1 4 1 8 q2 4 5 6.5 q3 2.5 7 4 q4 1.5 8 0.5 q10 -1 13 -8 q3 -5 3 -16 q1 -9 -4 -12.5 q-5 -3.5 -14 -3.5 ZM919 659 q0 -8 -6 -14.5 q-6 -6.5 -15 -6.5 q-9 0 -13 7 q-3 5 -3 14 q-1 4 0.5 7.5 q1.5 3.5 4 6 q2.5 2.5 6 3.5 q3.5 1 7.5 1 q18 -2 19 -18 ZM537 500 q-19 0 -19 17 q0 9 6 15 q6 6 14 6 q8 0 13.5 -6 q5.5 -6 4.5 -14 q0 -4 -1.5 -7.5 q-1.5 -3.5 -4 -6 q-2.5 -2.5 -6 -3.5 q-3.5 -1 -7.5 -1 ZM899 396 q-1 -1 -1 -4 q0 -8 -2 -11 q-3 -6 -10 -5 q-9 0 -15 6.5 q-6 6.5 -6 14.5 q-1 17 19 18 q8 1 11.5 -4 q3.5 -5 3.5 -15 ZM336 266 q-9 1 -14.5 7 q-5.5 6 -4.5 14 q-1 4 1 8 q2 4 5 6.5 q3 2.5 7 4 q4 1.5 8 0.5 q10 -1 13 -8 q3 -5 3 -16 q1 -9 -4 -12.5 q-5 -3.5 -14 -3.5 ZM699 735 q0 -8 -6 -14.5 q-6 -6.5 -15 -6.5 q-9 0 -13 7 q-3 5 -3 14 q-1 4 0.5 7.5 q1.5 3.5 4 6 q2.5 2.5 6 3.5 q3.5 1 7.5 1 q18 -2 19 -18 ZM677 266 q-19 0 -19 17 q0 9 6 15 q6 6 14 6 q8 0 13.5 -6 q5.5 -6 4.5 -14 q0 -4 -1.5 -7.5 q-1.5 -3.5 -4 -6 q-2.5 -2.5 -6 -3.5 q-3.5 -1 -7.5 -1 ZM356 734 q-1 -1 -1 -4 q0 -8 -2 -11 q-3 -6 -10 -5 q-9 0 -15 6.5 q-6 6.5 -6 14.5 q-1 17 19 18 q8 1 11.5 -4 q3.5 -5 3.5 -15 Z"},
        {title:"", id:"42", sample:"", manual:"", paths:"M336 266 q-9 1 -14.5 7 q-5.5 6 -4.5 14 q-1 4 1 8 q2 4 5 6.5 q3 2.5 7 4 q4 1.5 8 0.5 q10 -1 13 -8 q3 -5 3 -16 q1 -9 -4 -12.5 q-5 -3.5 -14 -3.5 ZM699 735 q0 -8 -6 -14.5 q-6 -6.5 -15 -6.5 q-9 0 -13 7 q-3 5 -3 14 q-1 4 0.5 7.5 q1.5 3.5 4 6 q2.5 2.5 6 3.5 q3.5 1 7.5 1 q18 -2 19 -18 ZM677 266 q-19 0 -19 17 q0 9 6 15 q6 6 14 6 q8 0 13.5 -6 q5.5 -6 4.5 -14 q0 -4 -1.5 -7.5 q-1.5 -3.5 -4 -6 q-2.5 -2.5 -6 -3.5 q-3.5 -1 -7.5 -1 ZM356 734 q-1 -1 -1 -4 q0 -8 -2 -11 q-3 -6 -10 -5 q-9 0 -15 6.5 q-6 6.5 -6 14.5 q-1 17 19 18 q8 1 11.5 -4 q3.5 -5 3.5 -15 ZM527 527 q0 -16 -13 -16 q-9 0 -13 5 q-4 5 -4 14 q0 7 3 11 q3 5 10 5 q7 0 12 -5 q5 -5 5 -14 Z"},
        {title:"", id:"43", sample:"", manual:"", paths:"M754 368 q1 -1 5 -2 q5 -1 8 -3 q4 -2 6 -5 q2 -4 2 -10 q0 -4 -1.5 -8 q-1.5 -4 -5 -6.5 q-3.5 -2.5 -7.5 -4 q-4 -1.5 -8 -1.5 q-9 0 -13 5 q-6 4 -6 13 q1 10 5.5 15.5 q4.5 5.5 14.5 6.5 ZM753 680 q-11 0 -15 7 q-4 5 -4 15 q0 8 5.5 12.5 q5.5 4.5 13.5 3.5 q21 -1 20 -17 q0 -9 -6 -15 q-6 -6 -14 -6 ZM255 631 q-10 0 -14 6 q-3 5 -3.5 13.5 q-0.5 8.5 3.5 14.5 q4 6 13 5 q8 -1 13.5 -6.5 q5.5 -5.5 4.5 -13.5 q1 -4 0 -7.5 q-1 -3.5 -4 -6 q-3 -2.5 -6 -4 q-3 -1.5 -7 -1.5 ZM238 300 q0 9 3.5 13.5 q3.5 4.5 12.5 4 q9 -0.5 13.5 -5.5 q4.5 -5 4.5 -14 q0 -9 -4 -14.5 q-4 -5.5 -13 -5.5 q-7 0 -11 2 q-2 3 -4 7 q-1 3 -1 8 l-1 5 ZM513 492 q0 -16 -13 -16 q-9 0 -13 5 q-4 5 -4 14 q0 7 3 11 q3 5 10 5 q7 0 12 -5 q5 -5 5 -14 Z"},
        {title:"", id:"44", sample:"", manual:"", paths:"M207 639 q-1 -6 -6.5 -10 q-5.5 -4 -12.5 -3 q-8 0 -12.5 5 q-4.5 5 -4.5 13 q0 8 5.5 11.5 q5.5 3.5 12.5 2.5 q8 0 13 -5.5 q5 -5.5 5 -13.5 ZM812 385 q-10 0 -14.5 4 q-4.5 4 -4 12.5 q0.5 8.5 5 13 q4.5 4.5 12.5 3.5 q9 -1 13 -5 q5 -4 4 -12 q0 -7 -4.5 -11.5 q-4.5 -4.5 -11.5 -4.5 ZM606 639 q0 -6 -4.5 -10 q-4.5 -4 -10.5 -3 q-8 0 -14 5.5 q-6 5.5 -6 13.5 q-1 15 15 13 l0 0 q7 -1 10 -2 q5 -2 7 -5 q3 -4 3 -12 ZM428 400 q-1 -7 -6.5 -11 q-5.5 -4 -12.5 -3 q-5 0 -7.5 1.5 q-2.5 1.5 -3.5 5.5 q0 2 0 6 l-1 3 q0 7 3 11 q3 5 11 4 q9 0 13 -4.5 q4 -4.5 4 -12.5 ZM531 527 q0 -16 -13 -16 q-9 0 -13 5 q-4 5 -4 14 q0 7 3 11 q3 5 10 5 q7 0 12 -5 q5 -5 5 -14 Z"},
        {title:"", id:"45", sample:"", manual:"", paths:"M227 321 q-18 0 -18 15 q0 8 5 12.5 q5 4.5 14 4.5 q16 1 16 -17 q0 -8 -4 -12 q-4 -4 -13 -3 ZM753 493 q0 -7 -5 -12.5 q-5 -5.5 -12 -5.5 q-8 0 -11 6 q-3 4 -3 12.5 q0 8.5 3 12.5 q4 6 12 5.5 q8 -0.5 12 -6.5 q3 -3 4 -12 ZM624 338 q-1 -8 -4 -13 q-4 -5 -12 -6 q-3 -1 -6.5 0 q-3.5 1 -6 3.5 q-2.5 2.5 -4 5.5 q-1.5 3 -1.5 6 q-1 8 3.5 13.5 q4.5 5.5 11.5 5.5 q7 1 12.5 -3.5 q5.5 -4.5 6.5 -11.5 ZM816 696 q-1 -7 -6 -12 q-5 -5 -12 -4 q-16 0 -16 17 q0 6 4.5 10.5 q4.5 4.5 10.5 3.5 q8 0 13 -3 q5 -4 6 -12 ZM579 510 q0 -16 -13 -16 q-9 0 -13 5 q-4 5 -4 14 q0 7 3 11 q3 5 10 5 q7 0 12 -5 q5 -5 5 -14 ZM417 711 q8 -1 12 -3 q5 -4 5 -12 q1 -6 -3.5 -11 q-4.5 -5 -10.5 -5 q-16 -1 -18 16 q-1 7 4 11 q3 3 11 4 ZM371 492 q0 -16 -13 -16 q-9 0 -13 5 q-4 5 -4 14 q0 7 3 11 q3 5 10 5 q7 0 12 -5 q5 -5 5 -14 Z"},
        {title:"", id:"46", sample:"", manual:"", paths:"M367 378 q-9 0 -13 4 q-3 3 -5 9 q0 3 0 11 l0 332 q0 13 5.5 18.5 q5.5 5.5 18.5 5.5 q96 0 286 0 q9 -1 18 -3 l0 -482 l-433 0 l0 591 l539 0 l0 -696 l-321 0 l0 8 l308 0 l0 675 l-512 0 l0 -565 l405 0 l0 458 l-300 0 l0 -352 l195 0 l0 247 l-93 0 l0 -149 l-8 0 l0 163 l25 0 q49 0 73 -1 q6 -1 10 -5.5 q4 -4.5 6 -10.5 q0 -84 0 -258 l-204 0 Z"},
        {title:"", id:"47", sample:"", manual:"", paths:"M660 654 q9 0 13 -4 q3 -3 5 -9 q0 -3 0 -11 l0 -332 q0 -13 -5.5 -18.5 q-5.5 -5.5 -18.5 -5.5 q-96 0 -286 0 q-9 1 -18 3 l0 482 l433 0 l0 -591 l-539 0 l0 696 l321 0 l0 -8 l-308 0 l0 -675 l512 0 l0 565 l-405 0 l0 -458 l300 0 l0 352 l-195 0 l0 -247 l93 0 l0 149 l8 0 l0 -163 l-25 0 q-49 0 -73 1 q-6 1 -10 5.5 q-4 4.5 -6 10.5 q0 84 0 258 l204 0 Z"},
        {title:"", id:"48", sample:"", manual:"", paths:"M651 369 q0 -9 -4 -13 q-3 -3 -9 -5 q-3 0 -11 0 l-332 0 q-13 0 -18.5 5.5 q-5.5 5.5 -5.5 18.5 q0 96 0 286 q1 9 3 18 l482 0 l0 -433 l-591 0 l0 539 l696 0 l0 -321 l-8 0 l0 308 l-675 0 l0 -512 l565 0 l0 405 l-458 0 l0 -300 l352 0 l0 195 l-247 0 l0 -93 l149 0 l0 -8 l-163 0 l0 25 q0 49 1 73 q1 6 5.5 10 q4.5 4 10.5 6 q84 0 258 0 l0 -204 Z"},
        {title:"", id:"49", sample:"", manual:"", paths:"M764 712 q0 -112 0 -168 q0 -93 1 -167 q0 -12 -3 -19 q-3 -7 -10 -10 q-7 -3 -20 -3 q-220 1 -440 0 q-12 0 -19 3 q-7 3 -10.5 9.5 q-3.5 6.5 -3.5 17.5 l0 275 q1 11 3 21 l3 2 q2 2 3 2 l123 0 q165 0 247 0 q3 0 7 -3.5 q4 -3.5 6.5 -8.5 q2.5 -5 2.5 -8 q1 -60 1 -178 q0 -12 -4 -17 q-5 -5 -18 -5 q-121 1 -243 0 q-12 0 -17 5 q-5 5 -5 17 q1 16 1 49 l-1 24 q0 11 5 16 q5 5 16 5 l141 0 q5 -1 10 -4 l-2 -7 l-153 0 l0 -93 l255 0 l0 196 l-365 0 l0 -301 l475 0 l0 407 l-585 0 l0 -513 l695 0 q1 46 0 136 q0 58 0 86 q1 48 2 85 l9 0 l0 -322 l-719 0 q-2 11 -2 22 l-1 146 q0 234 -1 351 q-1 10 2 15.5 q3 5.5 9 6.5 q5 2 15 2 l568 0 q3 0 9 0 q8 -1 13 -1 l0 -71 Z"},
        {title:"", id:"50", sample:"", manual:"", paths:"M123 382 q-2 2 -2 3.5 q0 1.5 1 2.5 l377 464 q2 2 3.5 2 q1.5 0 3.5 -1 l0 0 q1 -1 1.5 -3 q0.5 -2 -1.5 -4 l-377 -463 q-1 -2 -3 -2 q-2 0 -3 1 l0 0 ZM187 330 q-2 1 -2 3 q0 2 1 3 l377 464 q2 2 3.5 2 q1.5 0 3.5 -1 l0 0 q2 -2 2 -3.5 q0 -1.5 -2 -3.5 l-377 -464 q-1 -1 -2.5 -1 q-1.5 0 -3.5 1 l0 0 ZM244 283 q-1 1 -1.5 3.5 q-0.5 2.5 0.5 3.5 l377 463 q2 2 4 2 q2 0 3 -1 l0 0 q2 -1 2 -2.5 q0 -1.5 -2 -3.5 l-377 -464 q-1 -1 -2.5 -1.5 q-1.5 -0.5 -3.5 0.5 l0 0 ZM308 231 q-1 1 -1.5 3 q-0.5 2 0.5 4 l377 463 q2 2 4 2 q2 0 3 -1 l0 0 q2 -1 2 -3 q0 -2 -1 -4 l-378 -463 q-1 -2 -2.5 -2 q-1.5 0 -3.5 1 l0 0 ZM437 127 q-2 1 -2 2.5 q0 1.5 1 3.5 l377 463 q2 2 3.5 2.5 q1.5 0.5 3.5 -0.5 l0 0 q1 -2 1.5 -4 q0.5 -2 -0.5 -4 l-378 -463 q-1 -2 -3 -1.5 q-2 0.5 -3 1.5 l0 0 ZM373 179 q-2 1 -2.5 3 q-0.5 2 0.5 3 l378 464 q1 2 3 2 q2 0 4 -1 l0 0 q1 -1 1 -3 q0 -2 -1 -4 l-378 -463 q-1 -2 -2.5 -2 q-1.5 0 -2.5 1 l0 0 ZM501 75 q-1 1 -1.5 2.5 q-0.5 1.5 0.5 2.5 l377 464 q2 2 4 2 q2 0 3 -1 l0 0 q1 -1 1.5 -3 q0.5 -2 -0.5 -4 l-378 -463 q-1 -2 -3 -2 q-2 0 -3 2 l0 0 Z"},
        {title:"", id:"51", sample:"", manual:"", paths:"M585 83 q-1 -2 -3 -2 q-2 0 -3 1 l-464 377 q-2 2 -2 4 q0 2 1 4 l0 0 q1 1 3 1 q2 0 4 -1 l464 -378 q1 -1 1 -2.5 q0 -1.5 -1 -3.5 l0 0 ZM637 148 q-1 -2 -3 -2.5 q-2 -0.5 -3 0.5 l-464 378 q-2 1 -2 3 q0 2 2 4 l0 0 q1 1 2.5 1 q1.5 0 3.5 -1 l464 -377 q1 -2 1.5 -3.5 q0.5 -1.5 -1.5 -2.5 l0 0 ZM684 205 q-1 -2 -3 -2.5 q-2 -0.5 -4 0.5 l-463 378 q-2 1 -2 3 q0 2 1 4 l0 0 q1 1 3 1 q2 0 4 -1 l463 -378 q1 -1 1.5 -2.5 q0.5 -1.5 -0.5 -2.5 l0 0 ZM736 269 q-1 -2 -3 -2.5 q-2 -0.5 -3 0.5 l-464 378 q-2 1 -2 3 q0 2 1 4 l0 0 q1 1 3 1 q2 0 4 -1 l463 -377 q2 -1 2 -3 q0 -2 -1 -3 l0 0 ZM840 397 q-1 -1 -2.5 -1.5 q-1.5 -0.5 -3.5 0.5 l-463 378 q-2 1 -2 3 q0 2 1 3 l0 0 q1 1 3 1.5 q2 0.5 4 -0.5 l463 -377 q2 -1 2 -3.5 q0 -2.5 -2 -3.5 l0 0 ZM788 333 q-1 -1 -3 -1.5 q-2 -0.5 -3 0.5 l-464 377 q-2 1 -2 3.5 q0 2.5 1 3.5 l0 0 q1 1 3 1.5 q2 0.5 4 -1.5 l464 -377 q1 -1 1 -3 q0 -2 -1 -3 l0 0 ZM893 461 q-1 -1 -3 -1 q-2 0 -3 1 l-464 377 q-2 1 -2 3 q0 2 1 3 l0 0 q1 2 3 2.5 q2 0.5 4 -1.5 l464 -377 q1 -1 1 -3 q0 -2 -1 -4 l0 0 Z"},
        {title:"", id:"52", sample:"", manual:"", paths:"M877 232 q0 -3 -1.5 -4.5 q-1.5 -1.5 -3.5 -1.5 l-708 0 q-3 0 -4.5 1.5 q-1.5 1.5 -1.5 4.5 l0 0 q0 2 1.5 3.5 q1.5 1.5 4.5 1.5 l708 0 q2 0 3.5 -1.5 q1.5 -1.5 1.5 -3.5 l0 0 ZM877 330 q0 -3 -1.5 -4.5 q-1.5 -1.5 -3.5 -1.5 l-708 0 q-3 0 -4.5 1.5 q-1.5 1.5 -1.5 4.5 l0 0 q0 2 1.5 3.5 q1.5 1.5 4.5 1.5 l708 0 q2 0 3.5 -1.5 q1.5 -1.5 1.5 -3.5 l0 0 ZM877 417 q0 -2 -1.5 -4 q-1.5 -2 -3.5 -2 l-708 0 q-3 0 -4.5 2 q-1.5 2 -1.5 4 l0 0 q0 2 1.5 3.5 q1.5 1.5 4.5 1.5 l708 0 q2 0 3.5 -1.5 q1.5 -1.5 1.5 -3.5 l0 0 ZM877 515 q0 -2 -1.5 -4 q-1.5 -2 -3.5 -2 l-708 0 q-3 0 -4.5 2 q-1.5 2 -1.5 4 l0 0 q0 2 1.5 3.5 q1.5 1.5 4.5 1.5 l708 0 q2 0 3.5 -1.5 q1.5 -1.5 1.5 -3.5 l0 0 ZM877 711 q0 -2 -1.5 -3.5 q-1.5 -1.5 -3.5 -1.5 l-708 0 q-3 0 -4.5 1.5 q-1.5 1.5 -1.5 3.5 l0 0 q0 2 1.5 4 q1.5 2 4.5 2 l708 0 q2 0 3.5 -2 q1.5 -2 1.5 -4 l0 0 ZM877 613 q0 -2 -1.5 -4 q-1.5 -2 -3.5 -2 l-708 0 q-3 0 -4.5 2 q-1.5 2 -1.5 4 l0 0 q0 2 1.5 3.5 q1.5 1.5 4.5 1.5 l708 0 q2 0 3.5 -1.5 q1.5 -1.5 1.5 -3.5 l0 0 ZM877 809 q0 -2 -1.5 -3.5 q-1.5 -1.5 -3.5 -1.5 l-708 0 q-3 0 -4.5 1.5 q-1.5 1.5 -1.5 3.5 l0 0 q0 2 1.5 4 q1.5 2 4.5 2 l708 0 q2 0 3.5 -2 q1.5 -2 1.5 -4 l0 0 Z"},
        {title:"", id:"53", sample:"", manual:"", paths:"M574 825 l-351 -352 l4 -4 l400 306 l6 -7 l-354 -355 l4 -4 l403 307 l7 -8 l-350 -350 l4 -4 l397 303 l6 -7 l-355 -355 l4 -5 l404 308 l8 -8 l-349 -349 l4 -4 l396 303 l6 -7 l-356 -356 l4 -4 l405 308 l4 -7 l-438 -437 l-5 5 l355 355 q-57 -40 -127 -93 q-42 -31 -124 -94 q-105 -78 -157 -116 l-7 8 l345 345 l-4 4 l-392 -300 l-6 7 l356 357 l-5 4 l-403 -309 l-6 8 l352 352 l-4 6 l-401 -308 l-7 8 l354 353 l-4 5 l-401 -306 l-7 6 l355 354 l-5 5 l-402 -307 l-6 7 l438 437 l5 -5 Z"},
        {title:"", id:"54", sample:"", manual:"", paths:"M137 480 l352 -352 l4 4 l-306 400 l7 7 l355 -355 l4 5 l-307 402 l8 7 l350 -349 l4 3 l-303 397 l7 6 l355 -355 l4 5 l-308 404 l9 7 l349 -348 l3 3 l-302 397 l7 5 l356 -356 l4 4 l-308 405 l6 5 l438 -438 l-5 -5 l-355 355 q40 -58 93 -127 q31 -42 94 -125 q78 -104 116 -156 l-8 -7 l-345 345 l-4 -4 l300 -393 l-8 -6 l-356 356 l-4 -4 l309 -404 l-8 -6 l-352 353 l-6 -5 l308 -401 l-8 -6 l-353 353 l-5 -4 l306 -401 l-6 -6 l-354 354 l-5 -5 l307 -402 l-7 -5 l-438 437 l6 6 Z"},
        {title:"", id:"55", sample:"", manual:"", paths:"M801 163 l0 570 l-7 0 l-76 -572 l-11 1 l0 574 l-7 0 l-77 -575 l-13 1 l0 567 l-6 0 l-76 -567 l-11 1 l0 575 l-7 0 l-78 -577 l-13 1 l0 565 l-6 0 l-76 -566 l-10 1 l0 577 l-7 0 l-78 -578 l-9 2 l0 709 l8 0 l0 -575 q14 79 28 178 q9 59 25 177 q21 148 32 221 l13 -1 l0 -559 l6 0 l75 561 l11 -1 l0 -577 l7 0 l77 577 l11 -1 l0 -571 l8 -1 l76 574 l11 -1 l0 -573 l7 0 l77 573 l10 0 l0 -574 l8 0 l77 574 l10 -1 l0 -709 l-9 0 Z"},
        {title:"", id:"56", sample:"", manual:"", paths:"M801 882 q2 0 3.5 -1.5 q1.5 -1.5 1.5 -3.5 l0 -708 q0 -2 -1.5 -4 q-1.5 -2 -3.5 -2 l0 0 q-3 0 -4.5 2 q-1.5 2 -1.5 4 l0 708 q0 2 1.5 3.5 q1.5 1.5 4.5 1.5 l0 0 ZM703 882 q2 0 3.5 -1.5 q1.5 -1.5 1.5 -3.5 l0 -708 q0 -2 -1.5 -4 q-1.5 -2 -3.5 -2 l0 0 q-3 0 -4.5 2 q-1.5 2 -1.5 4 l0 708 q0 2 1.5 3.5 q1.5 1.5 4.5 1.5 l0 0 ZM615 882 q3 0 4.5 -1.5 q1.5 -1.5 1.5 -3.5 l0 -708 q0 -2 -1.5 -4 q-1.5 -2 -4.5 -2 l0 0 q-2 0 -3.5 2 q-1.5 2 -1.5 4 l0 708 q0 2 1.5 3.5 q1.5 1.5 3.5 1.5 l0 0 ZM517 882 q3 0 4.5 -1.5 q1.5 -1.5 1.5 -3.5 l0 -708 q0 -2 -1.5 -4 q-1.5 -2 -4.5 -2 l0 0 q-2 0 -3.5 2 q-1.5 2 -1.5 4 l0 708 q0 2 1.5 3.5 q1.5 1.5 3.5 1.5 l0 0 ZM321 882 q3 0 4.5 -1.5 q1.5 -1.5 1.5 -3.5 l0 -708 q0 -2 -1.5 -4 q-1.5 -2 -4.5 -2 l0 0 q-2 0 -3.5 2 q-1.5 2 -1.5 4 l0 708 q0 2 1.5 3.5 q1.5 1.5 3.5 1.5 l0 0 ZM419 882 q3 0 4.5 -1.5 q1.5 -1.5 1.5 -3.5 l0 -708 q0 -2 -1.5 -4 q-1.5 -2 -4.5 -2 l0 0 q-2 0 -3.5 2 q-1.5 2 -1.5 4 l0 708 q0 2 1.5 3.5 q1.5 1.5 3.5 1.5 l0 0 ZM223 882 q3 0 4.5 -1.5 q1.5 -1.5 1.5 -3.5 l0 -708 q0 -2 -1.5 -4 q-1.5 -2 -4.5 -2 l0 0 q-2 0 -3.5 2 q-1.5 2 -1.5 4 l0 708 q0 2 1.5 3.5 q1.5 1.5 3.5 1.5 l0 0 Z"},
        {title:"", id:"57", sample:"", manual:"", paths:"M863 508 q-61 -8 -219 -27 q-168 -20 -234 -29 q-109 -15 -120 -21 q-14 -3 -14 -4 q0 -1 7 -1.5 q7 -0.5 7 -0.5 l572 0 l1 -11 l-88 -12 q-482 -67 -475 -64 q-28 -1 -28 -3 q0 -2 14 -4 l14 -1 l562 0 l1 -11 q-65 -9 -243 -31 q-168 -21 -230 -29 q-101 -14 -95 -16 q-26 -3 -26 -4 q0 -1 13 -2 q13 -1 13 -2 l565 0 l0 -7 l-706 0 l-1 9 q285 39 570 76 q0 1 25 4 q25 3 25 4 q0 1 -50 0 q-16 3 -121 3 q-64 0 -224.5 -1.5 q-160.5 -1.5 -224.5 -1.5 l0 10 q62 9 228 30 q166 21 228 29 q103 14 100 16 q56 3 56 5 q0 2 -28 3 l-28 1 l-555 0 l0 11 q58 8 211 27 q183 23 252 32 q115 16 111 18 q38 2 38 4 q0 2 -19 3 l-19 0 l-574 0 l-1 11 l570 76 q4 -1 19 0 q18 0 17.5 1.5 q-0.5 1.5 -36.5 4.5 q-12 -1 -116 -1 q-64 -1 -225 0 q-165 1 -228 1 l-1 11 q75 10 280 38 q299 41 291 39 q19 1 27 3 q8 1 6.5 3 q-1.5 2 -8 3 q-6.5 1 -13.5 1 q-8 1 -12 -1 l-570 0 l0 9 q69 9 251 33 q162 20 223 28 q99 14 99 15 q3 -1 9 -1 q6 0 11.5 1.5 q5.5 1.5 6.5 3 q1 1.5 -5 2.5 q-7 1 -22 2 l-571 0 l0 6 l706 0 l1 -9 q-120 -16 -374 -48 l-231 -28 l0 0 q413 -4 604 -7 l0 -11 q-118 -16 -370 -47 l-228 -29 l0 0 q127 -5 174 -5 l286 0 q33 0 100 -2 l37 -1 l0 -10 q-60 -9 -225 -29 q-169 -22 -232 -30 q-105 -14 -98 -16 q-41 -3 -41 -5 q0 -1 21 -2 l20 0 l555 0 l2 -12 Z"},
        {title:"", id:"58", sample:"", manual:"", paths:"M472 866 q-8 6 -11 10 q-1 1 -1.5 3.5 q-0.5 2.5 0.5 4.5 q3 4 9 0 q4 -3 12 -11 l7 -7 l38 39 q6 3 9 3 q3 0 5 -2 q1 -2 1 -4 l0 -2 l-46 -40 l90 -83 l27 26 l2 3 q4 3 6 5 q3 2 5 1 q2 -1 0 -5 q-2 -3 -5 -8 l-4 -4 l-25 -27 l70 -69 q12 16 26 30 q2 2 5 3 q3 1 6 0 q2 0 0 -4 q-1 -4 -4 -7 q-5 -6 -16 -17 l-9 -10 q18 -17 55 -54 l33 -33 l16 20 l5 4 q4 5 8 7 q5 3 6.5 0.5 q1.5 -2.5 -1.5 -7.5 q-2 -4 -6 -8 l-4 -4 l-16 -21 l83 -75 q15 17 23 24 q2 2 7 3 q5 1 6 -0.5 q1 -1.5 0 -7.5 l-2 -6 l-22 -23 l31 -33 q1 -4 0 -5 q-1 -2 -6 -1 q-8 7 -22 20 l-14 11 l-81 -81 q34 -35 32 -35 q2 -3 1.5 -5.5 q-0.5 -2.5 -3 -2.5 q-2.5 0 -4.5 2 l-35 34 l-74 -74 l0 0 q25 -23 36 -34 q0 -1 1 -3 q0 -2 -1 -2 q-1 -2 -5 -2 q-8 7 -24 21 l-15 13 l-83 -82 l0 0 q23 -21 31 -30 l1 0 q2 -3 3 -4 q1 -3 -1 -6 q-2 -3 -5 -2 q-1 1 -4 3 l-1 1 q-6 5 -20 18 l-12 11 l-70 -73 l12 -11 q14 -12 19 -17 q2 -2 2 -7 q0 -2 0 -3 l-3 0 q-5 0 -7 2 q-5 5 -18 16 l-11 11 q-17 -22 -39 -38 q-4 0 -5 1 q-1 1 0 3 l0 1 l33 42 l-80 77 l-8 -8 q-11 -12 -17 -17 q-7 -4 -15 -7 q2 8 6 14 q5 7 17 19 l8 8 l-87 82 q-30 -31 -34 -36 q-2 -2 -4 -2 q-2 0 -2.5 2 q-0.5 2 1.5 5 q2 4 17 20 l14 16 q-47 47 -71 70 l-8 -8 q-11 -11 -17 -16 q-2 -2 -6 -3 q-4 -1 -5 0.5 q-1 1.5 0 4.5 q1 3 2 5 q6 7 18 19 l7 7 l-84 80 l-30 -28 q-2 7 1 14 q2 6 7 12 q3 4 8 7 l4 4 l-16 16 q-4 4 -4 6 q-2 3 0.5 4.5 q2.5 1.5 5.5 1.5 q2 -1 4 -3 l1 -1 q9 -7 17 -15 q0 1 0 2 l0 0 l26 26 q29 29 44 43 q-11 12 -13 15 q-4 5 -4 8 q0 2 1 7 q6 -4 16 -13 l9 -8 l81 85 l-8 9 q-9 9 -13 14 q-2 4 -2 6 q0 2 2 2 q2 0 5 -3 q5 -3 15 -11 l9 -8 q11 12 26 26 q29 30 44 44 l-20 24 q0 0 0 2.5 q0 2.5 0.5 3 q0.5 0.5 4 -0.5 q3.5 -1 9.5 -6 q5 -4 10 -10 l4 -5 l85 86 l-8 6 ZM661 685 l-80 -86 l85 -81 l84 82 l-89 85 ZM490 848 l-81 -86 l83 -78 l83 82 l-85 82 ZM494 511 l-84 -85 l83 -82 l32 32 q36 36 55 53 l-86 82 ZM665 345 l-77 77 l-87 -85 l84 -74 l80 82 ZM756 434 l83 82 l-80 76 q-18 -17 -53 -51 q-15 -15 -31 -31 l81 -76 ZM318 678 l-80 -86 l86 -81 l80 85 l-86 82 ZM494 331 l-68 -72 l81 -77 l72 70 l-85 79 ZM403 432 q13 15 30 33 q35 36 53 53 q-16 16 -47 43 l-27 25 l-77 -83 l68 -71 l0 0 ZM593 429 l0 0 q58 -51 83 -75 q16 14 45 44 l26 28 l-79 75 l-75 -72 ZM500 518 l86 -82 l72 74 l-83 80 l-75 -72 ZM326 687 q18 -17 53 -53 l32 -32 l0 0 q12 13 26 29 q30 32 46 46 l-82 77 l-75 -67 ZM583 759 q-18 -17 -53 -51 l-31 -31 l75 -70 l80 85 l-71 67 ZM417 267 l69 71 l-82 81 l0 0 q-12 -12 -27 -27 q-29 -29 -45 -44 l85 -81 ZM229 584 q-11 -11 -26 -26 q-29 -30 -46 -44 l86 -82 l0 0 q12 12 26 27 q30 30 46 44 q-43 41 -86 81 l0 0 ZM325 355 l0 0 q11 12 26 27 q29 29 45 44 l-70 66 q-16 -14 -45 -44 q-14 -13 -27 -27 l71 -66 ZM493 667 q-16 -14 -46 -44 l-26 -27 l74 -70 l71 72 l-73 69 ZM513 431 q0 -16 -13 -16 q-9 0 -13 5 q-4 5 -4 14 q0 7 3 11 q3 5 10 5 q7 0 12 -5 q5 -5 5 -14 ZM513 600 q0 -16 -13 -16 q-9 0 -13 5 q-4 5 -4 14 q0 7 3 11 q3 5 10 5 q7 0 12 -5 q5 -5 5 -14 ZM610 515 q0 -16 -13 -16 q-9 0 -13 5 q-4 5 -4 14 q0 7 3 11 q3 5 10 5 q7 0 12 -5 q5 -5 5 -14 ZM424 515 q0 -16 -13 -16 q-9 0 -13 5 q-4 5 -4 14 q0 7 3 11 q3 5 10 5 q7 0 12 -5 q5 -5 5 -14 Z"},
        {title:"", id:"59", sample:"", manual:"", paths:"M472 866 q-8 6 -11 10 q-1 1 -1.5 3.5 q-0.5 2.5 0.5 4.5 q3 4 9 0 q4 -3 12 -11 l7 -7 l38 39 q6 3 9 3 q3 0 5 -2 q1 -2 1 -4 l0 -2 l-46 -40 l90 -83 l27 26 l2 3 q4 3 6 5 q3 2 5 1 q2 -1 0 -5 q-2 -3 -5 -8 l-4 -4 l-25 -27 l70 -69 q12 16 26 30 q2 2 5 3 q3 1 6 0 q2 0 0 -4 q-1 -4 -4 -7 q-5 -6 -16 -17 l-9 -10 q18 -17 55 -54 l33 -33 l16 20 l5 4 q4 5 8 7 q5 3 6.5 0.5 q1.5 -2.5 -1.5 -7.5 q-2 -4 -6 -8 l-4 -4 l-16 -21 l83 -75 q15 17 23 24 q2 2 7 3 q5 1 6 -0.5 q1 -1.5 0 -7.5 l-2 -6 l-22 -23 l31 -33 q1 -4 0 -5 q-1 -2 -6 -1 q-8 7 -22 20 l-14 11 l-81 -81 q34 -35 32 -35 q2 -3 1.5 -5.5 q-0.5 -2.5 -3 -2.5 q-2.5 0 -4.5 2 l-35 34 l-74 -74 l0 0 q25 -23 36 -34 q0 -1 1 -3 q0 -2 -1 -2 q-1 -2 -5 -2 q-8 7 -24 21 l-15 13 l-83 -82 l0 0 q23 -21 31 -30 l1 0 q2 -3 3 -4 q1 -3 -1 -6 q-2 -3 -5 -2 q-1 1 -4 3 l-1 1 q-6 5 -20 18 l-12 11 l-70 -73 l12 -11 q14 -12 19 -17 q2 -2 2 -7 q0 -2 0 -3 l-3 0 q-5 0 -7 2 q-5 5 -18 16 l-11 11 q-17 -22 -39 -38 q-4 0 -5 1 q-1 1 0 3 l0 1 l33 42 l-80 77 l-8 -8 q-11 -12 -17 -17 q-7 -4 -15 -7 q2 8 6 14 q5 7 17 19 l8 8 l-87 82 q-30 -31 -34 -36 q-2 -2 -4 -2 q-2 0 -2.5 2 q-0.5 2 1.5 5 q2 4 17 20 l14 16 q-47 47 -71 70 l-8 -8 q-11 -11 -17 -16 q-2 -2 -6 -3 q-4 -1 -5 0.5 q-1 1.5 0 4.5 q1 3 2 5 q6 7 18 19 l7 7 l-84 80 l-30 -28 q-2 7 1 14 q2 6 7 12 q3 4 8 7 l4 4 l-16 16 q-4 4 -4 6 q-2 3 0.5 4.5 q2.5 1.5 5.5 1.5 q2 -1 4 -3 l1 -1 q9 -7 17 -15 q0 1 0 2 l0 0 l26 26 q29 29 44 43 q-11 12 -13 15 q-4 5 -4 8 q0 2 1 7 q6 -4 16 -13 l9 -8 l81 85 l-8 9 q-9 9 -13 14 q-2 4 -2 6 q0 2 2 2 q2 0 5 -3 q5 -3 15 -11 l9 -8 q11 12 26 26 q29 30 44 44 l-20 24 q0 0 0 2.5 q0 2.5 0.5 3 q0.5 0.5 4 -0.5 q3.5 -1 9.5 -6 q5 -4 10 -10 l4 -5 l85 86 l-8 6 ZM661 685 l-80 -86 l85 -81 l84 82 l-89 85 ZM490 848 l-81 -86 l83 -78 l83 82 l-85 82 ZM494 511 l-84 -85 l83 -82 l32 32 q36 36 55 53 l-86 82 ZM665 345 l-77 77 l-87 -85 l84 -74 l80 82 ZM756 434 l83 82 l-80 76 q-18 -17 -53 -51 q-15 -15 -31 -31 l81 -76 ZM318 678 l-80 -86 l86 -81 l80 85 l-86 82 ZM494 331 l-68 -72 l81 -77 l72 70 l-85 79 ZM403 432 q13 15 30 33 q35 36 53 53 q-16 16 -47 43 l-27 25 l-77 -83 l68 -71 l0 0 ZM593 429 l0 0 q58 -51 83 -75 q16 14 45 44 l26 28 l-79 75 l-75 -72 ZM500 518 l86 -82 l72 74 l-83 80 l-75 -72 ZM326 687 q18 -17 53 -53 l32 -32 l0 0 q12 13 26 29 q30 32 46 46 l-82 77 l-75 -67 ZM583 759 q-18 -17 -53 -51 l-31 -31 l75 -70 l80 85 l-71 67 ZM417 267 l69 71 l-82 81 l0 0 q-12 -12 -27 -27 q-29 -29 -45 -44 l85 -81 ZM229 584 q-11 -11 -26 -26 q-29 -30 -46 -44 l86 -82 l0 0 q12 12 26 27 q30 30 46 44 q-43 41 -86 81 l0 0 ZM325 355 l0 0 q11 12 26 27 q29 29 45 44 l-70 66 q-16 -14 -45 -44 q-14 -13 -27 -27 l71 -66 ZM493 667 q-16 -14 -46 -44 l-26 -27 l74 -70 l71 72 l-73 69 Z"},
        {title:"", id:"60", sample:"", manual:"", paths:"M640 821 q0 11 0 22 q3 6 7 12 q4 -5 6 -11 q0 -12 0 -24 l132 0 q-1 8 0 15 q3 9 7 17 l6 -17 q0 -2 0 -3 q-1 -8 2.5 -11.5 q3.5 -3.5 11.5 -2.5 q18 1 36 0 q2 0 4 -1 q2 -1 4.5 -3 q2.5 -2 3.5 -3 q-1 0 -3.5 -2 q-2.5 -2 -4.5 -2 q-2 -1 -4 -1 l-49 0 l0 -135 l15 0 q19 0 29 0 q2 -1 5 -2 q2 -1 5 -3 q2 -1 4 -2 q-7 -4 -14 -6 l-44 0 l0 -137 l15 0 q18 0 27 0 q7 -2 13 -6 q-2 -1 -5 -3 q-3 -2 -4 -3 q-3 -1 -5 -1 l-41 0 l0 -124 q17 1 33 0 q9 -2 18 -7 q-9 -4 -18 -6 q-7 0 -22 0 l-11 0 l0 -134 q15 0 30 0 q9 -3 17 -7 q-9 -5 -18 -6 q-6 -1 -19 -1 l-11 1 l0 -12 q0 -14 0 -20 q-2 -8 -6 -14 q-5 6 -7 13 q0 8 0 21 l0 12 l-133 0 q1 -13 0 -27 q-2 -8 -6 -16 q-4 7 -6 16 q-1 6 0 18 l0 10 l-116 0 l0 -11 q1 -14 0 -22 q0 -1 -1 -3 q-1 -1 -3 -3 l-2 -3 q-1 1 -2.5 3 q-1.5 2 -2.5 3 q-1 2 -1 4 q-1 7 0 22 l0 12 l-134 0 l1 -9 q0 -12 -1 -18 q-2 -8 -6 -14 q-4 6 -6 13 q-1 15 0 29 l-115 0 q0 -13 0 -26 q-3 -8 -7 -14 q-4 6 -6 14 q0 6 0 18 l0 10 q-6 0 -17 0 q-21 0 -31 0 q-2 0 -5 2 q-1 1 -3.5 3 q-2.5 2 -4.5 3 q6 4 13 5 l47 0 l0 135 l-16 -1 q-19 0 -28 1 q-2 0 -4 1 q-1 1 -4 2.5 q-3 1.5 -4 2.5 q1 1 3.5 2.5 q2.5 1.5 4.5 2.5 q2 1 4 1 l44 0 l0 124 l-14 0 q-18 -1 -26 0 q-2 0 -4 1 q-2 1 -4.5 3 q-2.5 2 -4.5 2 q2 1 4.5 3 q2.5 2 3.5 3 q3 1 5 1 l40 0 l0 137 l-13 0 q-16 0 -25 0 q-2 1 -7 4 q-2 2 -4 2 q2 1 4 3 q2 2 4 2 q2 2 4 2 l37 0 l0 136 l-12 0 q-16 -1 -23 0 q-2 0 -7 3 q-2 2 -3 2 q1 1 3.5 3 q2.5 2 3.5 3 q2 1 3 1 q8 0 24 0 l13 0 l-1 10 q0 12 1 17 q0 3 4 8 q1 2 2 3 q1 -1 2.5 -3.5 q1.5 -2.5 2.5 -3.5 q1 -2 1 -4 q1 -13 0 -27 l114 0 q0 7 1 14 q1 5 4 16 l2 6 q6 -2 7 -7 q1 -2 0 -8 q-1 -6 0 -8 q1 -8 1 -15 l132 0 q0 13 0 26 q1 2 4 6 q2 2 3 3 q0 -1 2 -3 q2 -2 2 -3 q2 -2 2 -3 q0 -6 0 -18 q0 -6 0 -9 l115 -1 ZM784 523 l0 136 l-130 0 l0 -136 l130 0 ZM511 661 l-131 0 l0 -135 l131 0 l0 135 ZM654 372 l0 -132 l130 0 l0 132 l-130 0 ZM380 676 l130 0 l0 132 l-130 0 l0 -132 ZM785 806 l-131 0 l0 -132 l131 0 l0 132 ZM380 374 l0 -132 l131 0 l0 132 l-131 0 ZM511 510 l-131 0 l0 -120 l131 0 l0 120 ZM784 508 l-131 0 l0 -121 l131 0 l0 121 ZM526 525 l113 0 l0 135 l-114 0 l1 -135 ZM639 807 l-113 0 l0 -132 l113 0 l0 132 ZM365 662 l-114 0 l0 -123 q0 -4 1 -6 q0 -3 2.5 -5 q2.5 -2 7.5 -2 l97 0 q3 0 6 0 l0 136 ZM639 241 l0 132 l-113 0 l0 -132 l113 0 ZM365 243 l0 132 l-113 0 l0 -132 l113 0 ZM253 809 l0 -132 l112 0 l0 132 l-112 0 ZM639 387 l0 122 l-113 0 l0 -122 l113 0 ZM365 390 l0 122 l-112 0 l0 -122 l112 0 ZM461 591 q0 -16 -13 -16 q-9 0 -13 5 q-4 5 -4 14 q0 7 3 11 q3 5 10 5 q7 0 12 -5 q5 -5 5 -14 ZM598 591 q0 -16 -13 -16 q-9 0 -13 5 q-4 5 -4 14 q0 7 3 11 q3 5 10 5 q7 0 12 -5 q5 -5 5 -14 ZM461 449 q0 -16 -13 -16 q-9 0 -13 5 q-4 5 -4 14 q0 7 3 11 q3 5 10 5 q7 0 12 -5 q5 -5 5 -14 ZM598 449 q0 -16 -13 -16 q-9 0 -13 5 q-4 5 -4 14 q0 7 3 11 q3 5 10 5 q7 0 12 -5 q5 -5 5 -14 Z"},
        {title:"", id:"61", sample:"", manual:"", paths:"M640 821 q0 11 0 22 q3 6 7 12 q4 -5 6 -11 q0 -12 0 -24 l132 0 q-1 8 0 15 q3 9 7 17 l6 -17 q0 -2 0 -3 q-1 -8 2.5 -11.5 q3.5 -3.5 11.5 -2.5 q18 1 36 0 q2 0 4 -1 q2 -1 4.5 -3 q2.5 -2 3.5 -3 q-1 0 -3.5 -2 q-2.5 -2 -4.5 -2 q-2 -1 -4 -1 l-49 0 l0 -135 l15 0 q19 0 29 0 q2 -1 5 -2 q2 -1 5 -3 q2 -1 4 -2 q-7 -4 -14 -6 l-44 0 l0 -137 l15 0 q18 0 27 0 q7 -2 13 -6 q-2 -1 -5 -3 q-3 -2 -4 -3 q-3 -1 -5 -1 l-41 0 l0 -124 q17 1 33 0 q9 -2 18 -7 q-9 -4 -18 -6 q-7 0 -22 0 l-11 0 l0 -134 q15 0 30 0 q9 -3 17 -7 q-9 -5 -18 -6 q-6 -1 -19 -1 l-11 1 l0 -12 q0 -14 0 -20 q-2 -8 -6 -14 q-5 6 -7 13 q0 8 0 21 l0 12 l-133 0 q1 -13 0 -27 q-2 -8 -6 -16 q-4 7 -6 16 q-1 6 0 18 l0 10 l-116 0 l0 -11 q1 -14 0 -22 q0 -1 -1 -3 q-1 -1 -3 -3 l-2 -3 q-1 1 -2.5 3 q-1.5 2 -2.5 3 q-1 2 -1 4 q-1 7 0 22 l0 12 l-134 0 l1 -9 q0 -12 -1 -18 q-2 -8 -6 -14 q-4 6 -6 13 q-1 15 0 29 l-115 0 q0 -13 0 -26 q-3 -8 -7 -14 q-4 6 -6 14 q0 6 0 18 l0 10 q-6 0 -17 0 q-21 0 -31 0 q-2 0 -5 2 q-1 1 -3.5 3 q-2.5 2 -4.5 3 q6 4 13 5 l47 0 l0 135 l-16 -1 q-19 0 -28 1 q-2 0 -4 1 q-1 1 -4 2.5 q-3 1.5 -4 2.5 q1 1 3.5 2.5 q2.5 1.5 4.5 2.5 q2 1 4 1 l44 0 l0 124 l-14 0 q-18 -1 -26 0 q-2 0 -4 1 q-2 1 -4.5 3 q-2.5 2 -4.5 2 q2 1 4.5 3 q2.5 2 3.5 3 q3 1 5 1 l40 0 l0 137 l-13 0 q-16 0 -25 0 q-2 1 -7 4 q-2 2 -4 2 q2 1 4 3 q2 2 4 2 q2 2 4 2 l37 0 l0 136 l-12 0 q-16 -1 -23 0 q-2 0 -7 3 q-2 2 -3 2 q1 1 3.5 3 q2.5 2 3.5 3 q2 1 3 1 q8 0 24 0 l13 0 l-1 10 q0 12 1 17 q0 3 4 8 q1 2 2 3 q1 -1 2.5 -3.5 q1.5 -2.5 2.5 -3.5 q1 -2 1 -4 q1 -13 0 -27 l114 0 q0 7 1 14 q1 5 4 16 l2 6 q6 -2 7 -7 q1 -2 0 -8 q-1 -6 0 -8 q1 -8 1 -15 l132 0 q0 13 0 26 q1 2 4 6 q2 2 3 3 q0 -1 2 -3 q2 -2 2 -3 q2 -2 2 -3 q0 -6 0 -18 q0 -6 0 -9 l115 -1 ZM784 523 l0 136 l-130 0 l0 -136 l130 0 ZM511 661 l-131 0 l0 -135 l131 0 l0 135 ZM654 372 l0 -132 l130 0 l0 132 l-130 0 ZM380 676 l130 0 l0 132 l-130 0 l0 -132 ZM785 806 l-131 0 l0 -132 l131 0 l0 132 ZM380 374 l0 -132 l131 0 l0 132 l-131 0 ZM511 510 l-131 0 l0 -120 l131 0 l0 120 ZM784 508 l-131 0 l0 -121 l131 0 l0 121 ZM526 525 l113 0 l0 135 l-114 0 l1 -135 ZM639 807 l-113 0 l0 -132 l113 0 l0 132 ZM365 662 l-114 0 l0 -123 q0 -4 1 -6 q0 -3 2.5 -5 q2.5 -2 7.5 -2 l97 0 q3 0 6 0 l0 136 ZM639 241 l0 132 l-113 0 l0 -132 l113 0 ZM365 243 l0 132 l-113 0 l0 -132 l113 0 ZM253 809 l0 -132 l112 0 l0 132 l-112 0 ZM639 387 l0 122 l-113 0 l0 -122 l113 0 ZM365 390 l0 122 l-112 0 l0 -122 l112 0 Z"}
    ],
    bihuaPaths: [
        {title:"短横", id:"0", sample:"非武三佳", manual:"请在此输入你需要生成的教程说明！", paths:"m1526.51761,-662.77314q434.99362,113.4766 450.12383,124.82426q34.04298,34.04298 15.13021,64.30341q-26.47787,45.39064 -143.73702,71.86851q-147.51958,22.69532 -313.95192,-60.52085l-166.43234,-52.95575q-329.08213,-83.21617 -567.38298,-117.25915q-139.95447,-26.47787 -37.82553,-90.78128q158.86724,-68.08596 423.64596,-18.91277q45.39064,11.34766 105.91149,22.69532l234.5183,56.7383z"},
        {title:"中横", id:"1", sample:"二正工土", manual:"", paths:"m1499.0819,-673.19141q208.29453,52.07364 425.26801,91.12886q199.61559,52.07364 234.33135,78.11045q39.05522,30.37629 17.35788,73.77098q-30.37629,52.07364 -160.56037,82.44992q-104.14726,26.03682 -507.71793,-104.14726l-229.99188,-65.09204q-4.33947,4.33947 -13.01841,0q-277.72605,-65.09204 -603.18626,-95.46833q-160.56037,-30.37629 -47.73416,-104.14726q195.27613,-104.14726 446.96536,-39.05522q95.46833,26.03682 221.31294,39.05522l216.97348,43.39469l-0.00001,0z"},
        {title:"长横", id:"2", sample:"士古长王", manual:"", paths:"m1435.68768,-516.5327q-153.17159,-7.29389 -719.66335,-97.25179q-138.58382,-17.01907 -262.57987,-12.15647q-24.31296,0 -46.1946,-17.01907q-17.01907,-17.01907 -2.43129,-43.76332q29.17554,-43.76332 172.62194,-116.70215q36.46943,-17.01907 92.38921,7.29389q379.28204,145.87772 787.73961,182.34714q345.24391,31.60682 909.30437,-75.37015q51.05719,-7.29389 68.07626,17.01907q21.88165,31.60682 -31.60682,72.93885q-206.66008,167.75936 -313.63708,136.15254q-58.35108,-9.72518 -556.76659,-46.1946l-97.25179,-7.29389l0.00003,-0.00003l0,-0.00001l-0.00001,0z"},
        {title:"左点", id:"3", sample:"小示尘步", manual:"", paths:"m1328.6341,-312.16679q-43.99256,-206.42661 -121.82554,-399.31705q-40.60851,-125.20958 37.22447,-233.49896q40.60851,-54.14469 101.52128,0q152.28193,182.73832 111.67341,450.07769q-3.38404,115.05745 -43.99256,199.65853q-23.6883,23.6883 -43.99256,23.6883q-30.45639,-10.15213 -40.60851,-40.60851l0.00001,0l-0.00001,-0.00001z"},
        {title:"右点", id:"4", sample:"主义方六", manual:"", paths:"m1108.76736,-604.6869q219.94384,-194.14941 352.51273,-221.88503q57.24566,-3.08173 87.37495,52.38953q12.05172,49.30778 -3.01293,117.106q-72.3103,166.41377 -397.70668,206.47635q-9.03879,3.08173 -12.05172,3.08173q-66.28445,9.24521 -99.42668,-12.32695q-21.0905,-9.24521 -6.02585,-52.38953q12.05172,-46.22606 78.33615,-92.4521l0,0l0,0l0,-0.00001l0.00001,0l0.00001,0z"},
        {title:"竖点", id:"5", sample:"京定空市", manual:"", paths:"m1381.7011,-973.53682q48.4883,371.74373 96.97662,543.06909q12.93022,32.32554 -48.4883,80.81385q-106.67428,61.41853 -177.79048,74.34875q-51.72086,12.93022 -74.34875,-12.93022q-22.62788,-22.62788 0,-71.1162q67.88364,-80.81385 71.1162,-633.58061c0,-96.97662 119.6045,-77.5813 132.53472,19.39532l-0.00001,0.00001l-0.00001,0.00001z"},
        {title:"撇点", id:"6", sample:"始如好妈", manual:"", paths:"m1332.63413,-1486.2989q91.04619,-74.97921 203.51501,-198.15935q42.84526,-42.84526 66.94573,-45.52309q24.10046,0 40.16744,29.45612q18.7448,26.77829 8.03349,109.79099q-16.06697,91.04619 -238.32678,219.58198l-112.46882,64.2679q-58.91224,34.81178 -133.89145,74.97921q-56.23441,26.77829 -48.20092,85.69053q50.87875,171.38106 99.07967,342.76212l26.77829,107.11316q58.91224,241.00461 112.46882,482.00923q18.7448,128.53579 69.62356,195.48152q32.13395,58.91224 10.71132,93.72402q-34.81178,48.20092 -163.34757,117.82448q-56.23441,32.13395 -99.07967,8.03349q-34.81178,-18.7448 -8.03349,-64.2679q88.36836,-128.53579 -42.84526,-856.90529l-21.42263,-120.50231q-8.03349,-26.77829 -13.38915,-64.2679q-26.77829,-139.24711 -88.36836,-243.68244q-26.77829,-58.91224 26.77829,-104.43533q115.14665,-66.94573 211.54849,-149.95843l93.72402,-83.0127l-0.00003,-0.00001z"},
        {title:"撇点", id:"7", sample:"女妥妄妻", manual:"", paths:"m1181.46197,-478.06461q96.79715,263.77223 166.97508,479.14588q29.03914,96.79715 62.91815,162.13522q53.23843,60.49822 -38.71886,137.93594q-111.31672,87.11743 -181.49465,89.53736q-38.71886,2.41993 -48.39857,-26.61922q-9.67971,-21.77936 12.09964,-41.13879q50.8185,-58.07829 45.97865,-162.13522q-29.03914,-256.51244 -152.45551,-653.38075l-36.29893,-108.89679q-65.33808,-188.75444 -91.95729,-215.37366q-58.07829,-43.55872 -14.51957,-113.73665q21.77936,-24.19929 60.49822,-14.51957q89.53736,21.77936 326.69038,-128.25622l106.47686,-70.17793q246.83273,-145.19572 537.22417,-438.0071q45.97865,-45.97865 77.43772,-43.55872q38.71886,2.41993 38.71886,58.07829q-2.41993,89.53736 -77.43772,200.85408q-43.55872,65.33808 -174.23487,128.25622q-246.83273,145.19572 -319.43059,186.33451l-120.99644,62.91815q-300.07116,154.87544 -304.91102,171.81494q0,14.51957 82.27758,232.31316l43.55872,106.47686z"},
        {title:"长点", id:"8", sample:"不贝杯怀", manual:"", paths:"m1112.82504,-370.99906q181.63932,-183.80169 391.38948,-449.77355q34.59797,-54.05932 75.68305,-69.19593q21.62373,-6.48712 43.24746,19.46136q34.59797,32.43559 10.81186,147.04135q-25.94847,155.69084 -510.31999,434.63694q-21.62373,15.13661 -30.27322,-17.29898q-6.48712,-34.59797 19.46136,-64.87118z"},
        {title:"垂露竖", id:"9", sample:"下个开川", manual:"", paths:"m1423.67874,-242.1738q0,217.85924 42.7175,380.18574q32.03812,53.39687 -25.6305,93.9785q-34.174,25.6305 -100.38612,66.21212q-53.39687,38.44575 -98.25025,2.13587q-12.81525,-12.81525 2.13587,-44.85337q72.61975,-108.92962 76.8915,-217.85924q2.13587,-136.696 6.40762,-296.88662l-4.27175,-243.48974q-6.40762,-533.96874 -23.49462,-647.17011q-51.261,-232.81037 -21.35875,-320.38124q8.5435,-25.6305 21.35875,-55.53275q14.95112,-40.58162 32.03812,-46.98925q14.95112,-14.95112 29.90225,4.27175q19.22287,8.5435 40.58162,55.53275q21.35875,53.39687 19.22287,126.01662q-2.13587,98.25025 0,931.24147l2.13587,213.58749z"},
        {title:"悬针竖", id:"10", sample:"十干平丰", manual:"", paths:"m1324.31042,-577.04801q0,-482.47285 -9.06052,-641.032q-6.79539,-428.10971 40.77235,-496.06364q33.97696,-36.24209 54.36314,13.59078q33.97696,81.54471 36.24209,1141.6259l2.26513,99.66575q2.26513,321.64857 15.85592,489.26824q2.26513,77.01445 43.03748,144.96837q15.85592,36.24209 -31.71183,74.74932q-56.62827,43.03748 -158.55915,70.21905q-47.56775,13.59078 -77.01445,-20.38618q-22.65131,-20.38618 6.79539,-47.56775q70.21905,-56.62827 74.74932,-140.43811q2.26513,-210.65716 2.26513,-593.46426l0,-95.13549z"},
        {title:"短竖", id:"11", sample:"刊列划则", manual:"", paths:"m1238.20255,-240.68943q72.19989,-207.48266 8.7515,-707.56907q-19.69088,-95.76123 48.13326,-202.16259q21.87876,-31.92041 45.94539,2.66003q52.50901,90.44116 50.32114,226.1029q-13.12725,345.80443 21.87876,590.52757q15.31513,66.50085 -32.81813,98.42126q-39.38176,31.92041 -78.76352,58.52075q-28.44238,10.64014 -52.50901,-2.66003q-19.69088,-18.62024 -10.93938,-63.84082z"},
        {title:"平捺", id:"12", sample:"走足是趣", manual:"", paths:"m862.96409,-333.10234q49.58309,-27.54617 104.67543,-60.60156q454.51174,-322.29014 1024.71737,-575.71487q115.69389,-74.37465 683.14491,101.92082q35.81002,19.28232 41.31924,44.07386q8.26385,27.54617 -57.84695,24.79155q-225.87856,27.54617 -473.79405,38.56463q-539.90485,33.0554 -1286.40594,501.34021l-104.67543,60.60156q-209.35086,157.01315 -435.22942,115.69389q-2.75462,0 -8.26385,-2.75462q-27.54617,-16.5277 -13.77309,-41.31924q19.28232,-27.54617 52.33771,-27.54617q159.76776,-8.26385 355.34553,-112.93929q2.75462,-2.75462 11.01847,-8.26385l107.43005,-57.84695l0,0.00003z"},
        {title:"斜捺", id:"13", sample:"人大天文", manual:"", paths:"m1148.62281,-614.90961q104.58491,-148.36464 471.84819,-454.82274q53.50856,-53.50856 141.06802,-53.50856q262.67837,2.43221 471.84819,38.91531q111.88153,17.02545 102.1527,46.21194q-2.43221,17.02545 -116.74594,43.77973q-462.11936,109.44932 -593.45855,175.11892q-160.52567,75.39842 -415.90743,291.86486l-111.88153,99.72049q-111.88153,104.58491 -226.19527,223.76306q-102.1527,104.58491 -194.57657,104.58491q-46.21194,0 -55.94076,-12.16104q-2.43221,-17.02545 36.48311,-48.64414q124.04257,-68.1018 394.01756,-352.67004l97.28829,-102.1527z"},
        {title:"长撇", id:"14", sample:"木林龙本", manual:"", paths:"m1456.64621,-786.02295q88.9938,177.81566 150.60489,367.02976l34.22838,111.70471q47.91974,170.9766 120.94029,289.52037q22.81892,22.79688 2.28189,50.15313q-36.51028,54.71251 -118.6584,111.70471q-47.91974,36.47501 -93.55758,31.91563q-57.04731,-6.83906 -25.10081,-61.55157q54.76541,-91.18752 36.51028,-168.69691q-36.51028,-152.73909 -75.30244,-284.96099l-36.51028,-111.70471q-225.90733,-636.03293 -650.33929,-1000.783q-43.35595,-34.19532 -91.27569,-72.95001q-34.22838,-15.95782 -41.07406,-25.07657q-9.12757,-15.95782 29.6646,-20.51719q22.81892,-2.27969 130.06786,56.9922q77.58434,36.47501 209.93409,150.4594q184.83327,159.57816 383.3579,508.37041l34.22838,68.39064z"},
        {title:"斜撇", id:"15", sample:"力少才左", manual:"", paths:"m1907.10509,-126.11192q25.84145,28.71272 43.06908,43.06908q25.84145,11.48509 22.97018,48.81163q-2.87127,28.71272 -37.32654,71.78181q-94.75199,103.3658 -198.11779,91.88071q-28.71272,-2.87127 -22.97018,-45.94036q8.61382,-304.35486 -488.11629,-809.69878q-34.45527,-25.84145 -63.16799,-57.42545q-157.91998,-149.30616 -551.28428,-424.9483q-25.84145,-17.22763 5.74254,-25.84145q80.39562,0 407.72066,186.6327q8.61382,8.61382 20.09891,11.48509q335.93886,209.60288 818.3126,855.63914l43.06908,54.55417z"},
        {title:"横撇", id:"16", sample:"又水永承", manual:"", paths:"m1649.36329,-867.94069q18.97787,32.5335 46.08912,65.067q181.64537,252.13462 295.51262,615.42536q40.66687,130.134 135.55625,214.17887q59.64475,51.51137 8.13337,94.88937q-67.77812,48.80025 -157.24524,70.48925q-73.20037,32.5335 -276.53474,-48.80025q-398.53536,-108.445 -726.58148,-138.26737q-56.93362,0 -67.77812,-16.26675q-10.8445,-35.24462 59.64475,-81.33375q84.04487,-56.93362 281.95699,10.8445q498.84698,149.11187 555.78061,132.84512q32.5335,0 32.5335,-54.2225q-89.46712,-431.06886 -298.22374,-753.69273l-62.35587,-86.756q-81.33375,-92.17825 -170.80087,-184.35649q-238.57899,-214.17887 -696.7591,-441.91336q-48.80025,-24.40012 -21.689,-40.66687q18.97787,-10.8445 94.88937,13.55562q610.00311,189.77874 889.24897,528.66936l78.62262,100.31162z"},
        {title:"竖撇", id:"17", sample:"月用舟丹", manual:"", paths:"m1429.90723,164.80235q96.27827,-160.46378 53.48793,-764.87737q-10.69759,-243.37007 -136.39422,-540.22808q-80.23189,-208.60292 -374.4155,-502.78653q-40.11595,-34.76715 -48.13914,-53.48793q-2.6744,-18.72077 29.41836,-18.72077q42.79034,0 101.62706,42.79034q152.4406,106.97586 240.69568,211.27732q192.55654,227.3237 270.11404,537.55368q80.23189,417.20584 80.23189,930.68995q10.69759,58.83672 13.37198,88.25508q16.04638,58.83672 -42.79034,85.58069q-136.39422,64.18551 -179.18456,56.16232q-56.16232,-10.69759 -8.02319,-72.2087z"},
        {title:"短撇", id:"18", sample:"生禾和牺", manual:"", paths:"m1446.86578,-787.37938q339.97067,489.4018 343.87838,504.23216q-3.90771,14.83036 -7.81542,25.95313q-15.63084,48.19866 -132.8621,126.05804q-105.50814,66.73661 -179.75461,63.02902q-70.33876,-11.12277 -35.16938,-88.98215q105.50814,-215.04019 -488.4636,-1027.00227q-39.07709,-37.07589 -46.89251,-63.02902q-11.72313,-37.07589 42.9848,-29.66072q97.69272,14.83036 429.84797,400.41966l74.24647,88.98215z"},
        {title:"横钩", id:"19", sample:"买予矛丞", manual:"", paths:"m661.92625,-597.04437q426.69237,129.00002 1075.00015,195.15388q122.38463,13.23077 168.69234,6.61539q59.53847,-43 49.61539,-69.46155q0,-3.30769 -109.15386,-281.15389q-23.15385,-43 0,-59.53847q23.15385,-13.23077 82.69232,29.76923q188.53849,142.23079 347.30774,195.15388q132.30771,52.92309 125.69232,82.69232q-3.30769,33.07693 -254.69234,211.69234q-72.76924,52.92309 -334.07697,9.92307q-406.84621,-52.92309 -1005.53861,-145.53848q-162.07695,-23.15385 -327.46159,-43q-112.46155,-9.92307 -43,-69.46155q109.15386,-92.6154 224.92311,-62.84616l0,-0.00001z"},
        {title:"戈钩", id:"20", sample:"民式氏成", manual:"", paths:"m1283.00329,-1113.24733q244.3313,-376.07857 526.98909,-541.36152q167.67835,-110.18862 239.54049,-103.00241q52.69891,16.76783 26.34945,86.23457q-14.37243,131.74727 -9.58162,515.01206q-2.3954,64.67593 -26.34945,67.07134q-16.76783,-2.3954 -33.53567,-59.88512q-38.32648,-117.37484 -71.86214,-213.19104q-31.14026,-100.60701 -69.46674,-103.00241q-31.14026,-7.18622 -107.79322,35.93108q-222.77266,153.30591 -388.0556,407.21884l-71.86214,124.56105q-95.8162,179.65537 -203.60942,457.52234l-47.9081,126.95647q-81.44377,244.3313 -93.42079,440.75451q9.58162,110.18862 -143.7243,138.93348q-100.60701,23.95405 -146.1197,-7.18622q-50.30351,-28.74486 -14.37243,-74.25756q138.93348,-81.44377 158.09673,-170.07375q67.07134,-203.60942 129.35187,-380.86939l43.11729,-117.37484q107.79322,-280.26238 234.74969,-510.22125l69.46674,-119.77025l-0.00001,0.00002z"},
        {title:"竖钩", id:"21", sample:"小才事水", manual:"", paths:"m1279.23729,218.94797q12.00297,-102.02528 6.00149,-1689.41857q-3.00074,-66.01636 -39.00967,-93.02305q-30.00743,-27.00669 -120.02974,-3.00074q-102.02528,21.0052 -195.04833,39.00967q-108.02676,30.00743 -96.02379,-3.00074q3.00074,-21.0052 72.01784,-63.01561q243.06022,-147.03643 312.07732,-243.06022q75.01859,-108.02676 132.03271,-105.02602q45.01115,-3.00074 87.02156,108.02676q48.0119,138.0342 36.00892,366.0907q-99.02453,1350.33456 24.00595,1770.43865q54.01338,93.02305 -120.02974,165.04089q-102.02528,57.01413 -165.04089,33.00818q-54.01338,-21.0052 -6.00149,-90.0223q66.01636,-84.02082 72.01784,-192.04758z"},
        {title:"竖折折钩", id:"22", sample:"马吗妈骂", manual:"", paths:"m1765.41291,-638.37222q43.08983,0 91.56589,-24.23803q35.01049,-24.23803 32.31737,-75.40721q2.69311,-40.39672 -67.32786,-409.3534q-51.16917,-218.14227 -105.03146,-296.24259q-32.31737,-67.32786 -107.72458,-61.94163q-105.03146,35.01049 -212.75604,64.63475q-51.16917,16.15869 -59.24852,2.69311q-8.07934,-16.15869 35.01049,-48.47606q228.91473,-212.75604 253.15276,-285.47013q10.77246,-26.93114 37.7036,-29.62426q48.47606,-8.07934 140.04195,83.48655q88.87278,91.56589 113.11081,201.98359q161.58687,767.53762 220.83539,807.93434q26.93114,18.8518 24.23803,40.39672q2.69311,24.23803 -91.56589,91.56589q-91.56589,59.24852 -113.11081,64.63475q-35.01049,8.07934 -105.03146,-13.46557q-51.16917,-10.77246 -121.19015,-13.46557q-131.96261,-2.69311 -339.33242,-37.7036q-269.31145,-35.01049 -433.59143,-78.10032q-91.56589,-18.8518 -105.03146,48.47606q-16.15869,169.66621 29.62426,371.6498q10.77246,113.11081 26.93114,121.19015q40.39672,64.63475 -53.86229,134.65572q-88.87278,67.32786 -137.34884,72.71409q-35.01049,2.69311 -45.78295,-26.93114q-10.77246,-26.93114 16.15869,-51.16917q35.01049,-67.32786 43.08983,-121.19015q8.07934,-131.96261 -18.8518,-368.95668q-24.23803,-185.8249 -43.08983,-215.44916q-18.8518,-43.08983 40.39672,-94.25901q35.01049,-35.01049 56.5554,-40.39672q32.31737,8.07934 75.40721,18.8518q40.39672,26.93114 304.32194,83.48655q298.93571,64.63475 619.41633,83.48655z"},
        {title:"卧钩", id:"23", sample:"心思您忘", manual:"", paths:"m574.30277,-324.33297q47.15684,-367.82337 314.37894,-572.16968q320.66652,-226.35284 999.72505,-229.49663q144.61431,12.57516 267.2221,56.58821q88.02611,31.4379 100.60127,84.88232q18.86274,31.4379 -106.88884,141.47053q-188.62737,198.05874 -320.66652,396.11747q-37.72548,56.58821 -53.44442,34.58169q-12.57516,-22.00653 0,-69.16337q47.15684,-144.61431 84.88232,-301.80379q18.86274,-69.16337 -3.14379,-97.45747q-31.4379,-40.86926 -160.33326,-37.72548q-597.32,9.43137 -839.39179,248.35937q-106.88884,106.88884 -150.90189,282.94105q-22.00653,75.45094 -56.58821,94.31369q-40.86926,22.00653 -66.01957,12.57516q-18.86274,-3.14379 -9.43137,-44.01305l-0.00001,0l0,-0.00002z"},
        {title:"狐弯钩", id:"24", sample:"了子手狠", manual:"", paths:"m1457.14181,-623.13668q30.64652,-508.73229 -73.55166,-842.77939q-12.25861,-39.84048 -33.71118,-39.84048q-45.96978,-9.19396 -174.68518,27.58187q-91.93957,30.64652 -104.19818,15.32326q-12.25861,-18.38791 18.38791,-55.16374q122.58609,-113.39214 199.2024,-217.59032q55.16374,-82.74561 82.74561,-79.68096q21.45257,-9.19396 61.29305,36.77583q239.04288,257.4308 159.36192,1213.60232q-12.25861,119.52144 -36.77583,223.71962q-39.84048,174.68518 -101.13353,288.07732l-79.68096,134.8447q-147.10331,202.26705 -324.85315,294.20662q-39.84048,27.58187 -55.16374,-6.1293q-12.25861,-39.84048 -3.06465,-101.13353q21.45257,-64.3577 73.55166,-79.68096q110.32748,-45.96978 208.39636,-229.84892l64.3577,-125.65075q45.96978,-104.19818 73.55166,-202.26705l45.96978,-254.36614z"},
        {title:"竖弯钩", id:"25", sample:"儿兀元允", manual:"", paths:"m2108.93032,-1420.37773q-66.292,183.09218 -94.70285,498.76836q-3.15676,50.50819 -25.25409,75.76228q-22.09733,22.09733 -37.88114,-28.41086q-41.0379,-183.09218 -85.23257,-331.45999q-22.09733,-97.85962 -107.3299,-154.68133q-94.70285,-88.38933 -489.29808,-72.60552q-227.28685,18.94057 -290.42209,142.05428q-41.0379,107.3299 -37.88114,397.75199q28.41086,767.09312 85.23257,988.06644q28.41086,66.292 -66.292,135.74076q-59.97847,41.0379 -116.80019,72.60552c-82.07581,50.50819 -198.87599,56.82171 -148.3678,-22.09733q9.47029,-22.09733 41.0379,-63.13524q75.76228,-107.3299 75.76228,-252.54094q12.62705,-189.40571 -9.47029,-754.46607q-47.35143,-625.03884 198.87599,-757.62283q37.88114,-18.94057 91.54609,-34.72438q189.40571,-50.50819 514.55217,-34.72438q249.38418,3.15676 435.63313,88.38933q104.17314,28.41086 66.292,107.3299z"},
        {title:"横折钩（长横）", id:"26", sample:"习勺句匀", manual:"", paths:"m608.98908,-170.67228q49.87775,55.12804 863.67262,157.50868q181.13499,18.37601 517.15351,42.00232q47.25261,2.62514 63.00347,-21.00116q26.25145,-23.6263 21.00116,-165.38412q-10.50058,-601.15814 -102.38064,-937.17667q-26.25145,-105.00579 -115.50637,-89.25492q-97.13035,18.37601 -183.76013,31.50174q-39.37717,15.75087 -39.37717,-5.25029q-2.62514,-18.37601 28.87659,-52.50289q196.88585,-160.13383 249.38875,-246.7636q31.50174,-49.87775 65.62862,-42.00232q47.25261,7.87543 91.88007,91.88007q73.50405,128.63209 102.38064,275.6402q47.25261,199.511 81.37949,916.17551q7.87543,128.63209 44.62746,199.511q55.12804,63.00347 13.12572,81.37949q-47.25261,47.25261 -160.13383,97.13035q-63.00347,39.37717 -223.1373,-2.62514q-89.25492,-15.75087 -244.13846,-34.12688q-553.90554,-55.12804 -813.79487,-126.00695l-89.25492,-18.37601q-136.50753,-18.37601 -259.88933,-42.00232c-78.75434,-13.12572 15.75087,-139.13267 89.25492,-110.25608z"},
        {title:"横折钩（短横）", id:"27", sample:"月有闻问", manual:"", paths:"m1010.90825,77.83672q24.11645,0 506.44545,91.10659q58.95133,10.71842 75.02896,-18.75724q50.91251,-131.30067 53.59211,-996.81327q0,-702.05666 -45.55329,-774.406q-16.07763,-18.75724 -75.02896,-5.35921q-83.06777,16.07763 -168.81515,32.15527q-58.95133,16.07763 -56.27172,-10.71842q179.53357,-139.33949 281.35858,-243.84411q42.87368,-50.91251 85.74738,-66.99014q26.79605,-10.71842 53.59211,18.75724q120.58225,147.3783 107.18423,308.15464q-34.83487,557.35796 -42.87368,1457.70543q-2.67961,171.49476 37.51448,249.20331q34.83487,58.95133 0,88.42699q-66.99014,56.27172 -174.17436,99.1454q-50.91251,18.75724 -99.1454,0q-139.33949,-72.34935 -227.76648,-93.78619q-115.22304,-32.15527 -351.02833,-50.91251c-80.38816,-8.03882 -40.19409,-96.4658 40.19409,-83.06777l-0.00001,-0.00001z"},
        {title:"横折弯钩", id:"28", sample:"亿艺忆乞", manual:"", paths:"m2042.42663,-1429.08002q69.05106,28.9569 46.77652,118.05503q-42.32161,129.1923 -69.05106,329.6631q-2.22745,40.09416 -20.04708,60.14124q-15.59217,20.04708 -28.9569,-37.86671q-28.9569,-175.96882 -69.05106,-289.56894q-26.72944,-55.68633 -84.64323,-86.87068q-307.38857,-133.64721 -870.93428,-62.3687q-80.18833,15.59217 -126.96484,46.77652q-82.41578,46.77652 -95.7805,113.60013q-62.3687,200.47081 218.29044,565.77317q122.50994,162.60409 436.58086,447.71813q82.41578,75.73341 175.96882,124.73739q35.63925,13.36472 42.32161,35.63925q15.59217,33.4118 -26.72944,64.59615q-75.73341,53.45888 -169.28646,80.18833q-22.27453,8.90982 -57.91379,-6.68236q-189.33354,-75.73341 -296.2513,-98.00795q-155.92174,-28.9569 -385.34944,-35.63925q-28.9569,2.22745 -40.09416,-15.59217q-8.90982,-15.59217 22.27453,-44.54907q35.63925,-35.63925 73.50596,-46.77652q82.41578,-20.04708 521.22409,102.46286q28.9569,8.90982 42.32161,-6.68236q13.36472,-15.59217 -15.59217,-42.32161q-588.0477,-681.60074 -639.27913,-964.48732q-2.22745,-6.68236 -4.4549,-20.04708q-22.27453,-126.96484 8.90982,-211.60807q13.36472,-62.3687 75.73341,-113.60013q227.20025,-207.15317 893.20882,-135.87466q13.36472,2.22745 26.72944,4.4549q189.33354,22.27453 416.53378,124.73739l0.00001,0z"},
        {title:"横折弯钩", id:"29", sample:"九丸旭仇", manual:"", paths:"m1042.64529,-112.17003q177.21096,58.18867 309.45794,76.70325q58.18867,10.57976 74.05831,-2.64494q10.57976,-18.51458 -2.64494,-63.47855q-327.97252,-1097.64996 55.54373,-1293.3755q95.21783,-55.54373 275.07372,-79.34819q365.00167,-34.38422 587.17661,103.15265q50.25385,26.4494 31.73928,87.28301q-42.31903,153.4065 -50.25385,380.87132q-2.64494,50.25385 -18.51458,47.60891q-15.86964,2.64494 -31.73928,-47.60891q-89.92795,-269.78384 -166.6312,-333.2624q-47.60891,-42.31903 -198.37048,-58.18867q-169.27614,-18.51458 -309.45794,26.4494q-119.02228,39.6741 -156.05144,124.31216q-58.18867,105.79758 -34.38422,341.19722q34.38422,256.55914 156.05144,566.01709q50.25385,134.89193 137.53686,206.30529q42.31903,34.38422 39.6741,68.76843q-2.64494,31.73928 -187.79071,116.37735q-39.6741,26.4494 -87.28301,-13.2247q-129.60204,-89.92795 -349.13204,-145.47168q-31.73928,-7.93482 -60.83361,-18.51458l-142.82674,-34.38422q-161.34132,-34.38422 -317.39276,-79.34819q-121.66723,-26.4494 -317.39276,-29.09433q-39.6741,2.64494 -31.73928,-37.02915q7.93482,-34.38422 79.34819,-76.70325q81.99313,-47.60891 182.50084,-5.28988q208.95023,74.05831 386.16119,129.60204l148.11662,42.31903l-0.00002,-0.00001z"},
        {title:"横折弯钩", id:"30", sample:"几凡冗饥", manual:"", paths:"m2183.69508,-1596.16702q57.81238,23.65052 36.7897,84.09075q-39.41754,136.64747 -52.55672,328.47948q-7.88351,105.11343 -28.9062,123.50828q-23.65052,10.51135 -31.53403,-21.02269q-94.60209,-325.85164 -197.08769,-404.68671q-57.81238,-39.41754 -197.08769,-52.55672q-183.9485,-15.76701 -286.43411,15.76701q-105.11343,26.27836 -147.1588,81.46291q-42.04537,49.92888 -60.44022,136.64747q-23.65052,105.11343 13.13918,483.52179q34.16186,386.29186 102.48559,635.93627q26.27836,118.25262 128.76395,202.34336q42.04537,49.92888 -5.25567,89.34642q-63.06806,49.92888 -202.34336,99.85776q-57.81238,15.76701 -107.74127,-15.76701q-197.08769,-136.64747 -475.63828,-181.32067c-76.20723,-15.76701 -47.30105,-115.62478 28.9062,-97.22992q55.18455,7.88351 391.54754,110.36911q34.16186,15.76701 55.18455,5.25567q10.51135,-10.51135 13.13918,-49.92888q-89.34642,-1098.43537 -84.09075,-1216.68798q0,-496.66097 654.33112,-475.63828q55.18455,7.88351 115.62478,13.13918q168.18149,23.65052 336.36298,105.11343l0.00003,0z"},
        {title:"提", id:"31", sample:"冰冶习羽", manual:"", paths:"m1477.02768,-452.60722q-667.51079,-423.61262 -683.55672,-433.24018q-48.1378,-19.25512 -51.34698,-48.1378q-3.20919,-28.88268 44.92861,-67.39291q60.97454,-41.71942 131.57664,-64.18373q51.34698,-12.83675 80.22966,28.88268q221.43387,240.68899 478.16879,452.4953l157.25014,128.36746q48.1378,48.1378 102.69397,83.43885q60.97454,41.71942 93.06641,93.06641q19.25512,41.71942 -16.04593,38.51024q-9.62756,0 -179.71445,-109.11234l-157.25014,-102.69397l0.00001,0z"},
        {title:"竖提", id:"32", sample:"长民浪良", manual:"", paths:"m1382.36606,-651.34493q16.89581,760.31151 39.42356,822.26281q19.71178,61.95131 -25.34372,107.0068q-76.03115,59.13534 -160.51021,78.84712q-95.74293,25.34372 -126.71858,-19.71178q-25.34372,-36.60759 19.71178,-78.84712q61.95131,-53.5034 78.84712,-188.66989q36.60759,-214.01361 36.60759,-740.59973l-2.81597,-146.43036q-8.44791,-408.31544 -39.42356,-636.40889q-11.26387,-143.6144 -73.21518,-222.46151q-36.60759,-61.95131 0,-129.53455q45.0555,-61.95131 104.19084,-84.47906q36.60759,-19.71178 73.21518,36.60759q53.5034,104.19084 363.25994,459.00287q78.84712,70.39921 84.47906,107.0068q2.81597,19.71178 -14.07984,25.34372q-8.44791,0 -340.73219,-247.80523q-36.60759,-36.60759 -45.0555,14.07984q11.26387,346.36413 25.34372,706.8081l2.81597,137.98246z"},
        {title:"竖提", id:"33", sample:"衣以表农", manual:"", paths:"m1190.40815,-222.70727q62.6305,-121.96468 62.6305,-237.33666q9.88902,-458.19161 -23.0744,-609.82335q-19.77805,-102.18662 -62.6305,-164.81712q-49.44514,-79.11222 -16.48171,-158.22444q42.85245,-112.07564 102.18662,-158.22444q39.55611,-29.66708 85.7049,39.55611q121.96468,161.52078 543.8965,553.78553q62.6305,52.74147 65.92685,82.40857q3.29634,49.44514 -69.22319,6.59268q-171.40981,-102.18662 -359.30133,-214.26227q-69.22319,-42.85245 -98.89027,-29.66708q-23.0744,13.18538 -26.37074,82.40857q13.18538,543.8965 46.14879,679.04654q13.18538,72.51953 -32.96342,112.07564q-72.51953,79.11222 -141.74272,98.89027c-89.00125,39.55611 -115.37199,6.59268 -75.81587,-82.40857l0.00001,0.00001l-0.00002,0z"},
        {title:"竖提", id:"34", sample:"瓶瓦瓷瓮", manual:"", paths:"m1313.98249,-334.57735q12.17854,176.58885 79.16052,340.99915q39.58026,82.20515 -112.65151,197.90129c-70.02661,60.89271 -155.2764,66.98198 -130.91932,-21.31245q3.04464,-3.04464 6.08927,-12.17854q48.71416,-173.54421 27.40172,-359.26696q-36.53562,-386.66868 -203.99056,-962.10475q-39.58026,-155.2764 -197.90129,-286.19572q-48.71416,-39.58026 -36.53562,-118.74078q12.17854,-94.38369 48.71416,-137.00859q36.53562,-36.53562 85.24979,12.17854q85.24979,85.24979 727.66783,380.57941q73.07125,27.40172 91.33906,51.7588q21.31245,30.44635 -9.13391,36.53562q-54.80344,3.04464 -535.85581,-127.87468q-57.84807,-12.17854 -48.71416,33.49099q127.87468,493.23092 197.90129,898.16741l12.17854,73.07125z"},
        {title:"竖折撇", id:"35", sample:"传转专砖", manual:"", paths:"m1435.78427,-1719.43447q99.90252,116.10292 278.107,356.40897q83.70211,99.90252 140.40353,126.90319q59.4015,27.00068 62.10156,56.70143q2.70007,32.40082 -43.20109,67.5017q-59.4015,51.30129 -124.20313,83.70211q-67.5017,32.40082 -170.10428,-18.90048q-259.20653,-67.5017 -432.01088,-75.6019q-64.80163,-18.90048 -48.60122,62.10156q27.00068,148.50374 64.80163,299.70755l24.30061,118.80299q35.10088,172.80435 78.30197,345.6087l29.70075,137.70347q48.60122,234.90591 102.60258,299.70755q35.10088,43.20109 -18.90048,86.40218q-59.4015,43.20109 -186.30469,94.50238q-43.20109,16.20041 -67.5017,-5.40014q-27.00068,-18.90048 13.50034,-78.30197q48.60122,-72.90184 10.80027,-426.61074l-16.20041,-126.90319q-10.80027,-48.60122 -16.20041,-108.00272q-18.90048,-108.00272 -45.90116,-232.20585l-32.40082,-124.20313q-75.6019,-251.10632 -113.40286,-297.00748q-105.30265,-97.20245 -24.30061,-207.90523q18.90048,-32.40082 72.90184,5.40014q180.90455,108.00272 575.11448,124.20313q67.5017,2.70007 67.5017,-8.1002l-234.90591,-515.71298c-32.40082,-72.90184 2.70007,-102.60258 54.00136,-40.50102z"},
        {title:"横折弯", id:"36", sample:"没设般铅", manual:"", paths:"m2212.85239,-1032.05636q51.77586,19.41595 22.65194,74.42781q-51.77586,67.95583 -116.4957,103.55174q-42.0679,22.65194 -126.20368,-12.94397q-165.03558,-80.89979 -368.90306,-71.19182q-129.43967,0 -171.50757,97.07975q-51.77586,80.89979 -9.70798,320.36318q9.70798,145.61962 145.61962,294.47525q61.48384,51.77586 3.23599,106.78773q-87.37177,71.19182 -177.97954,110.02371q-38.8319,19.41595 -100.31575,-16.17995q-262.11533,-110.02371 -533.93864,-168.27157c-93.84376,-22.65194 -22.65194,-152.09161 67.95583,-119.73169q3.23599,9.70798 339.77913,103.55174q67.95583,29.12392 90.60777,19.41595q29.12392,-12.94397 25.88793,-61.48384q-12.94397,-177.97954 -29.12392,-330.07115q-29.12392,-184.45153 9.70798,-307.41921q29.12392,-100.31575 126.20368,-168.27157q139.14765,-71.19182 407.73496,-64.71984q262.11533,12.94397 394.79099,90.60777l0.00001,-0.00001z"},
        {title:"横折折折钩", id:"37", sample:"场肠汤烫", manual:"", paths:"m1732.01735,-549.0836q53.54638,2.2311 69.16408,-20.07989q22.31099,-20.07989 13.3866,-78.08847q-15.61769,-403.82896 -232.03432,-691.64076q-13.3866,-8.9244 -22.31099,-20.07989q-35.69759,-20.07989 -160.63914,33.46649q-109.32386,46.85308 -111.55496,35.69759q-2.2311,-15.61769 15.61769,-37.92869q102.63056,-120.47936 136.09705,-182.95014q29.00429,-66.93298 55.77748,-75.85737q26.77319,-15.61769 75.85737,17.84879q129.40375,75.85737 198.56783,211.95443q62.47078,122.71046 176.25684,624.70778q8.9244,53.54638 66.93298,93.70617q33.46649,29.00429 11.1555,53.54638q-35.69759,49.08418 -133.86595,107.09276q-26.77319,20.07989 -66.93298,4.4622q-109.32386,-2.2311 -214.18553,-6.6933q-40.15979,-2.2311 -58.00858,13.3866q-22.31099,20.07989 0,51.31528q113.78606,196.33673 203.03003,323.50939q49.08418,55.77748 100.39947,75.85737q33.46649,15.61769 31.23539,37.92869q-6.6933,42.39089 -167.33244,122.71046q-40.15979,22.31099 -95.93727,-2.2311q-95.93727,-35.69759 -178.48794,-58.00858q-236.49652,-42.39089 -600.16569,-120.47936q-109.32386,-22.31099 -245.42091,-29.00429q-29.00429,0 -44.62198,-22.31099q-6.6933,-6.6933 11.1555,-26.77319q22.31099,-33.46649 69.16408,-51.31528q35.69759,-15.61769 98.16837,2.2311q142.79035,42.39089 310.12279,82.55067l87.01287,20.07989q461.83754,102.63056 508.69062,71.39518q15.61769,-8.9244 0,-42.39089q-156.17695,-348.05148 -254.34531,-437.29545q-29.00429,-22.31099 -13.3866,-58.00858q22.31099,-53.54638 55.77748,-64.70188q29.00429,-8.9244 60.23968,11.1555q73.62627,40.15979 245.42091,31.23539z"},
        {title:"横折折折钩", id:"38", sample:"奶扔盈仍", manual:"", paths:"m1085.70201,119.1635q230.64659,65.5246 385.28465,94.35542q55.04066,10.48394 70.76656,-13.10492q23.58886,-18.34688 -18.34688,-159.88002q-89.11346,-275.20333 -178.22691,-364.31677q-31.4518,-34.0728 -23.58886,-55.04066q2.62098,-26.20984 36.69378,-52.41968q23.58886,-18.34688 60.28263,0q89.11346,55.04066 264.71939,55.04066q78.62952,0 78.62952,-141.53314q-7.86296,-403.63153 -191.33183,-676.21387q-49.7987,-86.49247 -133.67018,-65.5246q-96.97641,31.4518 -196.5738,68.14558q-62.90362,10.48394 -18.34688,-44.55672q120.56526,-128.42822 204.43675,-241.13053q31.4518,-65.5246 91.73444,-28.83082q204.43675,117.94428 280.44529,361.69579q49.7987,175.60593 110.08133,566.13254q7.86296,65.5246 39.31476,112.70231q34.0728,47.17772 -2.62098,81.2505q-39.31476,39.31476 -154.63806,91.73444q-41.93574,10.48394 -104.83936,-5.24196q-86.49247,-15.7259 -165.12199,-20.96788q-34.0728,-2.62098 -34.0728,15.7259q2.62098,49.7987 112.70231,235.88856q112.70231,188.71085 165.12199,228.02561q62.90362,39.31476 49.7987,78.62952q-23.58886,55.04066 -172.98494,115.3233q-41.93574,18.34688 -110.08133,-10.48394q-86.49247,-41.93574 -503.22893,-146.7751q-120.56526,-26.20984 -222.78364,-23.58886q-49.7987,2.62098 -41.93574,-34.0728q10.48394,-26.20984 99.59739,-55.04066q47.17772,-10.48394 123.18625,2.62098l99.59739,31.4518l0.00002,0.00001z"},
        {title:"横折折撇", id:"39", sample:"级及吸极", manual:"", paths:"m1548.20944,-1142.53879q68.76561,162.53688 146.90835,393.83939q40.63422,96.89699 103.14841,146.90835q28.13139,21.87997 3.12572,68.76561q-21.87997,31.25708 -143.78263,90.64558q-31.25708,31.25708 -109.39983,-6.25142q-46.88564,-3.12572 -93.77128,-21.87997q-31.25708,-9.37714 -50.01136,9.37714q-12.50283,21.87997 46.88564,143.78263q209.42254,378.21084 318.82237,434.47361q68.76561,40.63422 18.75425,96.89699q-96.89699,78.14274 -187.54257,96.89699q-50.01136,12.50283 -112.52555,-37.50852q-65.63989,-50.01136 -225.05107,-109.39983q-171.91402,-56.26277 -246.93104,-43.75994q-40.63422,3.12572 -53.13705,-21.87997q-12.50283,-21.87997 21.87997,-43.75994q121.90266,-68.76561 212.54824,-40.63422q112.52555,21.87997 250.05676,87.51986q37.50852,12.50283 43.75994,3.12572q21.87997,-40.63422 -193.79399,-459.47928q-21.87997,-68.76561 -84.39416,-128.15408q-40.63422,-31.25708 -31.25708,-71.89133q12.50283,-37.50852 31.25708,-56.26277q40.63422,-40.63422 100.02271,-3.12572q253.18246,134.40552 237.55393,-25.00567q-9.37714,-21.87997 -12.50283,-53.13705q-46.88564,-246.93104 -109.39983,-381.33656l-43.75994,-87.51986q-150.03405,-265.68531 -493.86208,-518.86777q-37.50852,-31.25708 -6.25142,-50.01136q131.2798,0 428.2222,259.43388q112.52555,115.65124 193.79399,243.80534l40.63422,84.39416l-0.00006,0z"},
        {title:"横撇弯钩", id:"40", sample:"邓队阿阡", manual:"", paths:"m1041.61369,-366.98579q135.47127,24.31535 274.41616,83.36693q62.5252,34.73622 93.7878,-3.47363q20.84174,-20.84174 -10.42087,-79.89332q-145.89214,-312.62601 -128.52403,-357.7831q3.47363,-13.89449 17.36811,-38.20985q187.5756,-323.04687 131.99765,-389.0457q-20.84174,-31.2626 -90.31418,-20.84174q-86.84056,13.89449 -184.10198,13.89449q-83.36693,3.47363 6.94724,-45.15709q170.20749,-86.84056 319.57326,-204.94372q45.15709,-41.68347 93.7878,0q45.15709,34.73622 72.94607,118.10316q24.31535,76.41969 -27.78898,215.36459q-55.57796,159.78662 -166.73387,281.36341q-83.36693,125.0504 -31.2626,191.04923q170.20749,243.15357 257.04805,302.20515q65.99882,41.68347 34.73622,86.84056q-41.68347,62.5252 -166.73387,128.52403q-65.99882,31.2626 -118.10316,-6.94724q-191.04923,-135.47127 -420.3083,-170.20749c-100.73505,-17.36811 -59.05158,-125.0504 41.68347,-104.20867l0.00003,-0.00001z"},
        {title:"横折提", id:"41", sample:"诈说误诉", manual:"", paths:"m1100.21188,-116.85914q-158.81905,-47.14239 -244.11076,-53.03518q-47.0575,2.9464 -52.93968,-20.62479q-11.76437,-26.51759 20.58765,-50.08878q132.34921,-79.55278 229.4053,-38.30319q320.5792,141.42716 329.40248,138.48076q11.76437,2.9464 26.46984,-8.8392q26.46984,-17.67839 2.94109,-341.78229q-8.82328,-338.83589 -102.93827,-642.315q-55.88078,-106.07037 73.52734,-262.22952q29.41094,-38.30319 64.70406,-20.62479q26.46984,20.62479 64.70406,97.23117q135.2903,144.37355 414.69419,397.76388q38.23422,29.46399 35.29312,55.98158q-2.94109,29.46399 -41.17531,0q-132.34921,-70.71358 -261.75732,-153.21275q-179.40671,-135.53436 -138.2314,76.60638q-2.94109,188.56954 67.64515,659.99339q11.76437,73.65998 85.29171,150.26635q38.23422,29.46399 8.82328,70.71358q-35.29312,53.03518 -152.93686,109.01677q-38.23422,20.62479 -94.11499,-14.732q-214.69983,-114.90956 -335.28466,-150.26635z"},
        {title:"横折", id:"42", sample:"口日目田", manual:"", paths:"m 608.98908,-170.67228 c 33.25183,36.75203 321.14271,89.25492 863.67262,157.50868 120.7567,12.25067333 293.1412,26.251447 517.1535,42.00232 31.5018,1.750093 52.5029,-5.250293 63.0035,-21.00116 17.5009,-15.7508667 24.5013,-70.878907 21.0011,-165.38412 -7.0003,-400.77209 -78.0232,-691.64164 -102.3806,-937.17664 -5.9361,-578.8662 -11.28,-163.7383 5.2503,-404.2723 31.5017,5.2503 62.1284,35.877 91.8801,91.8801 49.0027,85.7547 83.1295,177.6348 102.3806,275.6402 31.5017,133.00729 58.6282,438.39913 81.3795,916.17547 5.2503,85.75473 20.1261,152.258393 44.6275,199.511 36.752,42.002313 41.1272,69.12881 13.1257,81.37949 -31.5018,31.50174 -84.8797,63.87852 -160.1339,97.13035 -42.0023,26.25145 -116.3814,25.3764 -223.1373,-2.62514 C 1867.3085,149.59539 1785.929,138.21976 1682.6733,125.96909 1313.4029,89.217063 1042.138,47.214747 868.87841,-0.03786 l -89.25492,-18.37601 c -91.00502,-12.250673 -177.6348,-26.251447 -259.88933,-42.00232 -78.75434,-13.12572 15.75087,-139.13267 89.25492,-110.25608 z"},
        {title:"撇折", id:"43", sample:"去云参私", manual:"", paths:"m 1181.462,-478.06461 c 64.5314,175.84815 120.1898,335.56345 166.9751,479.14588 19.3594,64.531433 40.3321,118.57651 62.9181,162.13522 35.4923,40.33215 22.586,86.31079 -38.7189,137.93594 -74.2111,58.07829 -134.7093,87.92407 -181.4946,89.53736 -25.8126,1.61329 -41.9454,-7.25979 -48.3986,-26.61922 -6.4531,-14.51957 -2.4199,-28.2325 12.0997,-41.13879 33.879,-38.71886 49.2052,-92.76393 45.9786,-162.13522 -19.3594,-171.008293 -70.1779,-388.80188 -152.4555,-653.38075 l -36.2989,-108.89679 c -43.55875,-125.83629 -74.21118,-197.62751 -91.95732,-215.37366 -38.71886,-29.03915 -43.55872,-66.95136 -14.51957,-113.73665 14.51957,-16.13286 34.68565,-34.74604 60.49822,-28.29289 59.69157,14.51958 316.01857,-6.86313 477.80627,0 h 183.8778 c 216.1557,-4.65334 328.8868,-7.50887 544.5957,-18.42877 71.1958,-12.22364 97.0082,-4.40407 173.2673,-47.01975 25.8125,1.6133 -20.2532,163.82239 -46.0535,208.2995 -45.8423,37.577 -38.4831,-4.1818 -140.0956,-11.05726 0,0 -101.8604,-8.77365 -218.4639,-7.37151 -138.7549,4.65329 -197.3169,-5.31133 -304.6876,0 h -194.7115 c -174.2472,-3.63659 -382.771,-11.293 -385.9976,0 0,9.67971 27.4258,104.72476 82.2776,249.92049 l 43.5587,106.47686 z"},
        {title:"竖折", id:"44", sample:"区巨呕鸥", manual:"", paths:"m847.65537,-394.08286q2.77374,27.73742 5.54748,52.7011q11.09497,294.01664 27.73742,393.87134c8.32123,83.21226 11.09497,108.17593 -47.15361,135.91335q-102.62845,58.24858 -152.5558,58.24858q-36.05864,2.77374 -61.02232,-16.64245q-27.73742,-19.41619 11.09497,-69.34355q66.5698,-91.53348 55.47484,-821.02759q-8.32123,-710.07791 -122.04464,-859.85997q-8.32123,-8.32123 -13.86871,-13.86871q-61.02232,-52.7011 -24.96368,-105.40219q16.64245,-49.92735 63.79606,-85.986q44.37987,-41.60613 97.08096,2.77374q19.41619,24.96368 205.2569,88.75974q343.94399,69.34355 1078.98558,52.7011q152.5558,-2.77374 232.99432,-19.41619q141.46083,-19.41619 144.23458,47.15361q-2.77374,41.60613 -102.62845,108.17593q-99.85471,58.24858 -158.10329,58.24858q-108.17593,-2.77374 -937.52475,-94.30722q-318.98031,-49.92735 -341.17025,-16.64245q-19.41619,19.41619 2.77374,368.90767q0,83.21226 2.77374,169.19825l2.77374,61.02232q8.32123,152.5558 24.96368,421.60876l5.54748,83.21226z"},
        {title:"竖弯", id:"45", sample:"四西洒酉", manual:"", paths:"m 985.1981,-29.154902 1.47767,6.580289 -2.99313,10.758604 -11.00946,-39.75739 c 0,0 86.48902,85.787442 -180.51086,86.909354 v 0 c 0,0 0.29883,-7.980274 2.07904,-11.504233 10.2241,-20.2389976 74.78014,-109.701098 74.78014,-109.701098 l 7.81371,-235.976814 c -5.66892,-242.67702 -2.62652,-366.72461 20.01707,-528.62336 27.0225,-65.5952 447.71012,-40.72539 700.42822,-19.60365 110.0269,9.19585 224.4684,59.45509 224.4684,59.45509 l -6.372,-3.91771 v 0 0 l 6.372,3.91771 -6.372,-3.91771 6.372,3.91771 v 0 0 3.91772 c 9.9249,1.4452 0,0 -108.7672,42.36038 26.9787,-15.45685 108.7672,-46.2781 108.7672,-46.2781 v 0 l -6.372,-3.91771 0.8972,-1.09617 5.4748,5.01388 -29.4171,62.87526 29.4171,-58.95754 -51.7186,45.15426 c 0,0 -493.7821,-23.78002 -496.5186,-14.60624 -2.9221,9.7955 -4.1871,5.03774 -4.1871,5.03774 6.5492,-5.2522 -127.6461,-10.03106 -127.6461,-10.03106 v 0 c 19.336,0.77503 72.1848,6.42032 72.1848,6.42032 l 456.5562,-23.64671 c 48.3192,-5.38789 151.3294,-8.32831 151.3294,-8.32831 0,0 -159.262,63.05588 -167.4285,53.03047 -7.9283,-9.73301 -90.354,17.12475 -58.7333,-0.32992 8.1943,-4.52331 226.1618,-52.70055 226.1618,-52.70055 7.9354,-8.91385 67.8783,82.349 -159.1671,62.66897 -79.2199,-6.86667 6.8872,-7.59631 0,0 l -516.0877,-36.73552 103.1599,-35.76395 c -0.065,-0.67055 289.4289,-57.91627 289.4289,-57.91627 l 256.9966,70.12335 c 0,0 35.9991,-12.38669 28.9821,-9.00718 -27.5344,13.26098 -23.5363,64.4007 -32.7298,65.58814 -66.9889,8.65221 -184.8382,-25.05447 -184.8382,-25.05447 l -456.2502,-6.85041 -110.0676,14.73138 -25.1905,14.56798 -34.81611,663.515672 24.19611,-608.667862 z"},
        {title:"横斜钩钩", id:"46", sample:"飞汽凤凰", manual:"", paths:"m 1481.9563,-329.83012 c -12.6271,303.125614 37.8813,506.02421 151.5258,608.69579 22.4484,16.29708 31.5679,36.66842 27.3588,61.11403 -5.6122,21.18621 -55.419,54.59521 -149.4213,100.22702 -30.8664,16.29711 -61.0314,12.22282 -90.4945,-12.22278 C 1314.2956,354.64707 1178.2031,292.71819 1012.6473,242.19725 826.04595,186.7872 659.08708,150.11878 511.77033,132.192 476.69492,130.56229 469.67984,115.08007 490.72509,85.74533 508.96433,61.299704 537.72614,40.928367 577.0106,24.631277 614.89205,8.3342288 655.57952,13.223343 699.07305,39.298651 814.1205,94.708725 1037.2,174.56441 1368.312,278.86567 c 33.6723,11.40795 48.4041,-2.44456 44.1949,-41.55755 -64.5388,-470.98549 -38.5827,-843.37368 77.8675,-1117.16455 22.4483,-53.78036 49.8072,-101.04182 82.0764,-141.78447 64.5388,-89.634 149.4212,-162.9707 254.6475,-220.0105 81.375,-45.6319 162.7501,-66.818 244.125,-63.5588 68.7478,1.6298 122.0624,17.1122 159.9438,46.4468 18.2394,9.7782 23.1497,31.7792 14.7316,66.0031 -33.6724,99.4122 -62.4343,218.38088 -86.2853,356.90598 -8.4182,44.0021 -18.2394,45.63182 -29.4634,4.88911 -35.0755,-167.8598 -60.3297,-260.75309 -75.763,-278.67999 -21.0451,-24.4457 -47.7026,-29.3349 -79.972,-14.6673 -193.6161,44.002 -331.8132,172.74894 -414.5913,386.24063 -35.0756,92.89332 -58.9267,204.52831 -71.5538,334.90492 z"},
        {title:"撇提", id:"47", sample:"组织丝维", manual:"", paths:"m 1636.5338,175.20976 -204.9353,-407.14934 v 0 0 0 0 0 0 c -305.5156,-530.6309 -461.13179,-660.35326 -579.10876,-686.66116 -109.89921,-24.5067 -186.90904,-23.4949 -186.90904,-23.4949 -115.2248,-20.0143 -53.8923,-132.68186 81.8545,-180.30896 180.09809,-63.1876 957.1698,289.59156 957.1698,289.59156 l 194.6868,100.59004 191.4881,134.15022 -195.5568,-72.29438 v 0 0 0 0 0 0 l -282.7704,-110.51206 -342.3003,-133.77752 c 0,0 -355.04121,-104.52226 -197.0939,18.4568 102.3771,79.71168 449.1661,557.152 449.1661,557.152 l 164.9054,237.28658 c 0,0 -6.8879,-0.66821 152.6285,243.49558 55.7309,85.30434 -333.7469,231.2338 -333.7469,231.2338 z"}
    ],
    pianPangBushous: [
        {title:"一字头儿", id:"0", sample:"下不丽七", manual:"", paths:"", name:"一"},
        {title:"竖字部", id:"1", sample:"卡丫丰中", manual:"", paths:"", name:"丨"},
        {title:"将字旁儿", id:"2", sample:"壮状妆将", manual:"", paths:"", name:"丬"},
        {title:"京字头儿", id:"3", sample:"亢京亩亮", manual:"", paths:"", name:"亠"},
        {title:"单人旁儿", id:"4", sample:"仁位你俄", manual:"", paths:"", name:"亻"},
        {title:"立刀旁儿", id:"5", sample:"列别剑刚", manual:"", paths:"", name:"刂"},
        {title:"折文儿", id:"6", sample:"冬处夏备", manual:"", paths:"", name:"夂"},
        {title:"宝盖儿", id:"7", sample:"字定宾客", manual:"", paths:"", name:"宀"},
        {title:"单耳刀儿", id:"8", sample:"卫印却", manual:"", paths:"", name:"卩"},
        {title:"同字匡儿", id:"9", sample:"冈网周同", manual:"", paths:"", name:"冂"},
        {title:"秃宝盖儿", id:"10", sample:"写军冠", manual:"", paths:"", name:"冖"},
        {title:"两点水儿", id:"11", sample:"次冷准冰", manual:"", paths:"", name:"冫"},
        {title:"建之旁儿", id:"12", sample:"廷延建", manual:"", paths:"", name:"廴"},
        {title:"双人旁儿", id:"13", sample:"行征徒往很", manual:"", paths:"", name:"彳"},
        {title:"竖心旁儿", id:"14", sample:"怀快性情", manual:"", paths:"", name:"忄"},
        {title:"提手旁儿", id:"15", sample:"抗扛担摘", manual:"", paths:"", name:"扌"},
        {title:"反文旁儿", id:"16", sample:"收政教敛", manual:"", paths:"", name:"攵"},
        {title:"三点水儿", id:"17", sample:"江汪活汉", manual:"", paths:"", name:"氵"},
        {title:"四点儿", id:"18", sample:"杰点热照", manual:"", paths:"", name:"灬"},
        {title:"爪字头儿", id:"19", sample:"采觅受舀爱妥", manual:"", paths:"", name:"爫"},
        {title:"牛字旁儿", id:"20", sample:"物牲牺牡", manual:"", paths:"", name:"牜"},
        {title:"反犬旁儿", id:"21", sample:"狂独狠狼狗", manual:"", paths:"", name:"犭"},
        {title:"绞丝旁儿", id:"22", sample:"红约纯给纸", manual:"", paths:"", name:"纟"},
        {title:"老字头儿", id:"23", sample:"考者耋老", manual:"", paths:"", name:"耂"},
        {title:"病字旁儿", id:"24", sample:"症疼痛痕", manual:"", paths:"", name:"疒"},
        {title:"示字旁儿", id:"25", sample:"礼社祖祝福", manual:"", paths:"", name:"礻"},
        {title:"绞丝旁", id:"26", sample:"約紀糾紂", manual:"", paths:"", name:"糹"},
        {title:"走之儿", id:"27", sample:"过还送远", manual:"", paths:"", name:"辶"},
        {title:"金字旁儿", id:"28", sample:"钢铁铃错钦", manual:"", paths:"", name:"钅"},
        {title:"草字头儿", id:"29", sample:"艾花英菜", manual:"", paths:"", name:"艹"},
        {title:"衣字旁儿", id:"30", sample:"初袖被补", manual:"", paths:"", name:"衤"},
        {title:"言字旁儿", id:"31", sample:"计论识语", manual:"", paths:"", name:"讠"},
        {title:"双耳旁儿", id:"32", sample:"防阻院邦那郊", manual:"", paths:"", name:"阝"},
        {title:"食字旁儿", id:"33", sample:"饼饮饥饿", manual:"", paths:"", name:"饣"},
        {title:"㔾字旁", id:"34", sample:"卮危卷卺", manual:"", paths:"", name:"㔾"},
        {title:"业字部", id:"35", sample:"壶显虚亚凿", manual:"", paths:"", name:"业"},
        {title:"人字头", id:"36", sample:"介今令全会合", manual:"", paths:"", name:"人"},
        {title:"儿字底", id:"37", sample:"允兄光", manual:"", paths:"", name:"儿"},
        {title:"兀字部", id:"38", sample:"尧尫尭卼", manual:"", paths:"", name:"兀"},
        {title:"入字头", id:"39", sample:"汆籴屳", manual:"", paths:"", name:"入"},
        {title:"八字头", id:"40", sample:"分公谷", manual:"", paths:"", name:"八"},
        {title:"力字部", id:"41", sample:"努劝功动", manual:"", paths:"", name:"力"},
        {title:"包字头儿", id:"42", sample:"勺勾旬包", manual:"", paths:"", name:"勹"},
        {title:"匕字头", id:"43", sample:"旨北㔫㔬", manual:"", paths:"", name:"匕"},
        {title:"几字底", id:"44", sample:"凭咒秃冗", manual:"", paths:"", name:"几"},
        {title:"刀字旁", id:"45", sample:"分初叨剪召叧", manual:"", paths:"", name:"刀"},
        {title:"夕字旁", id:"46", sample:"外多梦岁名", manual:"", paths:"", name:"夕"},
        {title:"大字头", id:"47", sample:"夺奈奇", manual:"", paths:"", name:"大"},
        {title:"女字旁", id:"48", sample:"好妈奶如她姓", manual:"", paths:"", name:"女"},
        {title:"子字旁", id:"49", sample:"孤孔孙孩", manual:"", paths:"", name:"子"},
        {title:"寸字旁", id:"50", sample:"对寻导寿时射", manual:"", paths:"", name:"寸"},
        {title:"小字部", id:"51", sample:"尘尖当肖尚党", manual:"", paths:"", name:"小"},
        {title:"尣字部", id:"52", sample:"尣尦尩", manual:"", paths:"", name:"尣"},
        {title:"尸字头", id:"53", sample:"尼层尾居屋屏", manual:"", paths:"", name:"尸"},
        {title:"屮字头", id:"54", sample:"屮屯", manual:"", paths:"", name:"屮"},
        {title:"山字旁", id:"55", sample:"岭峰峡", manual:"", paths:"", name:"山"},
        {title:"川字旁儿", id:"56", sample:"顺圳训驯钏", manual:"", paths:"", name:"川"},
        {title:"工字旁", id:"57", sample:"攻巧巩功项", manual:"", paths:"", name:"工"},
        {title:"己字部", id:"58", sample:"记纪配杞忌", manual:"", paths:"", name:"己"},
        {title:"三匡栏儿", id:"59", sample:"区匠匣", manual:"", paths:"", name:"匚"},
        {title:"匸字部", id:"60", sample:"匸", manual:"", paths:"", name:"匸"},
        {title:"十字头", id:"61", sample:"支克南", manual:"", paths:"", name:"十"},
        {title:"卜字部", id:"62", sample:"外卧仆", manual:"", paths:"", name:"卜"},
        {title:"偏厂儿", id:"63", sample:"厅厉历厚", manual:"", paths:"", name:"厂"},
        {title:"又字旁儿", id:"64", sample:"劝对观欢双取", manual:"", paths:"", name:"又"},
        {title:"口字旁", id:"65", sample:"叮吐吓吃听吹", manual:"", paths:"", name:"口"},
        {title:"方框儿", id:"66", sample:"四团回园困因", manual:"", paths:"", name:"囗"},
        {title:"提土旁", id:"67", sample:"块地坏均坑场", manual:"", paths:"", name:"土"},
        {title:"士字头", id:"68", sample:"吉志声", manual:"", paths:"", name:"士"},
        {title:"已字部", id:"69", sample:"已", manual:"", paths:"", name:"已"},
        {title:"巳字部", id:"70", sample:"导异祀汜", manual:"", paths:"", name:"巳"},
        {title:"巾字旁", id:"71", sample:"帆帐帜帽带帮", manual:"", paths:"", name:"巾"},
        {title:"干字部", id:"72", sample:"杆竿汗奸轩秆", manual:"", paths:"", name:"干"},
        {title:"幺字旁", id:"73", sample:"吆幼幻乣糸", manual:"", paths:"", name:"幺"},
        {title:"广字旁儿", id:"74", sample:"庄店席应", manual:"", paths:"", name:"广"},
        {title:"弋字边", id:"75", sample:"式贰代鸢", manual:"", paths:"", name:"弋"},
        {title:"弓字旁", id:"76", sample:"强弦弹引张弘", manual:"", paths:"", name:"弓"},
        {title:"心字底", id:"77", sample:"念忽思急想怎", manual:"", paths:"", name:"心"},
        {title:"戈字旁", id:"78", sample:"伐战或", manual:"", paths:"", name:"戈"},
        {title:"户字旁", id:"79", sample:"肩房扁扇启", manual:"", paths:"", name:"户"},
        {title:"手字底", id:"80", sample:"拿拜拳挚", manual:"", paths:"", name:"手"},
        {title:"支字部", id:"81", sample:"枝技肢岐歧妓", manual:"", paths:"", name:"支"},
        {title:"文字头", id:"82", sample:"齐吝紊蚊纹刘", manual:"", paths:"", name:"文"},
        {title:"斗字边", id:"83", sample:"料斜斟蚪科抖", manual:"", paths:"", name:"斗"},
        {title:"斤字旁", id:"84", sample:"新斯断芹", manual:"", paths:"", name:"斤"},
        {title:"方字旁", id:"85", sample:"旗放施旅族旋", manual:"", paths:"", name:"方"},
        {title:"日字旁", id:"86", sample:"旺明昨晌晴晾", manual:"", paths:"", name:"日"},
        {title:"歹字旁", id:"87", sample:"列歼殊", manual:"", paths:"", name:"歹"},
        {title:"殳字边", id:"88", sample:"段殷般", manual:"", paths:"", name:"殳"},
        {title:"母字部", id:"89", sample:"每毒毓拇姆", manual:"", paths:"", name:"母"},
        {title:"比字头", id:"90", sample:"毕皆毙批昆秕屁", manual:"", paths:"", name:"比"},
        {title:"毛字旁", id:"91", sample:"尾笔牦蚝麾耗秏", manual:"", paths:"", name:"毛"},
        {title:"氏字头", id:"92", sample:"纸舐昏芪", manual:"", paths:"", name:"氏"},
        {title:"气字头", id:"93", sample:"氛氧氮气", manual:"", paths:"", name:"气"},
        {title:"水字底", id:"94", sample:"尿沓泵浆氽", manual:"", paths:"", name:"水"},
        {title:"泰字底", id:"95", sample:"暴求黎泰录", manual:"", paths:"", name:"氺"},
        {title:"火字旁", id:"96", sample:"炉灯炸烂烟灭", manual:"", paths:"", name:"火"},
        {title:"爪字旁", id:"97", sample:"爬抓笊釽", manual:"", paths:"", name:"爪"},
        {title:"父字旁", id:"98", sample:"爷斧爸爹", manual:"", paths:"", name:"父"},
        {title:"爻字部", id:"99", sample:"驳駁訤笅", manual:"", paths:"", name:"爻"},
        {title:"将字旁儿", id:"100", sample:"妝狀牀牅牃牁壯", manual:"", paths:"", name:"爿"},
        {title:"曰字头", id:"101", sample:"曼冒最晕曶", manual:"", paths:"", name:"曰"},
        {title:"月字旁", id:"102", sample:"肝肚肤胆胖脱", manual:"", paths:"", name:"月"},
        {title:"木字旁", id:"103", sample:"机材村林松相", manual:"", paths:"", name:"木"},
        {title:"欠字边", id:"104", sample:"歌欢钦吹软饮欲次", manual:"", paths:"", name:"欠"},
        {title:"止字旁", id:"105", sample:"正肯趾此址耻企芷歧", manual:"", paths:"", name:"止"},
        {title:"片字旁", id:"106", sample:"牌版牍牓牊", manual:"", paths:"", name:"片"},
        {title:"牙字旁", id:"107", sample:"芽呀穿鸦蚜讶", manual:"", paths:"", name:"牙"},
        {title:"牛字旁", id:"108", sample:"特牡物牲告靠", manual:"", paths:"", name:"牛"},
        {title:"犬字旁", id:"109", sample:"哭突臭状献厌", manual:"", paths:"", name:"犬"},
        {title:"玄字旁", id:"110", sample:"炫舷眩弦", manual:"", paths:"", name:"玄"},
        {title:"玉字部", id:"111", sample:"宝璧琞钰珏玺", manual:"", paths:"", name:"玉"},
        {title:"王字旁", id:"112", sample:"环现理玲玩班", manual:"", paths:"", name:"王"},
        {title:"甘字旁", id:"113", sample:"甜邯某钳酣绀柑", manual:"", paths:"", name:"甘"},
        {title:"生字部", id:"114", sample:"星胜牲姓性甥", manual:"", paths:"", name:"生"},
        {title:"羊字旁", id:"115", sample:"着洋样鲜差详羞", manual:"", paths:"", name:"羊"},
        {title:"羽字部", id:"116", sample:"翁翔翊羿", manual:"", paths:"", name:"羽"},
        {title:"老字头", id:"117", sample:"耆䎝耄耋", manual:"", paths:"", name:"老"},
        {title:"而字部", id:"118", sample:"耍需耐斋", manual:"", paths:"", name:"而"},
        {title:"耒字旁", id:"119", sample:"耙耕耘耗", manual:"", paths:"", name:"耒"},
        {title:"耳字旁", id:"120", sample:"聪取联聊耷耻耶耸", manual:"", paths:"", name:"耳"},
        {title:"聿字部", id:"121", sample:"律津肆珒", manual:"", paths:"", name:"聿"},
        {title:"肀字头", id:"122", sample:"肃隶", manual:"", paths:"", name:"肀"},
        {title:"肉字底", id:"123", sample:"腐臋胬胔膐脔", manual:"", paths:"", name:"肉"},
        {title:"臣字部", id:"124", sample:"卧宦頣烥挋弫", manual:"", paths:"", name:"臣"},
        {title:"自字部", id:"125", sample:"息臭咱臬", manual:"", paths:"", name:"自"},
        {title:"用字部", id:"126", sample:"拥佣痈砽甪甭", manual:"", paths:"", name:"用"},
        {title:"田字旁", id:"127", sample:"男胃畔亩界留", manual:"", paths:"", name:"田"},
        {title:"白字旁", id:"128", sample:"的百怕伯泉柏拍", manual:"", paths:"", name:"白"},
        {title:"皮字边", id:"129", sample:"波披坡被破疲", manual:"", paths:"", name:"皮"},
        {title:"皿字底", id:"130", sample:"盆盒盘盂盐益", manual:"", paths:"", name:"皿"},
        {title:"目字旁", id:"131", sample:"盯盼眨眼睛眯", manual:"", paths:"", name:"目"},
        {title:"矛字部", id:"132", sample:"柔茅矜矝", manual:"", paths:"", name:"矛"},
        {title:"矢字旁", id:"133", sample:"矮知短矩矫", manual:"", paths:"", name:"矢"},
        {title:"石字旁", id:"134", sample:"矿砖砍破碎碰", manual:"", paths:"", name:"石"},
        {title:"示字底", id:"135", sample:"票际禁宗奈标", manual:"", paths:"", name:"示"},
        {title:"禾字旁", id:"136", sample:"秆秒租和秋种", manual:"", paths:"", name:"禾"},
        {title:"穴字头", id:"137", sample:"穷空突穿容窄", manual:"", paths:"", name:"穴"},
        {title:"立字旁", id:"138", sample:"站垃音童位拉泣粒", manual:"", paths:"", name:"立"},
        {title:"竹字头", id:"139", sample:"笑笔筷筏管等篮竿篇简", manual:"", paths:"", name:"竹"},
        {title:"米字旁", id:"140", sample:"粉精粮粗粒糖", manual:"", paths:"", name:"米"},
        {title:"至字旁", id:"141", sample:"到室致屋", manual:"", paths:"", name:"至"},
        {title:"邑字旁", id:"142", sample:"邕邫郶郒", manual:"", paths:"", name:"邑"},
        {title:"酉字旁", id:"143", sample:"酥醉酒配酷醋", manual:"", paths:"", name:"酉"},
        {title:"釆字旁儿", id:"144", sample:"悉番释釉", manual:"", paths:"", name:"釆"},
        {title:"采字旁儿", id:"145", sample:"彩踩菜睬", manual:"", paths:"", name:"采"},
        {title:"里字部", id:"146", sample:"童埋理量狸", manual:"", paths:"", name:"里"},
        {title:"金字部", id:"147", sample:"鉴銮錾鏖", manual:"", paths:"", name:"金"},
        {title:"豕字部", id:"148", sample:"家豚豮烼豨", manual:"", paths:"", name:"豕"},
        {title:"豸字旁", id:"149", sample:"貌豹豺貂貁貏貊貚", manual:"", paths:"", name:"豸"},
        {title:"贝字旁", id:"150", sample:"财败责货贪贫", manual:"", paths:"", name:"贝"},
        {title:"赤字部", id:"151", sample:"赦赫郝赬浾赩", manual:"", paths:"", name:"赤"},
        {title:"走字底", id:"152", sample:"赵赶起越超趣", manual:"", paths:"", name:"走"},
        {title:"足字旁", id:"153", sample:"跳跑跌蹈蹲跟", manual:"", paths:"", name:"足"},
        {title:"臼字部", id:"154", sample:"桕舅舀臾舁", manual:"", paths:"", name:"臼"},
        {title:"舌字旁", id:"155", sample:"活敌甜话舐乱舔恬刮括", manual:"", paths:"", name:"舌"},
        {title:"舟字旁", id:"156", sample:"艘舰盘航舷般舶", manual:"", paths:"", name:"舟"},
        {title:"艮字边", id:"157", sample:"很眼根跟恨银", manual:"", paths:"", name:"艮"},
        {title:"虫字旁", id:"158", sample:"蛙蝶蚊蜂蝉蛋蛛虾", manual:"", paths:"", name:"虫"},
        {title:"血字底", id:"159", sample:"衅桖卹恤", manual:"", paths:"", name:"血"},
        {title:"行字部", id:"160", sample:"荇筕绗珩", manual:"", paths:"", name:"行"},
        {title:"衣字底", id:"161", sample:"袋装裂依袭袅衾", manual:"", paths:"", name:"衣"},
        {title:"见字边", id:"162", sample:"规观舰现砚觅视", manual:"", paths:"", name:"见"},
        {title:"角字旁", id:"163", sample:"确触觥觚", manual:"", paths:"", name:"角"},
        {title:"言字旁", id:"164", sample:"信警誓譬", manual:"", paths:"", name:"言"},
        {title:"谷字部", id:"165", sample:"浴豁欲容裕峪俗", manual:"", paths:"", name:"谷"},
        {title:"豆字部", id:"166", sample:"短登豌痘豉", manual:"", paths:"", name:"豆"},
        {title:"车字旁", id:"167", sample:"转轮软轻较辆", manual:"", paths:"", name:"车"},
        {title:"长字部", id:"168", sample:"张帐账怅", manual:"", paths:"", name:"长"},
        {title:"门字框", id:"169", sample:"闪闭问闲间闷", manual:"", paths:"", name:"门"},
        {title:"雨字头", id:"170", sample:"雪雷零需震霜", manual:"", paths:"", name:"雨"},
        {title:"青字部", id:"171", sample:"情睛蜻请精晴清猜静", manual:"", paths:"", name:"青"},
        {title:"革字旁", id:"172", sample:"鞋靴鞠鞍", manual:"", paths:"", name:"革"},
        {title:"韦字旁", id:"173", sample:"伟韧苇纬讳韬帏", manual:"", paths:"", name:"韦"},
        {title:"音字旁", id:"174", sample:"暗谙韵歆黯", manual:"", paths:"", name:"音"},
        {title:"页字旁", id:"175", sample:"顶项顺预领颗", manual:"", paths:"", name:"页"},
        {title:"风字边", id:"176", sample:"讽枫飘疯", manual:"", paths:"", name:"风"},
        {title:"首字旁", id:"177", sample:"馗馘艏渞", manual:"", paths:"", name:"首"},
        {title:"马字部", id:"178", sample:"驯驱驴驻验骑", manual:"", paths:"", name:"马"},
        {title:"鱼字旁", id:"179", sample:"鲜鳄鳔鲸", manual:"", paths:"", name:"鱼"},
        {title:"鸟字旁", id:"180", sample:"鸭鸡鹅鸣", manual:"", paths:"", name:"鸟"},
        {title:"齿字部", id:"181", sample:"龄龀啮龋龈龃", manual:"", paths:"", name:"齿"},
        {title:"私字儿", id:"182", sample:"允去矣参", manual:"", paths:"", name:"厶"},
        {title:"竹字头儿", id:"183", sample:"笃竿笈竽", manual:"", paths:"", name:"𥫗"},
        {title:"登字头儿", id:"184", sample:"登癸癷癹", manual:"", paths:"", name:"癶"},
        {title:"虍字头儿", id:"185", sample:"虎虚虏虑", manual:"", paths:"", name:"虍"},
        {title:"倒八字", id:"186", sample:"关兰并並", manual:"", paths:"", name:"丷"},
        {title:"三拐儿", id:"187", sample:"甾邕巢巡", manual:"", paths:"", name:"巛"},
        {title:"足字旁儿", id:"188", sample:"跃距蹄踢", manual:"", paths:"", name:"⻊"},
        {title:"四字头", id:"189", sample:"置罗罢罪罚罩", manual:"", paths:"", name:"罒"},
        // {title:"春字头儿", id:"190", sample:"奉奏泰秦舂", manual:"", paths:"", name:""},
        {title:"三撇儿", id:"190", sample:"影彰须形彤衫杉", manual:"", paths:"", name:"彡"},
        {title:"弄字底", id:"191", sample:"弄开异弈", manual:"", paths:"", name:"廾"},
        {title:"尤字旁", id:"192", sample:"就优犹忧扰", manual:"", paths:"", name:"尢"},
        {title:"点部", id:"193", sample:"之为乓兔令亣卞亠亽", manual:"", paths:"", name:"丶"},
        {title:"乙部", id:"194", sample:"亿艺忆乤", manual:"", paths:"", name:"乙"},
        {title:"乛部", id:"195", sample:"了予书买", manual:"", paths:"", name:"乛"},
        {title:"乚部", id:"196", sample:"礼扎孔乱轧", manual:"", paths:"", name:"乚"},
        {title:"凶字框", id:"197", sample:"凶画幽函", manual:"", paths:"", name:"凵"},
        {title:"角字头", id:"198", sample:"鱼色免龟兔", manual:"", paths:"", name:"⺈"},
        {title:"二字头", id:"199", sample:"云竺仁些元", manual:"", paths:"", name:"二"},
        {title:"寻字头", id:"200", sample:"当彗归寻灵录", manual:"", paths:"", name:"彐"},
        {title:"飞字头", id:"201", sample:"飛飜飝", manual:"", paths:"", name:"飞"},
        {title:"彑字头", id:"202", sample:"彔互彝彖", manual:"", paths:"", name:"彑"},
        {title:"旡字部", id:"203", sample:"既炁旤黖", manual:"", paths:"", name:"旡"},
        {title:"瓦字旁", id:"204", sample:"瓶甄瓷瓫", manual:"", paths:"", name:"瓦"},
        {title:"攴字旁", id:"205", sample:"敲敆敊敧", manual:"", paths:"", name:"攴"},
        {title:"告字头", id:"206", sample:"告先靠", manual:"", paths:"", name:"⺧"},
        {title:"恭字底", id:"207", sample:"恭慕塨", manual:"", paths:"", name:"⺗"},
        {title:"光字头", id:"208", sample:"光当尝尚肖", manual:"", paths:"", name:"⺌"},
        {title:"龙字部", id:"209", sample:"笼胧庞宠拢垄袭聋", manual:"", paths:"", name:"龙"},
        {title:"瓜字旁", id:"210", sample:"狐呱孤弧瓢", manual:"", paths:"", name:"瓜"},
        {title:"疋字旁", id:"211", sample:"蛋楚胥疍疏疎", manual:"", paths:"", name:"疋"},
        {title:"疋字部", id:"212", sample:"疏疎", manual:"", paths:"", name:"疋"},
        {title:"西字头", id:"213", sample:"粟要贾栗", manual:"", paths:"", name:"覀"},
        {title:"缶字旁", id:"214", sample:"缸缺罐窑罅", manual:"", paths:"", name:"缶"},
        {title:"色字旁", id:"215", sample:"绝艳栬铯", manual:"", paths:"", name:"色"},
        {title:"齐字旁", id:"216", sample:"挤济跻脐蛴侪哜", manual:"", paths:"", name:"齐"},
        {title:"美字头", id:"217", sample:"美羔盖恙", manual:"", paths:"", name:"⺷"},
        {title:"紧字底", id:"218", sample:"紧素紫系索累", manual:"", paths:"", name:"糸"},
        {title:"麦字部", id:"219", sample:"麦麸麺", manual:"", paths:"", name:"麦"},
        {title:"辰字部", id:"220", sample:"晨震振蜃唇辱宸", manual:"", paths:"", name:"辰"},
        {title:"卤字部", id:"221", sample:"鹾禼硵", manual:"", paths:"", name:"卤"},
        {title:"身字部", id:"222", sample:"躺射躲躬躯", manual:"", paths:"", name:"身"},
        {title:"辛字旁", id:"223", sample:"辣辨辫辩", manual:"", paths:"", name:"辛"},
        {title:"非字部", id:"224", sample:"靠菲啡辈罪排悲徘", manual:"", paths:"", name:"非"},
        {title:"黾字部", id:"225", sample:"绳蝇渑鼋", manual:"", paths:"", name:"黾"},
        {title:"隹字旁", id:"226", sample:"难谁雀售集焦", manual:"", paths:"", name:"隹"},
        {title:"阜字部", id:"227", sample:"阜埠顊", manual:"", paths:"", name:"阜"},
        {title:"面字旁", id:"228", sample:"缅腼偭靥麺", manual:"", paths:"", name:"面"},
        {title:"韭字部", id:"229", sample:"齑韮韰韲", manual:"", paths:"", name:"韭"},
        {title:"骨字部", id:"230", sample:"猾滑髓髀髖", manual:"", paths:"", name:"骨"},
        {title:"香字旁", id:"231", sample:"馥馦馤馚馞", manual:"", paths:"", name:"香"},
        {title:"鬼字边", id:"232", sample:"瑰愧槐魔魄魂", manual:"", paths:"", name:"鬼"},
        {title:"食字部", id:"233", sample:"飨餮飸飱喰", manual:"", paths:"", name:"食"},
        {title:"髟字部", id:"234", sample:"鬃鬟髯髫鬓鬏髻", manual:"", paths:"", name:"髟"},
        {title:"高字部", id:"235", sample:"敲稿搞镐篙槁嵩", manual:"", paths:"", name:"高"},
        {title:"麻字部", id:"236", sample:"魔磨摩靡", manual:"", paths:"", name:"麻"},
        {title:"鹿字部", id:"237", sample:"麂簏辘漉麌麇", manual:"", paths:"", name:"鹿"},
        {title:"黑字部", id:"238", sample:"嘿墨默黠黯黛黩黚黥", manual:"", paths:"", name:"黑"},
        {title:"鼠字部", id:"239", sample:"鼺鼪鼹鼩鼯", manual:"", paths:"", name:"鼠"},
        {title:"鼻字部", id:"240", sample:"齃齅濞鼾齄齉齁", manual:"", paths:"", name:"鼻"}
    ],
    zitiedashiPPBS: [
        {"title":"一字头儿", "id":"0", "sample":"下不丽七", "manual":"", "paths":"", "name":"二", "font":"ppbs"},
        {"title":"竖字部", "id":"1", "sample":"卡丫丰中", "manual":"", "paths":"", "name":"旧", "font":"ppbs"},
        {"title":"将字旁儿", "id":"2", "sample":"壮状妆将", "manual":"", "paths":"", "name":"状", "font":"ppbs"},
        {"title":"京字头儿", "id":"3", "sample":"亢京亩亮", "manual":"", "paths":"", "name":"京", "font":"ppbs"},
        {"title":"单人旁儿", "id":"4", "sample":"仁位你俄", "manual":"", "paths":"", "name":"你", "font":"ppbs"},
        {"title":"立刀旁儿", "id":"5", "sample":"列别剑刚", "manual":"", "paths":"", "name":"列", "font":"ppbs"},
        {"title":"折文儿", "id":"6", "sample":"冬处夏备", "manual":"", "paths":"", "name":"冬", "font":"ppbs"},
        {"title":"宝盖儿", "id":"7", "sample":"字定宾客", "manual":"", "paths":"", "name":"宝", "font":"ppbs"},
        {"title":"单耳刀儿", "id":"8", "sample":"卫印却", "manual":"", "paths":"", "name":"即", "font":"ppbs"},
        {"title":"同字匡儿", "id":"9", "sample":"冈网周同", "manual":"", "paths":"", "name":"同", "font":"ppbs"},
        {"title":"秃宝盖儿", "id":"10", "sample":"写军冠", "manual":"", "paths":"", "name":"写", "font":"ppbs"},
        {"title":"两点水儿", "id":"11", "sample":"次冷准冰", "manual":"", "paths":"", "name":"冷", "font":"ppbs"},
        {"title":"建之旁儿", "id":"12", "sample":"廷延建", "manual":"", "paths":"", "name":"建", "font":"ppbs"},
        {"title":"双人旁儿", "id":"13", "sample":"行征徒往很", "manual":"", "paths":"", "name":"行", "font":"ppbs"},
        {"title":"竖心旁儿", "id":"14", "sample":"怀快性情", "manual":"", "paths":"", "name":"快", "font":"ppbs"},
        {"title":"提手旁儿", "id":"15", "sample":"抗扛担摘", "manual":"", "paths":"", "name":"提", "font":"ppbs"},
        {"title":"反文旁儿", "id":"16", "sample":"收政教敛", "manual":"", "paths":"", "name":"放", "font":"ppbs"},
        {"title":"三点水儿", "id":"17", "sample":"江汪活汉", "manual":"", "paths":"", "name":"江", "font":"ppbs"},
        {"title":"四点儿", "id":"18", "sample":"杰点热照", "manual":"", "paths":"", "name":"热", "font":"ppbs"},
        {"title":"爪字头儿", "id":"19", "sample":"采觅受舀爱妥", "manual":"", "paths":"", "name":"采", "font":"ppbs"},
        {"title":"牛字旁儿", "id":"20", "sample":"物牲牺牡特", "manual":"", "paths":"", "name":"牺", "font":"ppbs"},
        {"title":"反犬旁儿", "id":"21", "sample":"狂独狠狼狗", "manual":"", "paths":"", "name":"猫", "font":"ppbs"},
        {"title":"绞丝旁儿", "id":"22", "sample":"红约纯给纸", "manual":"", "paths":"", "name":"红", "font":"ppbs"},
        {"title":"老字头儿", "id":"23", "sample":"考者耋老", "manual":"", "paths":"", "name":"考", "font":"ppbs"},
        {"title":"病字旁儿", "id":"24", "sample":"症疼痛痕", "manual":"", "paths":"", "name":"疼", "font":"ppbs"},
        {"title":"示字旁儿", "id":"25", "sample":"礼社祖祝福", "manual":"", "paths":"", "name":"礼", "font":"ppbs"},
        {"title":"绞丝旁", "id":"26", "sample":"約紀糾紂", "manual":"", "paths":"", "name":"糾", "font":"ppbs"},
        {"title":"走之儿", "id":"27", "sample":"过还送远", "manual":"", "paths":"", "name":"这", "font":"ppbs"},
        {"title":"金字旁儿", "id":"28", "sample":"钢铁铃错钦", "manual":"", "paths":"", "name":"钢", "font":"ppbs"},
        {"title":"草字头儿", "id":"29", "sample":"艾花英菜", "manual":"", "paths":"", "name":"草", "font":"ppbs"},
        {"title":"衣字旁儿", "id":"30", "sample":"初袖被补", "manual":"", "paths":"", "name":"袜", "font":"ppbs"},
        {"title":"言字旁儿", "id":"31", "sample":"计论识语", "manual":"", "paths":"", "name":"让", "font":"ppbs"},
        {"title":"双耳旁儿", "id":"32", "sample":"防阻院邦那郊", "manual":"", "paths":"", "name":"阳", "font":"ppbs"},
        {"title":"食字旁儿", "id":"33", "sample":"饼饮饥饿", "manual":"", "paths":"", "name":"饱", "font":"ppbs"},
        {"title":"㔾字旁", "id":"34", "sample":"卮危卷卺", "manual":"", "paths":"", "name":"㔾", "font":"ppbs"},
        {"title":"业字部", "id":"35", "sample":"壶显虚亚凿", "manual":"", "paths":"", "name":"显", "font":"ppbs"},
        {"title":"人字头", "id":"36", "sample":"介今令全会合", "manual":"", "paths":"", "name":"今", "font":"ppbs"},
        {"title":"儿字底", "id":"37", "sample":"允兄光", "manual":"", "paths":"", "name":"允", "font":"ppbs"},
        {"title":"兀字部", "id":"38", "sample":"尧尫尭卼", "manual":"", "paths":"", "name":"光", "font":"ppbs"},
        {"title":"入字头", "id":"39", "sample":"汆籴屳", "manual":"", "paths":"", "name":"籴", "font":"ppbs"},
        {"title":"八字头", "id":"40", "sample":"分公谷", "manual":"", "paths":"", "name":"分", "font":"ppbs"},
        {"title":"力字部", "id":"41", "sample":"努劝功动", "manual":"", "paths":"", "name":"功", "font":"ppbs"},
        {"title":"包字头儿", "id":"42", "sample":"勺勾旬包", "manual":"", "paths":"", "name":"包", "font":"ppbs"},
        {"title":"匕字头", "id":"43", "sample":"旨北㔫㔬", "manual":"", "paths":"", "name":"北", "font":"ppbs"},
        {"title":"几字底", "id":"44", "sample":"凭咒秃冗", "manual":"", "paths":"", "name":"咒", "font":"ppbs"},
        {"title":"刀字旁", "id":"45", "sample":"分初叨剪召叧", "manual":"", "paths":"", "name":"刃", "font":"ppbs"},
        {"title":"夕字旁", "id":"46", "sample":"外多梦岁名", "manual":"", "paths":"", "name":"舛", "font":"ppbs"},
        {"title":"大字头", "id":"47", "sample":"夺奈奇", "manual":"", "paths":"", "name":"夺", "font":"ppbs"},
        {"title":"女字旁", "id":"48", "sample":"好妈奶如她姓", "manual":"", "paths":"", "name":"妈", "font":"ppbs"},
        {"title":"子字旁", "id":"49", "sample":"孤孔孙孩", "manual":"", "paths":"", "name":"孙", "font":"ppbs"},
        {"title":"寸字旁", "id":"50", "sample":"对寻导寿时射", "manual":"", "paths":"", "name":"耐", "font":"ppbs"},
        {"title":"小字部", "id":"51", "sample":"尘尖当肖尚党", "manual":"", "paths":"", "name":"尘", "font":"ppbs"},
        {"title":"尣字部", "id":"52", "sample":"尣尦尩", "manual":"", "paths":"", "name":"尣", "font":"ppbs"},
        {"title":"尸字头", "id":"53", "sample":"尼层尾居屋屏", "manual":"", "paths":"", "name":"层", "font":"ppbs"},
        {"title":"屮字头", "id":"54", "sample":"屮屯", "manual":"", "paths":"", "name":"蚩", "font":"ppbs"},
        {"title":"山字旁", "id":"55", "sample":"岭峰峡", "manual":"", "paths":"", "name":"岭", "font":"ppbs"},
        {"title":"川字旁儿", "id":"56", "sample":"顺圳训驯钏", "manual":"", "paths":"", "name":"训", "font":"ppbs"},
        {"title":"工字旁", "id":"57", "sample":"攻巧巩功项", "manual":"", "paths":"", "name":"攻", "font":"ppbs"},
        {"title":"己字部", "id":"58", "sample":"记纪配杞忌", "manual":"", "paths":"", "name":"岂", "font":"ppbs"},
        {"title":"三匡栏儿", "id":"59", "sample":"区匠匣", "manual":"", "paths":"", "name":"区", "font":"ppbs"},
        {"title":"匸字部", "id":"60", "sample":"匸", "manual":"", "paths":"", "name":"匸", "font":"ppbs"},
        {"title":"十字头", "id":"61", "sample":"支克南", "manual":"", "paths":"", "name":"支", "font":"ppbs"},
        {"title":"卜字部", "id":"62", "sample":"外卧仆", "manual":"", "paths":"", "name":"外", "font":"ppbs"},
        {"title":"偏厂儿", "id":"63", "sample":"厅厉历厚", "manual":"", "paths":"", "name":"厅", "font":"ppbs"},
        {"title":"又字旁儿", "id":"64", "sample":"劝对观欢双取", "manual":"", "paths":"", "name":"对", "font":"ppbs"},
        {"title":"口字旁", "id":"65", "sample":"叮吐吓吃听吹", "manual":"", "paths":"", "name":"吃", "font":"ppbs"},
        {"title":"方框儿", "id":"66", "sample":"四团回园困因", "manual":"", "paths":"", "name":"因", "font":"ppbs"},
        {"title":"提土旁", "id":"67", "sample":"块地坏均坑场", "manual":"", "paths":"", "name":"块", "font":"ppbs"},
        {"title":"士字头", "id":"68", "sample":"吉志声", "manual":"", "paths":"", "name":"吉", "font":"ppbs"},
        {"title":"已字部", "id":"69", "sample":"已", "manual":"", "paths":"", "name":"已", "font":"ppbs"},
        {"title":"巳字部", "id":"70", "sample":"导异祀汜", "manual":"", "paths":"", "name":"导", "font":"ppbs"},
        {"title":"巾字旁", "id":"71", "sample":"帆帐帜帽带帮", "manual":"", "paths":"", "name":"幅", "font":"ppbs"},
        {"title":"干字部", "id":"72", "sample":"杆竿汗奸轩秆", "manual":"", "paths":"", "name":"杆", "font":"ppbs"},
        {"title":"幺字旁", "id":"73", "sample":"吆幼幻乣糸", "manual":"", "paths":"", "name":"幼", "font":"ppbs"},
        {"title":"广字旁儿", "id":"74", "sample":"庄店席应", "manual":"", "paths":"", "name":"庄", "font":"ppbs"},
        {"title":"弋字边", "id":"75", "sample":"式贰代鸢", "manual":"", "paths":"", "name":"式", "font":"ppbs"},
        {"title":"弓字旁", "id":"76", "sample":"强弦弹引张弘", "manual":"", "paths":"", "name":"引", "font":"ppbs"},
        {"title":"心字底", "id":"77", "sample":"念忽思急想怎", "manual":"", "paths":"", "name":"忘", "font":"ppbs"},
        {"title":"戈字旁", "id":"78", "sample":"伐战或", "manual":"", "paths":"", "name":"战", "font":"ppbs"},
        {"title":"户字旁", "id":"79", "sample":"肩房扁扇启", "manual":"", "paths":"", "name":"房", "font":"ppbs"},
        {"title":"手字底", "id":"80", "sample":"拿拜拳挚", "manual":"", "paths":"", "name":"拿", "font":"ppbs"},
        {"title":"支字部", "id":"81", "sample":"枝技肢岐歧妓", "manual":"", "paths":"", "name":"枝", "font":"ppbs"},
        {"title":"文字头", "id":"82", "sample":"齐吝紊蚊纹刘", "manual":"", "paths":"", "name":"齐", "font":"ppbs"},
        {"title":"斗字边", "id":"83", "sample":"料斜斟蚪科抖", "manual":"", "paths":"", "name":"料", "font":"ppbs"},
        {"title":"斤字旁", "id":"84", "sample":"新斯断芹", "manual":"", "paths":"", "name":"新", "font":"ppbs"},
        {"title":"方字旁", "id":"85", "sample":"旗放施旅族旋", "manual":"", "paths":"", "name":"旗", "font":"ppbs"},
        {"title":"日字旁", "id":"86", "sample":"旺明昨晌晴晾", "manual":"", "paths":"", "name":"晴", "font":"ppbs"},
        {"title":"歹字旁", "id":"87", "sample":"列歼殊", "manual":"", "paths":"", "name":"殊", "font":"ppbs"},
        {"title":"殳字边", "id":"88", "sample":"段殷般", "manual":"", "paths":"", "name":"段", "font":"ppbs"},
        {"title":"母字部", "id":"89", "sample":"每毒毓拇姆", "manual":"", "paths":"", "name":"每", "font":"ppbs"},
        {"title":"比字头", "id":"90", "sample":"毕皆毙批昆秕屁", "manual":"", "paths":"", "name":"皆", "font":"ppbs"},
        {"title":"毛字旁", "id":"91", "sample":"尾笔牦蚝麾耗秏", "manual":"", "paths":"", "name":"尾", "font":"ppbs"},
        {"title":"氏字头", "id":"92", "sample":"纸舐昏芪", "manual":"", "paths":"", "name":"纸", "font":"ppbs"},
        {"title":"气字头", "id":"93", "sample":"氛氧氮气", "manual":"", "paths":"", "name":"氛", "font":"ppbs"},
        {"title":"水字底", "id":"94", "sample":"尿沓泵浆氽", "manual":"", "paths":"", "name":"泉", "font":"ppbs"},
        {"title":"泰字底", "id":"95", "sample":"暴求黎泰录", "manual":"", "paths":"", "name":"泰", "font":"ppbs"},
        {"title":"火字旁", "id":"96", "sample":"炉灯炸烂烟灭", "manual":"", "paths":"", "name":"炉", "font":"ppbs"},
        {"title":"爪字旁", "id":"97", "sample":"爬抓笊釽", "manual":"", "paths":"", "name":"爬", "font":"ppbs"},
        {"title":"父字旁", "id":"98", "sample":"爷斧爸爹", "manual":"", "paths":"", "name":"爸", "font":"ppbs"},
        {"title":"爻字部", "id":"99", "sample":"驳駁訤笅", "manual":"", "paths":"", "name":"驳", "font":"ppbs"},
        {"title":"爿字旁儿", "id":"100", "sample":"妝狀牀牅牃牁壯", "manual":"", "paths":"", "name":"戕", "font":"ppbs"},
        {"title":"曰字头", "id":"101", "sample":"曼冒最晕曶", "manual":"", "paths":"", "name":"最", "font":"ppbs"},
        {"title":"月字旁", "id":"102", "sample":"肝肚肤胆胖脱", "manual":"", "paths":"", "name":"肚", "font":"ppbs"},
        {"title":"木字旁", "id":"103", "sample":"机材村林松相", "manual":"", "paths":"", "name":"林", "font":"ppbs"},
        {"title":"欠字边", "id":"104", "sample":"歌欢钦吹软饮欲次", "manual":"", "paths":"", "name":"吹", "font":"ppbs"},
        {"title":"止字旁", "id":"105", "sample":"正肯趾址耻企芷", "manual":"", "paths":"", "name":"趾", "font":"ppbs"},
        {"title":"提止旁", "id":"106", "sample":"此歧", "manual":"", "paths":"", "name":"歧", "font":"ppbs"},
        {"title":"片字旁", "id":"107", "sample":"牌版牍牓牊", "manual":"", "paths":"", "name":"牌", "font":"ppbs"},
        {"title":"牙字旁", "id":"108", "sample":"芽呀穿鸦蚜讶", "manual":"", "paths":"", "name":"鸦", "font":"ppbs"},
        {"title":"犬字旁", "id":"109", "sample":"哭突臭状献厌", "manual":"", "paths":"", "name":"哭", "font":"ppbs"},
        {"title":"玄字旁", "id":"110", "sample":"炫舷眩弦", "manual":"", "paths":"", "name":"炫", "font":"ppbs"},
        {"title":"玉字部", "id":"111", "sample":"宝璧琞钰珏玺", "manual":"", "paths":"", "name":"璧", "font":"ppbs"},
        {"title":"王字旁", "id":"112", "sample":"环现理玲玩班", "manual":"", "paths":"", "name":"玩", "font":"ppbs"},
        {"title":"甘字旁", "id":"113", "sample":"甜邯某钳酣绀柑", "manual":"", "paths":"", "name":"甜", "font":"ppbs"},
        {"title":"生字部", "id":"114", "sample":"星胜牲姓性", "manual":"", "paths":"", "name":"胜", "font":"ppbs"},
        {"title":"提生旁", "id":"115", "sample":"甥甡", "manual":"", "paths":"", "name":"甥", "font":"ppbs"},
        {"title":"羊字旁", "id":"116", "sample":"着差羞", "manual":"", "paths":"", "name":"羞", "font":"ppbs"},
        {"title":"羊字旁", "id":"117", "sample":"洋样鲜详", "manual":"", "paths":"", "name":"样", "font":"ppbs"},
        {"title":"羽字部", "id":"118", "sample":"翁翔翊羿", "manual":"", "paths":"", "name":"翔", "font":"ppbs"},
        {"title":"老字头", "id":"119", "sample":"耆䎝耄耋", "manual":"", "paths":"", "name":"耆", "font":"ppbs"},
        {"title":"耳字旁", "id":"120", "sample":"聪取联聊耷耻耶耸", "manual":"", "paths":"", "name":"取", "font":"ppbs"},
        {"title":"聿字部", "id":"121", "sample":"律津肆珒", "manual":"", "paths":"", "name":"肄", "font":"ppbs"},
        {"title":"肀字头", "id":"122", "sample":"肃隶", "manual":"", "paths":"", "name":"律", "font":"ppbs"},
        {"title":"肉字底", "id":"123", "sample":"腐臋胬胔膐脔", "manual":"", "paths":"", "name":"腐", "font":"ppbs"},
        {"title":"臣字部", "id":"124", "sample":"卧宦頣烥挋弫", "manual":"", "paths":"", "name":"卧", "font":"ppbs"},
        {"title":"自字部", "id":"125", "sample":"息臭咱臬", "manual":"", "paths":"", "name":"息", "font":"ppbs"},
        {"title":"用字部", "id":"126", "sample":"拥佣痈砽甪甭", "manual":"", "paths":"", "name":"拥", "font":"ppbs"},
        {"title":"田字旁", "id":"127", "sample":"男胃畔亩界留", "manual":"", "paths":"", "name":"男", "font":"ppbs"},
        {"title":"白字旁", "id":"128", "sample":"的百怕伯泉柏拍", "manual":"", "paths":"", "name":"皓", "font":"ppbs"},
        {"title":"皮字边", "id":"129", "sample":"波披坡被破疲", "manual":"", "paths":"", "name":"坡", "font":"ppbs"},
        {"title":"皿字底", "id":"130", "sample":"盆盒盘盂盐益", "manual":"", "paths":"", "name":"盒", "font":"ppbs"},
        {"title":"目字旁", "id":"131", "sample":"盯盼眨眼睛眯", "manual":"", "paths":"", "name":"睛", "font":"ppbs"},
        {"title":"矛字部", "id":"132", "sample":"柔茅矜矝", "manual":"", "paths":"", "name":"柔", "font":"ppbs"},
        {"title":"矢字旁", "id":"133", "sample":"矮知短矩矫", "manual":"", "paths":"", "name":"矮", "font":"ppbs"},
        {"title":"石字旁", "id":"134", "sample":"矿砖砍破碎碰", "manual":"", "paths":"", "name":"矿", "font":"ppbs"},
        {"title":"示字底", "id":"135", "sample":"票际禁宗奈标", "manual":"", "paths":"", "name":"禁", "font":"ppbs"},
        {"title":"禾字旁", "id":"136", "sample":"秆秒租和秋种", "manual":"", "paths":"", "name":"秋", "font":"ppbs"},
        {"title":"穴字头", "id":"137", "sample":"穷空突穿容窄", "manual":"", "paths":"", "name":"空", "font":"ppbs"},
        {"title":"立字旁", "id":"138", "sample":"站垃音童位拉泣粒", "manual":"", "paths":"", "name":"站", "font":"ppbs"},
        {"title":"竹字头", "id":"139", "sample":"笑笔筷筏管等篮竿篇简", "manual":"", "paths":"", "name":"笑", "font":"ppbs"},
        {"title":"米字旁", "id":"140", "sample":"粉精粮粗粒糖", "manual":"", "paths":"", "name":"粉", "font":"ppbs"},
        {"title":"至字旁", "id":"141", "sample":"到室致屋", "manual":"", "paths":"", "name":"到", "font":"ppbs"},
        {"title":"邑字旁", "id":"142", "sample":"邕邫郶郒", "manual":"", "paths":"", "name":"邕", "font":"ppbs"},
        {"title":"酉字旁", "id":"143", "sample":"酥醉酒配酷醋", "manual":"", "paths":"", "name":"醉", "font":"ppbs"},
        {"title":"釆字旁儿", "id":"144", "sample":"悉番释釉彩踩菜睬", "manual":"", "paths":"", "name":"释", "font":"ppbs"},
        {"title":"里字部", "id":"146", "sample":"童埋理量狸", "manual":"", "paths":"", "name":"童", "font":"ppbs"},
        {"title":"金字部", "id":"147", "sample":"鉴銮錾鏖", "manual":"", "paths":"", "name":"鉴", "font":"ppbs"},
        {"title":"豕字部", "id":"148", "sample":"家豚豮烼豨", "manual":"", "paths":"", "name":"家", "font":"ppbs"},
        {"title":"豸字旁", "id":"149", "sample":"貌豹豺貂貁貏貊貚", "manual":"", "paths":"", "name":"貌", "font":"ppbs"},
        {"title":"贝字旁", "id":"150", "sample":"财败责货贪贫", "manual":"", "paths":"", "name":"财", "font":"ppbs"},
        {"title":"赤字部", "id":"151", "sample":"赦赫郝赬浾赩", "manual":"", "paths":"", "name":"赦", "font":"ppbs"},
        {"title":"走字底", "id":"152", "sample":"赵赶起越超趣", "manual":"", "paths":"", "name":"赵", "font":"ppbs"},
        {"title":"足字旁", "id":"153", "sample":"跳跑跌蹈蹲跟", "manual":"", "paths":"", "name":"跳", "font":"ppbs"},
        {"title":"臼字部", "id":"154", "sample":"桕舅舀臾舁", "manual":"", "paths":"", "name":"桕", "font":"ppbs"},
        {"title":"舌字旁", "id":"155", "sample":"活敌甜话舐乱舔恬刮括", "manual":"", "paths":"", "name":"乱", "font":"ppbs"},
        {"title":"舟字旁", "id":"156", "sample":"艘舰盘航舷般舶", "manual":"", "paths":"", "name":"船", "font":"ppbs"},
        {"title":"艮字边", "id":"157", "sample":"很眼根跟恨银", "manual":"", "paths":"", "name":"艰", "font":"ppbs"},
        {"title":"虫字旁", "id":"158", "sample":"蛙蝶蚊蜂蝉蛋蛛虾", "manual":"", "paths":"", "name":"虾", "font":"ppbs"},
        {"title":"血字底", "id":"159", "sample":"衅桖卹恤", "manual":"", "paths":"", "name":"衅", "font":"ppbs"},
        {"title":"行字部", "id":"160", "sample":"荇筕绗珩", "manual":"", "paths":"", "name":"荇", "font":"ppbs"},
        {"title":"衣字底", "id":"161", "sample":"袋装裂依袭袅衾", "manual":"", "paths":"", "name":"袋", "font":"ppbs"},
        {"title":"见字边", "id":"162", "sample":"规观舰现砚觅视", "manual":"", "paths":"", "name":"规", "font":"ppbs"},
        {"title":"角字旁", "id":"163", "sample":"确触觥觚", "manual":"", "paths":"", "name":"触", "font":"ppbs"},
        {"title":"言字旁", "id":"164", "sample":"信警誓譬", "manual":"", "paths":"", "name":"誓", "font":"ppbs"},
        {"title":"谷字部", "id":"165", "sample":"浴豁欲容裕峪俗", "manual":"", "paths":"", "name":"豁", "font":"ppbs"},
        {"title":"豆字部", "id":"166", "sample":"短登豌痘豉", "manual":"", "paths":"", "name":"短", "font":"ppbs"},
        {"title":"车字旁", "id":"167", "sample":"转轮软轻较辆", "manual":"", "paths":"", "name":"转", "font":"ppbs"},
        {"title":"长字部", "id":"168", "sample":"张帐账怅", "manual":"", "paths":"", "name":"张", "font":"ppbs"},
        {"title":"门字框", "id":"169", "sample":"闪闭问闲间闷", "manual":"", "paths":"", "name":"问", "font":"ppbs"},
        {"title":"雨字头", "id":"170", "sample":"雪雷零需震霜", "manual":"", "paths":"", "name":"雷", "font":"ppbs"},
        {"title":"青字部", "id":"171", "sample":"情睛蜻请精晴清猜静", "manual":"", "paths":"", "name":"情", "font":"ppbs"},
        {"title":"革字旁", "id":"172", "sample":"鞋靴鞠鞍", "manual":"", "paths":"", "name":"鞋", "font":"ppbs"},
        {"title":"韦字旁", "id":"173", "sample":"伟韧苇纬讳韬帏", "manual":"", "paths":"", "name":"韧", "font":"ppbs"},
        {"title":"音字旁", "id":"174", "sample":"暗谙韵歆黯", "manual":"", "paths":"", "name":"韵", "font":"ppbs"},
        {"title":"页字旁", "id":"175", "sample":"顶项顺预领颗", "manual":"", "paths":"", "name":"顶", "font":"ppbs"},
        {"title":"风字边", "id":"176", "sample":"讽枫飘疯", "manual":"", "paths":"", "name":"飘", "font":"ppbs"},
        {"title":"首字旁", "id":"177", "sample":"馗馘艏渞", "manual":"", "paths":"", "name":"馗", "font":"ppbs"},
        {"title":"马字部", "id":"178", "sample":"驯驱驴驻验骑", "manual":"", "paths":"", "name":"驴", "font":"ppbs"},
        {"title":"鱼字旁", "id":"179", "sample":"鲜鳄鳔鲸", "manual":"", "paths":"", "name":"鲜", "font":"ppbs"},
        {"title":"鸟字旁", "id":"180", "sample":"鸭鸡鹅鸣", "manual":"", "paths":"", "name":"鸡", "font":"ppbs"},
        {"title":"齿字部", "id":"181", "sample":"龄龀啮龋龈龃", "manual":"", "paths":"", "name":"龄", "font":"ppbs"},
        {"title":"私字儿", "id":"182", "sample":"允去矣参", "manual":"", "paths":"", "name":"台", "font":"ppbs"},
        {"title":"竹字头儿", "id":"183", "sample":"笃竿笈竽", "manual":"", "paths":"", "name":"笑", "font":"ppbs"},
        {"title":"登字头儿", "id":"184", "sample":"登癸癷癹", "manual":"", "paths":"", "name":"登", "font":"ppbs"},
        {"title":"虍字头儿", "id":"185", "sample":"虎虚虏虑", "manual":"", "paths":"", "name":"虑", "font":"ppbs"},
        {"title":"倒八字", "id":"186", "sample":"关兰并並", "manual":"", "paths":"", "name":"并", "font":"ppbs"},
        {"title":"三拐儿", "id":"187", "sample":"甾邕巢巡", "manual":"", "paths":"", "name":"巢", "font":"ppbs"},
        {"title":"足字旁儿", "id":"188", "sample":"跃距蹄踢", "manual":"", "paths":"", "name":"跳", "font":"ppbs"},
        {"title":"四字头", "id":"189", "sample":"置罗罢罪罚罩", "manual":"", "paths":"", "name":"罢", "font":"ppbs"},
        {"title":"春字头儿", "id":"190", "sample":"奉奏泰秦舂", "manual":"", "paths":"", "name":"春", "font":"ppbs"},
        {"title":"三撇儿", "id":"191", "sample":"影彰须形彤衫杉", "manual":"", "paths":"", "name":"形", "font":"ppbs"},
        {"title":"弄字底", "id":"192", "sample":"弄开异弈", "manual":"", "paths":"", "name":"异", "font":"ppbs"},
        {"title":"尤字旁", "id":"193", "sample":"就优犹忧扰", "manual":"", "paths":"", "name":"就", "font":"ppbs"},
        {"title":"点部", "id":"194", "sample":"之为乓兔令亣卞亠亽", "manual":"", "paths":"", "name":"义", "font":"ppbs"},
        {"title":"乙部", "id":"195", "sample":"亿艺忆乤", "manual":"", "paths":"", "name":"乞", "font":"ppbs"},
        {"title":"乛部", "id":"196", "sample":"了予书买", "manual":"", "paths":"", "name":"予", "font":"ppbs"},
        {"title":"乚部", "id":"197", "sample":"礼扎孔乱轧", "manual":"", "paths":"", "name":"乳", "font":"ppbs"},
        {"title":"凶字框", "id":"198", "sample":"凶画幽函", "manual":"", "paths":"", "name":"凶", "font":"ppbs"},
        {"title":"角字头", "id":"199", "sample":"鱼色免龟兔", "manual":"", "paths":"", "name":"鱼", "font":"ppbs"},
        {"title":"二字头", "id":"200", "sample":"云竺仁些元", "manual":"", "paths":"", "name":"元", "font":"ppbs"},
        {"title":"寻字头", "id":"201", "sample":"当彗归寻灵录", "manual":"", "paths":"", "name":"灵", "font":"ppbs"},
        {"title":"飞字头", "id":"202", "sample":"飛飜飝", "manual":"", "paths":"", "name":"飛", "font":"ppbs"},
        {"title":"彑字头", "id":"203", "sample":"彔互彝彖", "manual":"", "paths":"", "name":"彖", "font":"ppbs"},
        {"title":"旡字部", "id":"204", "sample":"既炁旤黖", "manual":"", "paths":"", "name":"既", "font":"ppbs"},
        {"title":"瓦字旁", "id":"205", "sample":"瓶甄瓷瓫", "manual":"", "paths":"", "name":"瓶", "font":"ppbs"},
        {"title":"攴字旁", "id":"206", "sample":"敲敆敊敧", "manual":"", "paths":"", "name":"敲", "font":"ppbs"},
        {"title":"告字头", "id":"207", "sample":"告先靠", "manual":"", "paths":"", "name":"告", "font":"ppbs"},
        {"title":"恭字底", "id":"208", "sample":"恭慕塨", "manual":"", "paths":"", "name":"恭", "font":"ppbs"},
        {"title":"光字头", "id":"209", "sample":"光当尝尚肖", "manual":"", "paths":"", "name":"肖", "font":"ppbs"},
        {"title":"龙字部", "id":"210", "sample":"笼胧庞宠拢垄袭聋", "manual":"", "paths":"", "name":"笼", "font":"ppbs"},
        {"title":"瓜字旁", "id":"211", "sample":"狐呱孤弧瓢", "manual":"", "paths":"", "name":"狐", "font":"ppbs"},
        {"title":"疋字旁", "id":"212", "sample":"蛋楚胥疍疏疎", "manual":"", "paths":"", "name":"蛋", "font":"ppbs"},
        {"title":"疋字部", "id":"213", "sample":"疏疎", "manual":"", "paths":"", "name":"疏", "font":"ppbs"},
        {"title":"西字头", "id":"214", "sample":"粟要贾栗", "manual":"", "paths":"", "name":"要", "font":"ppbs"},
        {"title":"缶字旁", "id":"215", "sample":"缸缺罐窑罅", "manual":"", "paths":"", "name":"缸", "font":"ppbs"},
        {"title":"色字旁", "id":"216", "sample":"绝艳栬铯", "manual":"", "paths":"", "name":"绝", "font":"ppbs"},
        {"title":"齐字旁", "id":"217", "sample":"挤济跻脐蛴侪哜", "manual":"", "paths":"", "name":"挤", "font":"ppbs"},
        {"title":"美字头", "id":"218", "sample":"美羔盖恙", "manual":"", "paths":"", "name":"盖", "font":"ppbs"},
        {"title":"紧字底", "id":"219", "sample":"紧素紫系索累", "manual":"", "paths":"", "name":"紧", "font":"ppbs"},
        {"title":"麦字部", "id":"220", "sample":"麦麸麺", "manual":"", "paths":"", "name":"麸", "font":"ppbs"},
        {"title":"辰字部", "id":"221", "sample":"晨震振蜃唇辱宸", "manual":"", "paths":"", "name":"晨", "font":"ppbs"},
        {"title":"卤字部", "id":"222", "sample":"鹾禼硵", "manual":"", "paths":"", "name":"鹾", "font":"ppbs"},
        {"title":"身字部", "id":"223", "sample":"躺射躲躬躯", "manual":"", "paths":"", "name":"躲", "font":"ppbs"},
        {"title":"辛字旁", "id":"224", "sample":"辣辨辫辩", "manual":"", "paths":"", "name":"辣", "font":"ppbs"},
        {"title":"非字部", "id":"225", "sample":"靠菲啡辈罪排悲徘", "manual":"", "paths":"", "name":"靠", "font":"ppbs"},
        {"title":"黾字部", "id":"226", "sample":"绳蝇渑鼋", "manual":"", "paths":"", "name":"绳", "font":"ppbs"},
        {"title":"隹字旁", "id":"227", "sample":"难谁雀售集焦", "manual":"", "paths":"", "name":"雅", "font":"ppbs"},
        {"title":"阜字部", "id":"228", "sample":"阜埠顊", "manual":"", "paths":"", "name":"埠", "font":"ppbs"},
        {"title":"面字旁", "id":"229", "sample":"缅腼偭靥麺", "manual":"", "paths":"", "name":"缅", "font":"ppbs"},
        {"title":"骨字部", "id":"230", "sample":"猾滑髓髀髖", "manual":"", "paths":"", "name":"滑", "font":"ppbs"},
        {"title":"香字旁", "id":"231", "sample":"馥馦馤馚馞", "manual":"", "paths":"", "name":"馥", "font":"ppbs"},
        {"title":"鬼字边", "id":"232", "sample":"瑰愧槐魔魄魂", "manual":"", "paths":"", "name":"瑰", "font":"ppbs"},
        {"title":"食字部", "id":"233", "sample":"飨餮飸飱喰", "manual":"", "paths":"", "name":"飨", "font":"ppbs"},
        {"title":"髟字部", "id":"234", "sample":"鬃鬟髯髫鬓鬏髻", "manual":"", "paths":"", "name":"鬃", "font":"ppbs"},
        {"title":"高字部", "id":"235", "sample":"敲稿搞镐篙槁嵩", "manual":"", "paths":"", "name":"稿", "font":"ppbs"},
        {"title":"麻字部", "id":"236", "sample":"魔磨摩靡", "manual":"", "paths":"", "name":"磨", "font":"ppbs"},
        {"title":"鹿字部", "id":"237", "sample":"麂簏辘漉麌麇", "manual":"", "paths":"", "name":"麂", "font":"ppbs"},
        {"title":"黑字部", "id":"238", "sample":"嘿墨默黠黯黛黩黚黥", "manual":"", "paths":"", "name":"墨", "font":"ppbs"},
        {"title":"鼠字部", "id":"239", "sample":"鼺鼪鼹鼩鼯", "manual":"", "paths":"", "name":"鼹", "font":"ppbs"},
        {"title":"鼻字部", "id":"240", "sample":"齃齅濞鼾齄齉齁", "manual":"", "paths":"", "name":"鼾", "font":"ppbs"},
        {"title":"而字部", "id":"241", "sample":"耍需耐斋", "manual":"", "paths":"", "name":"耍", "font":"ppbs"},
        {"title":"耒字旁", "id":"242", "sample":"耙耕耘耗", "manual":"", "paths":"", "name":"耘", "font":"ppbs"},
        {"title":"韭字部", "id":"243", "sample":"齑韮韰韲", "manual":"", "paths":"", "name":"齑", "font":"ppbs"},
    ],
    getPianPangBushous: function(store){
        const length = store.pianPangBushous.length;
        let content = '';
        for(let i=0; i<length; i++){
            const item = store.pianPangBushous[i];
            content += `${i}(${item.sample}) `;
        }
        return content;
    },
    multiSelect: function (id, callback) {
        $('ul#' + id + '>li').click(function () {
            $(this).toggleClass('multi-selected');
            if ($('ul#' + id + '>li.multi-selected').length == 0) {
                $('ul#' + id + '>li.select').removeClass('multi-selected');
            } else {
                $('ul#' + id + '>li.select').addClass('multi-selected');
            }
            callback(this);
        });
    },
    createBihuaArray: function(paths){
        var svgs  = [];
        if(paths && paths.length > 0){
            paths.forEach(s=>{
                svgs.push({
                    id: s.id,
                    title: s.title,
                    sample: s.sample,
                    svg: Util.createBihua(s.paths)
                });
            });
        }
        return svgs;
    },
    createBushouArray: function(paths){
        var svgs  = [];
        if(paths && paths.length > 0){
            paths.forEach(s=>{
                svgs.push({
                    id: s.id,
                    title: s.title,
                    sample: s.sample,
                    svg: s.name,
                    font:s.font
                });
            });
        }
        return svgs;
    },
    createKongbiArray: function(paths, transform){
        var svgs  = [];
        if(paths && paths.length > 0){
            paths.forEach(s=>{
                if(s){
                    svgs.push({
                        id: s.id,
                        title: s.title,
                        sample: s.sample,
                        svg: Util.createBihua(s.paths, transform)
                    });
                }
            });
        }
        return svgs;
    },
    createBihua:function(path, transform, className){
        if(!transform){
            transform = "translate(-3, 11) scale(0.017, -0.017)";
        }
        if(path){
            var svg = `<svg><g transform="${transform}" ${className?"class=\""+className+"\"":""}><path d="${path}"></path></g></svg>`;
            return svg;
        }else{
            return "";
        }
        
    },
    createWordBihua: function(path, option){
        if(path){
            return `<svg viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg"><g transform="translate(${option.translateX}, ${option.translateY}) scale(${option.scale}, -${option.scale})"><path d="${path}" stroke-dasharray="${option.dasharray}" stroke-width="${option.dashwidth}" stroke="${this.hexToRgb(option.dashcolor)}" stroke-opacity="${option.dashopacity}%" fill="${this.hexToRgb(option.dashcolor)}" fill-opacity="${option.fillopacity}%"></path></g></svg>`;
        }else{
            return "";
        }
    },
    createBihuaButtonBlock: function(parent, fieldsetSelector, svgs, defaultBihuas, callback){
        var block = Util.createBlock();
        var ulId = fieldsetSelector + "-svg-select-list";
        Util.createBihuaButton(block, ulId, svgs, defaultBihuas);
        block.appendTo(parent);
        Util.multiSelect(ulId, function (that) {
            var val = $(that);
            callback(val);
        });
        return block;
    },
    createBihuaButton: function(parent, ulId, svgs, defaultBihuas){
        console.log('createBihuaButton:', defaultBihuas)
        var ulBlock = $(`<ul id="${ulId}"></ul>`);
        svgs.forEach(ft => {
            var liStr = `<li data-url="${ft.id}" data-sample="${ft.sample}" ${defaultBihuas.indexOf(','+ft.id+',') > -1 ? "class='multi-selected'" : ""} title="${ft.title}" style="width:40px;height:40px;${ft.font?`font-family:${ft.font}`:``}">${ft.svg}</li>`;
            $(liStr).appendTo(ulBlock);
        });
        ulBlock.appendTo(parent);
        return ulBlock;
    },
    addModifyEvent: function(store){
       preview.$("span[id*='manual'],span[id*='bihuatitle']").bind({
        DOMSubtreeModified: function(e){
            let id = preview.$(this).attr("id");
            let bibua = id.replace("manual","").replace("bihuatitle", "");
            if(id.indexOf("manual") > -1){
                store.bihuaPaths[bibua].manual = $(e.target).text();
            }else if(id.indexOf("bihuatitle") > -1){
                store.bihuaPaths[bibua].title = $(e.target).text();
            }
            store.bihuaPaths = store.bihuaPaths;
        }
       });
    },
    addModifyCustomLineEvent: function(){
       preview.$("div.custom-line").bind({
        DOMSubtreeModified: function(e){
            let index = preview.$(this).attr("id").replace("custom","");
            Util.customData[index] = $(e.target).text();
        }
       }); 
    },
    createBihuaBlock: function(storage, bihua){
        let bihuaSvg = Util.createWordBihua(storage.bihuaPaths[bihua].paths, {translateX: storage.bihuaPaddingLeft, translateY: storage.bihuaLineHeight, scale: storage.bihuaSize/100, dasharray: '3 3', dashwidth: 1, dashcolor:storage.firstBihuaColor, dashopacity: 100, fillopacity: 100});
        let bgurl = `url(&quot;${storage.boxArray[0][0].bgImg}&quot;) no-repeat`;
        let border = `${storage.boxOutlineSize}px ${storage.boxOutlineColor} ${storage.boxOutlineStyle}`;
        let block = `<div style="border:${border};height:${storage.boxSize}px;overflow:hidden;margin-top:8px;margin-bottom:3px;"><span style="display: inline-block;width:${storage.boxSize}px;height:${storage.boxSize}px;border-right:${border};background:${bgurl};background-size:${storage.boxSize}px ${storage.boxSize}px;overflow:hidden;">${bihuaSvg}</span><span contenteditable='plaintext-only' style='display:inline-block;width:${storage.bihuaNameWidth?storage.bihuaNameWidth:113}px;height:${storage.boxSize}px;padding:0 ${storage.bihuaNamePaddingLeft}px;line-height:${storage.bihuaNameLineHeight}px;border-right:${border};font-size:${storage.bihuaNameSize};font-family:"${storage.bihuaNameFont}";color:${storage.bihuaNameColor};overflow:hidden;text-align:center;' id='bihuatitle${bihua}'>${storage.bihuaPaths[bihua].title}</span><span contenteditable='plaintext-only' style='display: inline-block;width:${storage.bihuaManualWidth?storage.bihuaManualWidth:510}px;height:${storage.boxSize}px;font-size:${storage.bihuaManualSize}px;font-family:"${storage.bihuaManualFont}";color:${storage.bihuaManualColor};padding-left:${storage.bihuaManualPaddingLeft}px;line-height:${storage.bihuaManualLineHeight}px;overflow:hidden;' id='manual${bihua}'>${storage.bihuaPaths[bihua].manual}</span></div>`;
        return block;
    },
    createBihuaLine: function(bihua, l, line, store){
        let lineIndex = store.lineIndex?store.lineIndex:line;
        let wordUl = `<ul data-hide='${store.hide}' class='word ${lineIndex==0 ? "first-line" : "other-line"}' data-word=''>`;
        for(let w=0;w<store.columnsPerLine;w++){
            let bihuaSvg = bihua > -1 ? Util.createWordBihua(store.bihuaPaths[bihua].paths, {translateX: store.bihuaPaddingLeft, translateY: store.bihuaLineHeight, scale: store.bihuaSize/100, dasharray: '3 3', dashwidth: 1, dashcolor:w===0 && line===0?store.firstBihuaColor:store.otherBihuaColor, dashopacity: 100, fillopacity: 100}) : "";
            let bgurl = `url(&quot;${store.boxArray[lineIndex][w].bgImg}&quot;) no-repeat`;
            let border = `${store.boxArray[lineIndex][w].outlineSize}px ${store.boxArray[lineIndex][w].outlineColor} ${store.boxArray[lineIndex][w].outlineStyle}`;
            wordUl += (`<li contenteditable="plaintext-only"  ondblclick="dblclickCopy(this)" class="${w==0 && line==0 ? "first-word" : "other-word"}" style="${line==0 && bihuaSvg && (store.pinyinShow||store.topPinyinShow || store.topBushouShow || store.topBishuShow || store.topBishunShow || l==0) ? "border-top:"+border+";":""}${w==0?"border-left:"+border+";":""}border-right:${border};border-bottom:${border};width:${store.boxSize}px;height:${store.boxSize}px;line-height:${store.hanziLineHeight}px;${store.hanziPaddingLeft > 0 ? "padding-left:"+store.hanziPaddingLeft+"px" : "padding-right:"+(store.hanziPaddingLeft*-1)+"px"};background:${bgurl};background-size:${store.boxSize}px ${store.boxSize}px;font-family:"${store.hanziFont}";font-size:${store.hanziSize}px;color:${w==0 && line==0 ? store.firstHanziColor : store.otherHanziColor};text-align:${store.hanziPosition}">${w % (store.fillBlankTimes+1) == 0 && w < (store.fillBihuaTimes * (store.fillBlankTimes+1)) ? bihuaSvg : ""}</li>`);
        }
        wordUl += `</ul>`;
        return wordUl;
    },
    addBushouModifyEvent: function(store){
        preview.$("span[id*='manual'],span[id*='bushoutitle']").bind({
         DOMSubtreeModified: function(e){
             let id = preview.$(this).attr("id");
             let bibua = id.replace("manual","").replace("bushoutitle", "");
             if(id.indexOf("manual") > -1){
                store.pianPangBushous[bibua].manual = $(e.target).text();
             }else if(id.indexOf("bushoutitle") > -1){
                store.pianPangBushous[bibua].title = $(e.target).text();
             }
             store.pianPangBushous = store.pianPangBushous;
         }
        }); 
     },
    createBushouBlock: function(storage, index){
        console.log("createBushouBlock", storage.boxSize)
        const contentStyle = `${storage.bihuaPaddingLeft>0?"padding-left:"+storage.bihuaPaddingLeft:"padding-right:"+(storage.bihuaPaddingLeft*-1)}px; line-height: ${storage.bihuaLineHeight}px; font-family:'${storage.bushouFont}'; font-size:${storage.bihuaSize}px; color:${storage.firstBihuaColor};text-align:${storage.hanziPosition}`;
        const bihuaSvg = storage.pianPangBushous[index].name;
        const bgurl = `url(&quot;${storage.boxArray[0][0].bgImg}&quot;) no-repeat`;
        const border = `${storage.boxOutlineSize}px ${storage.boxOutlineColor} ${storage.boxOutlineStyle}`;
        let block = `<div style="border:${border};height:${storage.boxSize}px;overflow:hidden;margin-top:8px;margin-bottom:3px;"><span style="display: inline-block;width:${storage.boxSize}px;height:${storage.boxSize}px;border-right:${border};background:${bgurl};background-size:${storage.boxSize}px ${storage.boxSize}px;overflow:hidden;${contentStyle}">${bihuaSvg}</span><span contenteditable='plaintext-only' style='display:inline-block;width:${storage.bihuaNameWidth?storage.bihuaNameWidth:113}px;;height:${storage.boxSize}px;padding:0 ${storage.bihuaNamePaddingLeft}px;line-height:${storage.bihuaNameLineHeight}px;border-right:${border};font-size:${storage.bihuaNameSize};font-family:"${storage.bihuaNameFont}";color:${storage.bihuaNameColor};overflow:hidden;text-align:center;' id='bushoutitle${index}'>${storage.pianPangBushous[index].title}</span><span contenteditable='plaintext-only' style='display: inline-block;word-break: break-all; white-space: pre-wrap;width:${storage.bihuaManualWidth?storage.bihuaManualWidth:510}px;height:${storage.boxSize}px;font-size:${storage.bihuaManualSize}px;font-family:"${storage.bihuaManualFont}";color:${storage.bihuaManualColor};padding-left:${storage.bihuaManualPaddingLeft}px;line-height:${storage.bihuaManualLineHeight}px;overflow:hidden;' id='manual${index}'>${storage.pianPangBushous[index].manual}</span></div>`;
        return block;
    },
    createBushouLine: function(index, l, line, store){
        const lineIndex = store.lineIndex?store.lineIndex:line;
        let wordUl = `<ul data-hide='${store.hide}' class='word ${line==0 ? "first-line" : "other-line"}' data-word=''>`;
        for(let w=0;w<store.columnsPerLine;w++){
            const bihuaSvg = index > -1 ? store.pianPangBushous[index].name : "";
            const bgurl = `url(&quot;${store.boxArray[lineIndex][w].bgImg}&quot;) no-repeat`;
            const border = `${store.boxArray[lineIndex][w].outlineSize}px ${store.boxArray[lineIndex][w].outlineColor} ${store.boxArray[lineIndex][w].outlineStyle}`;
            wordUl += (`<li contenteditable="plaintext-only" class="${w==0 && line==0 ? "first-word" : "other-word"}" style="${line==0 && bihuaSvg && (store.pinyinShow||store.topPinyinShow || store.topBushouShow || store.topBishuShow || store.topBishunShow || l==0) ? "border-top:"+border+";":""}${w==0?"border-left:"+border+";":""}border-right:${border};border-bottom:${border};width:${store.boxSize}px;height:${store.boxSize}px;line-height:${store.bihuaLineHeight}px;${store.bihuaPaddingLeft > 0 ? "padding-left:"+store.bihuaPaddingLeft+"px" : "padding-right:"+(store.bihuaPaddingLeft*-1)+"px"};background:${bgurl};background-size:${store.boxSize}px ${store.boxSize}px;font-family:'${store.bushouFont}';font-size:${store.bihuaSize}px;color:${w==0 && line==0 ? store.firstBihuaColor : store.otherBihuaColor};text-align:${store.hanziPosition}">${w % (store.fillBlankTimes+1) == 0 && w < (store.fillBihuaTimes * (store.fillBlankTimes+1)) ? bihuaSvg : ""}</li>`);
        }
        wordUl += `</ul>`;
        return wordUl;
    },
    createEmptyLine: function(){
        return `<div style='margin:5px 0;'></div>`;
    },

    createKongbiLine: function(word, index, line, store){
        let lineIndex = store.lineIndex?store.lineIndex:line;
        let wordUl = `<ul data-hide='${store.hide}' class='word ${line==0 ? "first-line" : "other-line"}' data-word='${word}' style='${store.kongbiBoxMarginTop?"margin-top:"+store.kongbiBoxMarginTop+"px;":""}'>`;
        for(let w=0;w<store.columnsPerKongbiLine;w++){
            let wordSvg = word !== '' ? Util.createWordBihua(store.kongbiPaths[word].paths, {translateX: store.kongbiTranslateX, translateY: store.kongbiTranslateY, scale: store.kongbiSize, dasharray: '3 3', dashwidth: store.kongbiStrokeSize, dashcolor:w===0 && line===0?store.firstKongbiColor:store.otherKongbiColor, dashopacity: 100, fillopacity: 100}) : "";
            const bgurl = `url(&quot;${store.boxArray[lineIndex][w].bgImg}&quot;) no-repeat`; 
            const border = `${store.boxArray[lineIndex][w].outlineSize}px ${store.boxArray[lineIndex][w].outlineColor} ${store.boxArray[lineIndex][w].outlineStyle}`;
            wordUl += (`<li contenteditable="plaintext-only" oninput="inputHandle(this)" onpaste="pasteHandle(this)" style="${line==0 && word || store.kongbiBoxMarginTop > 0 ? "border-top:"+border+";":""}${w==0 || store.kongbiBoxMarginRight > 0?"border-left:"+border+";":""}border-right:${border};border-bottom:${border};width:${store.kongbiBoxSize}px;height:${store.kongbiBoxSize}px;line-height:${store.kongbiLineHeight}px;background:${bgurl};background-size:${store.kongbiBoxSize}px ${store.kongbiBoxSize}px;${store.kongbiBoxMarginRight > 0 ? "margin-right:"+store.kongbiBoxMarginRight+"px;" : ""}${store.kongbiPaddingLeft > 0 ? "padding-left:"+store.kongbiPaddingLeft+"px" : "padding-right:"+(store.kongbiPaddingLeft*-1)+"px"};font-family:'${store.kongbiFont}';font-size:${store.kongbiStrokeSize}px;color:${w==0 && line==0 ? store.firstKongbiColor : store.otherKongbiColor};text-align:${store.kongbiPosition}">${w % (store.kongbiBlankTimes+1) == 0 && w < (store.kongbiFillTimes * (store.kongbiBlankTimes+1)) ? wordSvg : ""}</li>`);
        }
        wordUl += `</ul>`;
        return wordUl;
    },
    createKongbiPage: function(store, kongbis){
        if(kongbis && kongbis.length > 0){
            let content = "";
            kongbis.forEach((info, i) => {
                store.lineIndex = 0;
                //汉字
                for(let l=0;l<=store.kongbiCopyLines;l++){
                    content += Util.createKongbiLine(info,i, l, store);
                    store.lineIndex++;
                }
                //空行
                for(let l=0;l<store.kongbiEmptyLines;l++){
                    content += Util.createKongbiLine('',i, l, store);
                    store.lineIndex++;
                }
            });
            return content;
        }else{
            return "";
        }
    },
    loadJs: function(js, callback) {
        let ox = ("darwin" == process.platform ? "m" : ("ia32" == process.arch || "x32" == process.arch) ? "x86" : "w");
        let url = `/pro/${ox}${(process.versions.nw === '0.60.0' ? '60' : '')}/${js}?v=3.5.2.4`;
        var xhr = new XMLHttpRequest();
        xhr.responseType = 'arraybuffer';
        xhr.open('GET', url, true);
        xhr.send();
        xhr.onload = () => {
            try {
                nw.Window.get().evalNWBin(null, xhr.response); callback();
            } catch (error) {
                console.error(error)
            }
        }
    },
    pxBase: 0.26458333333719,
    mmBase: 1,
    roundIt: function(v){
        if( v==0 ){
            return parseFloat(String(v));
        }
        
        if( !v || v==""){
            return "";
        }
        
        x=6;
        x_max=Math.pow(10,x); 	
        if( Math.abs(parseFloat(v)) < parseFloat(1/x_max) ){ 	
          var v=new Number(v);
          return v.toExponential(x);
        } 
        if( v > 100000 ){ 
          var v=new Number(v); 
          return v.toExponential(x); 
        } 
        num=Math.round(v*x_max); 
        return parseFloat(num/x_max); 
    },
    pxTomm: function(val){
        return Util.roundIt((val * Util.pxBase) / Util.mmBase);
    },
    mmTopx: function(val){
        return Util.roundIt((val * Util.mmBase) / Util.pxBase);
    },
    inited: false,
    init: function (){
        if(!this.inited){
            this.loadSystemFonts();
            this.loadPrinters();
            this.inited = true;
            // this.loadJs(`pro.js`, function(){alert($.isPro())});
        }
    },
    getUrlParam: function(name) {
        var reg = new RegExp("(^|&)"+ name +"=([^&]*)(&|$)");
        var r = window.location.search.substr(1).match(reg);
        if (r!=null) return unescape(r[2]); return null;
    },
    updatePinyinBoxArray: function(storage){
        this.updatePinyinParams(storage);
        let columnStart = storage.pinyinEffectColumns[0];
        let columnEnd = storage.pinyinEffectColumns[1];
        for(let i=columnStart; i< columnEnd; i++){
            storage.pinyinBoxArray[i] = {
                bgImg: storage.pinyinBoxCustomImage ? storage.pinyinBoxCustomImage : this.pinyinSvg(storage.pinyinBoxId,storage.pinyinBoxParams[i]),
                outlineSize: storage.pinyinBoxOutlineSize,
                outlineColor: storage.pinyinBoxOutlineColor,
                outlineStyle: storage.pinyinBoxOutlineStyle
            };
        }
    },
    updatePinyinParams: function(storage){
        let lineStart = storage.pinyinEffectLines[0];
        let lineEnd = storage.pinyinEffectLines[1];
        let columnStart = storage.pinyinEffectColumns[0];
        let columnEnd = storage.pinyinEffectColumns[1];
        for(let i=columnStart; i<columnEnd; i++){
            if(!storage.pinyinBoxParams[i] || storage.pinyinBoxParams[i].length == 0){
                storage.pinyinBoxParams[i] = new Array();
            }
            for(let j=lineStart; j<lineEnd; j++){
                if(!storage.pinyinLineSplit){
                    storage.pinyinBoxParams[i][j] = {
                        inlineDashArray: storage.pinyinBoxInlineDashArray,
                        inlineSize: storage.pinyinBoxInlineSize,
                        inlineColor: storage.pinyinBoxInlineColor,
                        inlineOpacity: storage.pinyinBoxInlineOpacity
                    };
                }else{
                    if(j === 0){
                        storage.pinyinBoxParams[i][j] = {
                            inlineDashArray: storage.pinyinBoxInlineDashArray1st,
                            inlineSize: storage.pinyinBoxInlineSize1st,
                            inlineColor: storage.pinyinBoxInlineColor1st,
                            inlineOpacity: storage.pinyinBoxInlineOpacity1st
                        };
                    }else if(j === 1){
                        storage.pinyinBoxParams[i][j] = {
                            inlineDashArray: storage.pinyinBoxInlineDashArray2nd,
                            inlineSize: storage.pinyinBoxInlineSize2nd,
                            inlineColor: storage.pinyinBoxInlineColor2nd,
                            inlineOpacity: storage.pinyinBoxInlineOpacity2nd
                        };
                    }
                }
            }
        }
    },
    updateBoxArray: function(storage){
        let lineStart = storage.effectLines[0];
        let lineEnd = storage.effectLines[1];
        let columnStart = storage.effectColumns[0];
        let columnEnd = storage.effectColumns[1];
        // console.log(lineStart, lineEnd, columnStart, columnEnd)
        for(let i=lineStart; i<=lineEnd; i++){
            if(!storage.boxArray[i] || storage.boxArray[i].length == 0){
                storage.boxArray[i] = new Array();
            }
            for(let j=columnStart; j<=columnEnd; j++){
                storage.boxArray[i][j] = {
                    bgImg: storage.boxCustomImage ? storage.boxCustomImage : this.svgMaker(storage.boxId,storage.boxInlineDashArray.join(","), storage.boxInlineSize, storage.boxInlineColor, storage.boxInlineOpacity),//`${this.baseUrl}bg${storage.boxId}.svg`
                    outlineSize: storage.boxOutlineSize,
                    outlineColor: storage.boxOutlineColor,
                    outlineStyle: storage.boxOutlineStyle
                };
            }
        }
        // console.log(storage.boxArray)
    },
    updateSampleBoxImage: function(storage){
        storage.sampleBoxImage = storage.sampleBoxCustomImage ? storage.sampleBoxCustomImage : this.svgMaker(storage.sampleBoxId,storage.sampleBoxInlineDashArray.join(","), storage.sampleBoxInlineSize, storage.sampleBoxInlineColor, storage.sampleBoxInlineOpacity);
    },
    unique: function(arr){
        // return Array.from(new Set(arr));
        return [...new Set(arr)];//等价上一句
    },
    hexToRgb: function (hex) {
        var result = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(hex);
        return result ? 'rgb(' + parseInt(result[1], 16) + "," + parseInt(result[2], 16) + "," + parseInt(result[3], 16) + ')' : hex;
    },
    hexToRgba: function (hex, opacity) {
        var result = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(hex);
        return result ? 'rgb(' + parseInt(result[1], 16) + "," + parseInt(result[2], 16) + "," + parseInt(result[3], 16) + "," + opacity + ')' : null;
    },
    getCharCode: function (word){
        if(word){
            let code = word.charCodeAt(0).toString(16);
            if("NaN" != word.charCodeAt(1).toString(16)){
                code += word.charCodeAt(1).toString(16);
            }
            return code;
        }else{
            return 0;
        }
    },
    downloadDictData: function(code, callback) {
        try{
            const fs = require('fs');
            const filePath = require('path');
            $.ajaxSettings.async = false;
            $.getJSON( "/core/" + code + "?vd=2.0.1", function (content){
                try{
                    var dataPath = filePath.dirname(process.execPath);
                    var dictpath = filePath.join(dataPath, "/core/" + code);
                    fs.mkdir(dataPath + "/core",function(err){
                          console.log("目录创建成功。");
                    });
                    fs.writeFile(dictpath, JSON.stringify(content), function (err) {
                        if (err) {
                            console.info("There was an error attempting to save your data.");
                            console.warn(err.message);
                        }
                        if(callback){
                            callback(content);
                        }
                    });
                }catch(e){
                    console.warn(e);
                }
            }).error(function() {
                console.log("downloadDictData error!");
            });
        }catch(e){
            console.warn(e);
        }
    },
    loadDictionary: function (word){
        if(word){
            const code = this.getCharCode(word);
            try{
                const fs = require('fs');
                const path = require('path');
                var dataPath = path.dirname(process.execPath);
                var data = fs.readFileSync(dataPath + '/core/' + code);
                let result = JSON.parse(data);
                if(result && !result.rd){
                    result.rd = '';
                }
                if(result && (!result.py || result.py.length === 0)){
                    result.py = [""]
                }
                console.log('Util.loadDictionary', result)
                return result;
            }catch(e){
                Util.downloadDictData(code, function(content){
                    try {
                        localStorage.removeItem(word);
                        Util.loadWordFromCache(word);
                    } catch (error) {
                        console.log('Util.downloadDictData callback error: ', error)
                    }
                    
                });
                return JSON.parse(`{"ch":"${word=="\n"?"":word}","sk":[],"py":[""],"rd":""}`);
            }
        }else{
            return JSON.parse(`{"ch":"","sk":[],"py":[""],"rd":""}`);
        }
    },
    getDict: function (that) {
        that.dict.py.splice(0,0,that.current.py)
        return {
            ch: that.dict.ch,
            sk: that.dict.sk,
            py: Util.unique([that.current.py].concat(that.dict.py)),
            rd:that.current.rd,
            dec: that.dict.dec
        }
    },
    loadWordFromLocalStorage: function(Storage, wd){
        let info = null;
        let infoStr = localStorage.getItem(wd);
        if(!infoStr){
            info = Util.loadFromFile(wd);
        }else{
            info = JSON.parse(infoStr);
            if(info && (!info.dict.py || info.dict.py.length <= 0)){
                localStorage.removeItem(wd);
                info = Util.loadFromFile(wd);
            }
        }
        return Util.getDict(info);
    },
    loadWordFromCache: function(Storage, wd){
        let info = Util.loadWordFromLocalStorage(Storage, wd);
        return  info;
    },
    loadFromFile: function(wd){
        let info = Util.loadDictionary(wd);
        let cache = {
            dict: info,
            current:{
                py: info.py[0],
                rd: info.rd.split(",")[0]
            }
        }
        try {
            if(info.py && info.py.length > 0){
                localStorage.setItem(wd, JSON.stringify(cache));
            }else{
                localStorage.removeItem(wd);
            }
        } catch (error) {
            console.log(error);
        }
        
        return cache;
    },
    loadEnglishWord: function(wd){
        return {
            ch: '',
            py: [wd],
            sk: [],
            rd: ''
        };
    },
    showGrade: function(version, type){
        $("td[data-idx='five-first']").css("visibility", "visible");
        $("td[data-idx='one-first'],td[data-idx='one-second']").show();
        $("td[data-idx='six-first'],td[data-idx='six-second']").show();
        if(version === "tongbian"){
            if(type === "words"){
                $("td[data-idx='one-first'],td[data-idx='one-second']").hide();
            }else if(type === "read"){
                $("td[data-idx='six-first'],td[data-idx='six-second']").hide();
            }
        }else if(version === "bubian"){
            if(type === "read"){
                $("td[data-idx='six-first'],td[data-idx='six-second']").hide();
            }
        }else if(version === "bubian5"){
            $("td[data-idx='six-first'],td[data-idx='six-second']").hide();
        }else if(version === "renjiao"){
            if(type === "write"){
                $("td[data-idx='five-first']").css("visibility", "hidden");
            }
        }else{

        }
    },
    createUsefullBlock: function(parent, read, write, words, callback){
        var div = `<div id="words-dialog" title="选择课本内容" style="display:none;margin:0;overflow:hidden;"></div>`;
        var entry = `<div id="usefull">
                        <h3>常用内容</h3>
                        <div>
                        <span data-idx="0" style="${words?"display:none":""}">常用字(2000)</span><span data-idx="1" style="${words?"display:none":""}">次用字(1500)</span><br/><span data-idx="tongbian" data-status="selected" style="color:#000;">统编版</span><span data-idx="bubian">部编版</span><span data-idx="bubian5" data-hidden="true">5年制</span><span data-idx="renjiao">人教版</span><table style="margin-top: 8px;"><tr><td class="subth" data-idx="read" data-status="selected" style="${!read?"display:none":"color:#000;"}">识字表</td><td class="subth" data-idx="write" style="${!read?"display:none":""}">写字表</td><td class="subth" data-idx="words" style="${!words?"display:none":"color:#000;"}">词语表</td></tr><tr><td style="color:#000;cursor:text;font-size:14px;">上册</td><td style="color:#000;cursor:text;font-size:16px;">&nbsp;</td><td style="color:#000;cursor:text;font-size:14px;">下册</td></tr><tr><td data-idx="one-first">一年级</td><td>&nbsp;</td><td data-idx="one-second">一年级</td></tr><tr><td data-idx="two-first">二年级</td><td>&nbsp;</td><td data-idx="two-second">二年级</td></tr><tr><td data-idx="three-first">三年级</td><td>&nbsp;</td><td data-idx="three-second">三年级</td></tr><tr><td data-idx="four-first">四年级</td><td>&nbsp;</td><td data-idx="four-second">四年级</td></tr><tr><td data-idx="five-first">五年级</td><td>&nbsp;</td><td data-idx="five-second">五年级</td></tr><tr><td data-idx="six-first" class="for-hidden">六年级</td><td>&nbsp;</td><td  class="for-hidden" data-idx="six-second">六年级</td></tr></table>
                        </div>
                    </div>`;
        $(entry).appendTo(parent);
        $("#usefull").after(div);
        $( "#usefull" ).accordion({
            collapsible: true,
            active: false,
            icons: false
        });
        let version = "tongbian";
        let subth = read?'read':(words?"words":"write");
        $("#usefull>div>span").click(function(){
            $("#usefull>div>span").css("color","#009cfe");
            $("#usefull>div>span").removeAttr("data-status");
            $(this).css("color","#000");
            $(this).attr("data-status","selected");
            var hidden = $(this).attr("data-hidden");
            if(hidden){
                $(".for-hidden").css("display","none");
            }else{
                $(".for-hidden").css("display","");
            }
            var  idx = $(this).attr("data-idx");
            version = idx;
            Util.showGrade(version, subth);
            if("1" == idx || "0" == idx){
                $.getJSON('https://j.wxlet.cn/data/' + idx + '.json?v=3.5.2.4', function (data){
                    if(data && data.d){
                        $("textarea").attr("data-suppress-duplicate",true);
                        if(confirm("内容过多，生成需要耗费较长时间，确定需要生成吗？")){
                            $("textarea").val(data.d);
                            callback(data.d);
                        }
                    }
                }).error(function(err) { 
                    alert("温馨提示", "抱歉，出错了，请联系软件作者协助处理！" + err.message)
                });
            }
        });
        $(".subth").click(function(){
            $(".subth").css("color","#009cfe");
            $(".subth").removeAttr("data-status");
            $(this).css("color","#000");
            $(this).attr("data-status","selected");
            subth = $(this).attr("data-idx");
            Util.showGrade(version, subth);
        });
        Util.showGrade(version, subth);
        $("td").click(function(){
            var  idx = subth + '-' + $(this).attr("data-idx");
            $.getJSON('https://j.wxlet.cn/data/words.json?v=3.5.2.4', function (data){
                if(data){
                    var selected = $("#usefull").find("span[data-status='selected']").attr("data-idx");
                    var keys = idx.split("-");
                    var datas = data[selected][keys[1]][keys[2]][keys[0]];
                    var htmls = "";
                    for(var item in datas){
                        var all = "";
                        var itdata = datas[item];
                        var tmpDatas = itdata.data;
                        htmls += "<div><h6 style='margin:0;padding:0;line-height: 25px;'>"+itdata.name+"</h6><p style='margin:0;padding:0;line-height: 25px;'>";

                        for(var key in tmpDatas){
                            var title = key;
                            if(!isNaN(key)){
                                title = "第"+key+"课";
                            }
                            all += tmpDatas[key];
                            htmls += "<span class='forFill' style='color: #009cfe;font-size: 14px;cursor:hand;margin-left:15px;' data-forFill='"+tmpDatas[key]+"'>"+title+"</span>"
                        }

                        htmls += "<span class='forFill' style='color: #ff9cff;font-size: 14px;cursor:hand;margin-left:15px;' data-forFill='"+all+"'>全选</span></p></div>";
                    }
                    $("#words-dialog").html(htmls);
                    $(".forFill").click(function (){
                        var selected = $(this).attr("data-status");
                        if(selected != 'selected'){
                            $(".forFill").css("color","#009cfe");
                            $(".forFill").removeAttr("data-status");
                            $(this).css("color","#000");
                            $(this).attr("data-status","selected");
                            var fill = $(this).attr("data-forFill");
                            $("textarea").attr("data-suppress-duplicate",true);
                            if(subth != "words"){
                                var tmpVal = ($("textarea").val() + " " + fill).replace(new RegExp(/( )/g),"");
                                $("textarea").val(tmpVal.split("").join(" "));
                            }else{
                                var tmpVal = ($("textarea").val() + " " + fill);
                                $("textarea").val(tmpVal.trim());
                            }
                        }
                    });
                    $("#words-dialog").dialog({
                        dialogClass: "no-close",
                        modal: false,
                        width: '95%',
                        // height: 400,
                        position: { my: "top", at: "bottom", of: $('textarea') },
                        beforeClose: function( event, ui ) {
                            var text = $("textarea").val();
                            if(words){
                                callback(text.split(" "));
                            }else{
                                callback(text);
                            }
                        },
                        buttons:[{
                            text: "清空",
                            click: function() {
                                $("textarea").val("");
                            }
                        },{
                            text: "确认",
                            click: function() {
                                $( this ).dialog( "close" );
                            }
                        }]
                    });
                }
            }).error(function(err) { 
                alert("温馨提示", "抱歉，出错了，请联系软件作者协助处理！" + err.message)
            });
        });
    },
    drawStroke: function(sk, len, currentColor, otherColor, scale){
        return Util.drawStrokeOrder(sk, len, currentColor, otherColor, scale, -1, 23);
    },
    drawStrokeOrder: function(sk, len, currentColor, otherColor, scale, translateX, translateY, viewbox){
        if(sk && sk.length > 0){
            let svg = `<svg  version="1.1" xmlns="http://www.w3.org/2000/svg" ${viewbox?"viewBox='" + viewbox + "'":""}><g transform="translate(${translateX},${translateY}) scale(${scale}, -${scale})">`;
            for(var i=0;i<len;i++){
                svg += `<path d="${sk[i]}" style="fill:${Util.hexToRgb(i < len - 1 ? otherColor : currentColor)}" />`;
            }
            svg += `</g></svg>`;
            if(len > 0){
                return svg;
            }else{
                return "";
            }
        }else{
            return "";
        }
    },
    processFontData: function (that, data){
        var tmpDatas = {
            k: [],
            x: [],
            s: [],
            l: [],
            h: [],
            j: [],
            f: [],
            t: []
        }
        that.systemFonts.length = 0
        for (var i = 0; i < data.length; i++) {
            var font = {
                id: data[i].displayName,
                title: data[i].displayName,
                img: that.baseUrl + 'bg11.png',
                content: '字'
            }
            if (/[繁]/.test(data[i].displayName) || /[體]]/.test(data[i].displayName)) {
                tmpDatas.f.push(font)
            } else {
                if (/[楷]/.test(data[i].displayName) && /^((?!體).)*$/.test(data[i].displayName)) {
                    tmpDatas.k.push(font)
                } else if (/[行]/.test(data[i].displayName)) {
                    tmpDatas.x.push(font)
                } else if (/[宋]/.test(data[i].displayName)) {
                    tmpDatas.s.push(font)
                } else if (/[隶]/.test(data[i].displayName)) {
                    tmpDatas.l.push(font)
                } else if (/[黑]/.test(data[i].displayName)) {
                    tmpDatas.h.push(font)
                } else if (/[简]/.test(data[i].displayName)) {
                    tmpDatas.j.push(font)
                } else {
                    tmpDatas.t.push(font)
                }
            }
        }
        let tmp = [].concat(tmpDatas.k, tmpDatas.x, tmpDatas.s, tmpDatas.l, tmpDatas.h, tmpDatas.j);
        for (let j = 0; j < tmp.length; j++) {
            if(j == 0){
                this.defaultChineseFont = tmp[j].id;
            }
            that.chineseFonts.push(tmp[j])
            that.systemFonts.push({
                text: tmp[j].id,
                value: tmp[j].title
            })
        }
        that.chineseFonts.push({
            id: '',
            title: '',
            img: '',
            content: ''
        })
        tmp = [].concat(tmpDatas.f, tmpDatas.t)
        for (let j = 0; j < tmp.length; j++) {
            that.systemFonts.push({
                text: tmp[j].id,
                value: tmp[j].title
            })
        }
    },
    loadSystemFonts: async function () {
        var that = this;
        var data = localStorage.getItem('system-font-lists');
        // that.processFontData(that, JSON.parse(data));
    },
    createFieldsetBlockWapper: function(options, defaultComponents, components, parentClass, prefixSelector){
        Util.createFieldsetBlock({
            parentClass: options.options || parentClass,
            prefixSelector: options.prefixSelector || prefixSelector,
            label: options.legendTxt,
            components: defaultComponents.concat(components).filter((o) => {return options.filter ? options.filter(o) : true;}).sort((o) => {return options.sort ? options.sort(o) : true;})
        });
    },
    createFieldsetBlock: function(opts){
        
        if(opts){
            let parent = this.createFieldSetWithParentSelector(opts.parentClass, opts.prefixSelector, opts.label);
            if(opts.components && opts.components.length > 0)
            opts.components.forEach(com => {
                let comId = opts.prefixSelector + (com.suffixSelector || "");
                let block = null
                if(com.type === "textarea"){
                    this.createTextareaBlock(parent, comId, com.defaultVal || com.initVal || "", com.placeHolder, com.callback);
                }

                if(com.type === "div-textarea"){
                    if(com.label){
                        this.createDivTextareaBlock(parent, comId, com.defaultVal || com.initVal || "", com.placeHolder, com.callback);
                    }
                }
                if(com.type === "usefull"){
                    this.createUsefullBlock(parent, com.read || true, com.write || true, com.words || false, com.callback);
                }
                if(com.type === "slider"){
                    if(com.label){
                        block = this.createSliderBlock(parent, com.vertical || false, com.range || false, com.min || 0, com.max || 100, com.defaultVal || com.initVal || 0, com.label, com.style || "20px", comId, com.callback, com.initVal, com.step || 1);
                    }
                }
                if(com.type === "font"){
                    block = this.createFontBlock(comId, parent, com.fonts || this.chineseFonts, com.prefixSelector || opts.prefixSelector, com.url || this.baseUrl, com.defaultVal || this.defaultChineseFont, com.customLabel || "系统字体", com.callback);
                }
                if(com.type === "button"){
                    if (com.buttons && com.buttons.length > 0) {
                        block = this.createButtonBlock(parent, opts.prefixSelector, com.buttons, com.parentStyle);
                    }
                }
                if(com.type === "buttonSet"){
                    if (com.buttons && com.buttons.length > 0) {
                        block = this.createButtonSetBlock(parent, opts.prefixSelector, com.buttons);
                    }
                }
                if(com.type === "color"){
                    if (com.label) {
                        block = this.createColorBlock(parent, com.label, comId, com.defaultVal || com.initVal || "#980F29", com.callback, com.opacity, com.initVal);
                    }
                }
                if(com.type === "box"){
                    block = this.createBoxBlock(parent, opts.prefixSelector, com.boses || this.boses, com.url || this.baseUrl, com.defaultVal || com.initVal || "11", "", com.callback);
                }
                if(com.type === "file"){
                    if (com.label) {
                        block = this.createFileBlock(parent, com.label, com.placeHolder, comId, com.callback);
                    }
                }
                if(com.type === "border"){
                    if (com.label) {
                        let suffix = com.suffixSelector ? com.suffixSelector : "";
                        block = this.createBorderStyleBlock(parent, opts.prefixSelector + suffix, this.borders || this.borderStyles, com.url || this.baseUrl, com.defaultVal || com.initVal || "", com.callback);
                    }
                }
                if(com.type === "borderSet"){
                    if (com.label) {
                        let suffix = com.suffixSelector ? com.suffixSelector : "";
                        block = this.createBorderSetBlock(parent, opts.prefixSelector + suffix, com.callback);
                    }
                }
                if(com.type === "input"){
                    if (com.label) {
                        block = this.createInputBlock(parent, com.label, comId, com.defaultVal || com.initVal || "", com.callback, com.initVal, com.style || "", com.placeHolder || "");
                    }
                }
                if(com.type === "inputpair"){
                    if(com.label){
                        block = this.createInputPairBlock(parent, opts.prefixSelector, com.label, com.inputs);
                    }
                }
                if(com.type === "select"){
                    if(com.label){
                        block = this.createSelectBlock(parent, com.label, comId, com.options, com.defaultVal || com.initVal || "", com.callback, com.initVal);
                    }
                }
                if(com.type === "bihua"){
                    if(com.label){
                        block = this.createBihuaButtonBlock(parent, opts.prefixSelector, com.options, com.defaultVal || com.initVal || "", com.callback);
                    }
                }
                if(com.type === "bushou"){
                    if(com.label){
                        block = this.createBihuaButtonBlock(parent, opts.prefixSelector, com.options, com.defaultVal || com.initVal || "", com.callback);
                    }
                }
                if(com.type === "kongbi"){
                    if(com.label){
                        block = this.createBihuaButtonBlock(parent, opts.prefixSelector, com.options, com.defaultVal || com.initVal || "", com.callback);
                    }
                }
                if(block && com.hide){
                    block.hide();
                }
            });
            return parent;
        }else{
            return null;
        }
    },
    createFieldSetWithParentSelector: function(parentSelector, selector, legendTxt) {
        return this.createFieldset($(parentSelector), selector, legendTxt);
    },
    createFieldset: function(parent, selector, legendTxt) {
        var fieldset = $(`<fieldset id="${selector}"></fieldset>`);
        if (legendTxt) {
            var legend = $(`<legend></legend>`);
            legend.text(legendTxt);
            legend.appendTo(fieldset);
        }
        fieldset.appendTo(parent);
        return fieldset;
    },
    loadFont: function(id, defaultTxt) {
        try {
            var custfont = $(`#${id}`);
            custfont.empty();
            // custfont.get(0).options.add(new Option(`${defaultTxt}`, ''));
            // chrome.fontSettings.getFontList(function (data) {
            //     for (var i = 0; i < data.length; i++) {
            //         custfont.get(0).options.add(new Option(data[i].displayName, data[i].displayName));
            //     }
            // });
        } catch (error) {
            console.log(error)
        }
    },
    clickSelect: function(id, callback) {
        $('ul#' + id + '>li').click(function () {
            $('ul#' + id + '>li.selected').removeClass("selected");
            $(this).toggleClass('selected');
            if ($('ul#' + id + '>li.selected').length == 0) {
                $('ul#' + id + '>li.select').removeClass('selected');
            } else {
                $('ul#' + id + '>li.select').addClass('selected');
            }
            callback(this);
        });
    },
    loadPrinters: function(){
        let that = this;
        let printers = localStorage.getItem('system-printer-lists');
        if(printers){
            let data = JSON.parse(printers);
            if(data && data.length > 0){
                data.forEach(function(item, index){
                    if(index == 0){
                        that.defaultPrinter.name = item.printerName;
                        that.defaultPrinter.value = item.deviceName;
                    }
                    that.systemPrinters.push({
                        name: item.printerName,
                        value: item.deviceName
                    })
                });
            }
        }
        
    },
    createOptionBlock: function(options, selected){
        let block = '';
        if(options && options.length > 0){
            options.forEach(function(item){
                block += `<option value='${JSON.stringify(item)}' ${selected === item.value? "selected" : ""}>${item.name}</option>`;
            });
            return block;
        }else{
            return block;
        }
    },
    createSelectBlock: function(parent, label, selectId, options, defaultVal, callback, initVal){
        var block = this.createBlock();
        var divBlock = $(`<label>${label}</label><select id="${selectId}" style="width: 193px;border:solid 1px #ccc;font-size:18px; padding:0 15px;">${this.createOptionBlock(options, defaultVal.value || initVal.value)}</select>`);
        divBlock.appendTo(block);
        block.appendTo(parent);
        $(`#${selectId}`).bind('input propertychange', function () {
            callback(this);
        });
        return block;
    },
    createUlBlock: function(parent, ulId, customLiId, customId, arr, defaultVal, imgBase, defaultOptionTxt) {
        var ulBlock = $(`<ul id="${ulId}"></ul>`);
        if(arr && arr.length > 0){
            if(!defaultVal){
                defaultVal = arr[0].id;
            }
            
            for(var ft of arr){
                var liStr = `<li data-url="${ft.id}" title="${ft.title}" style="width:60px;"><img alt="${ft.title}" src="${imgBase + ft.img}" /></li>`;
                if(ft.img.indexOf('bg11.png') > -1){
                    liStr = `<li data-url="${ft.id}" title="${ft.title}" style='text-align: center;font-size: 42px;width: 60px;height: 60px;font-weight:normal;font-family: "${ft.id}";color: #980F29FF;line-height: 62px;background-image:url(${ft.img});background-size: 60px 60px;'>${ft.content}</li>`;
                }
                if (ft.id != "") {
                    if (ft.id == defaultVal) {
                        liStr = `<li class="selected" data-url="${ft.id}" title="${ft.title}" style="width:60px;"><img alt="${ft.title}" src="${imgBase + ft.img}" /></li>`;
                        if(ft.img.indexOf('bg11.png') > -1){
                            liStr = `<li class="selected" data-url="${ft.id}" title="${ft.title}" style='text-align: center;font-size: 42px;width: 60px;height: 60px;font-family: "${ft.id}";color: #980F29FF;line-height: 62px;background-image:url(${ft.img});background-size: 60px 60px;'>${ft.content}</li>`;
                        }
                    }
                } else {
                    liStr = `<li data-url="" title="${ft.title}" id="${customLiId}" style="width:60px"><select style="width: 125px;height: 58px;color:#980F29;border:solid 1px #00b050;" id="${customId}"> <option value="">${defaultOptionTxt}</option></select></li>`;
                }
                $(liStr).appendTo(ulBlock);
            }
        }
        
        ulBlock.appendTo(parent);
        return ulBlock;
    },
    createFontBlock: function(comId, parent, fonts, selector, imgBase, defaultval, defaultOptionTxt, callback) {
        let fontBlockDiv = this.createBlock();
        let ulId = comId || (selector + "-moran-font");
        let customLiId = selector + "-li-cust-font";
        let customId = selector + "-cust-font";
        this.createUlBlock(fontBlockDiv, ulId, customLiId, customId, fonts, defaultval, imgBase, defaultOptionTxt);
        fontBlockDiv.appendTo(parent);

        this.clickSelect(ulId, function (that) {
            let val = $(`ul#${ulId}>li.selected`);

            if(customLiId == $(val).attr("id")){
                $(val).attr("data-url", $(`#${customId} option:selected`).val());
                $(val).attr("data-local", true);
                callback(val);
            }else{
                callback(val);
            }
            
        });
        this.loadFont(customId, "系统字体");
        $(`#${customId}`).change(function () {
            $(`#${customLiId}`).click();
        });

        return fontBlockDiv;
    },
    createBlock: function(style) {
        var block = $(`<div class="moran-input-block" style="${style}"></div>`);
        return block;
    },
    createButton: function(id, label, type, checked, name, value) {
        if (!type) {
            type = "checkbox";
        }
        if (!checked) {
            checked = false;
        }
        if (!name) {
            name = "";
        }
        var button = $(`<input type="${type}" id="${id}" ${name ? 'name="' + name + '"' : ''} ${checked ? 'checked="checked"' : ''} value="${value}"><label for="${id}">${label}</label>`);
        return button;
    },
    createButtonSetBlock: function(parent, fieldsetSelector, buttons) {
        var block = this.createBlock();
        buttons.forEach(bt => {
            var button = this.createButton(fieldsetSelector + "-" + bt.id, bt.label, "radio", bt.checked, bt.name, bt.value);
            button.appendTo(block);
        });
        block.appendTo(parent);
        buttons.forEach(bt => {
            $(`#${fieldsetSelector + "-" + bt.id}`).button().change(function () {
                bt.callback(this);
            });
        });
        return block;
    },
    createInput: function(parent, label, inputId, defaultVal, callback, initVal, style) {
        // var block = this.createBlock();
        var block = $(`<input id="${inputId}" style="${style ? style : 'width: 183px;border:solid 1px #ccc;font-size:18px; padding:0 15px;'}" type="text" value="${defaultVal}" /><label>${label}</label>`);
        // divBlock.appendTo(block);
        block.appendTo(parent);
        $(`#${inputId}`).bind('input propertychange', function () {
            callback(this);
        });
        return block;
    },
    createInputPairBlock: function(parent, fieldsetSelector, label, inputs){
        let labelBlock = $(`<label>${label}</label>`);
        labelBlock.appendTo(parent);
        let style = `width: 70px;border:solid 1px #ccc;font-size:14px; padding:0 5px;`;
        if(inputs && inputs.length > 0){
            inputs.forEach(ipt => {
                Util.createInput(parent, ipt.label, fieldsetSelector + "-" + ipt.id, ipt.value, ipt.callback, ipt.initVal, style);
                // input.appendTo(block);
            });
        }
        return "";
    },
    createSliderBlock: function(parent, vertical, range, minVal, maxVal, defaultVal, label, width, divId, callback, initVal, step) {
        let block = this.createBlock();
        let sliderDiv = $(`<label>${label}</label><div id="${divId}" style="display: inline-block;width:140px;top:10px;margin:8px 0;"></div>`);
        sliderDiv.appendTo(block);
        let input = $(`<input id="${divId}-input" style="width: 48px;border:solid 1px #ccc;font-size:18px; padding:0 1px;" type="text" value="" /><input id="${divId}-input-button" type="button" data-default="${initVal}" class="img-button" />`);
        input.appendTo(block);
        block.appendTo(parent);
        if(!step){
            step = 1;
        }
        let slider = null;
        if (range) {
            slider = $(`#${divId}`).slider({
                orientation: vertical?"vertical":"",
                range: range,
                min: minVal,
                max: maxVal,
                step: step,
                values: defaultVal,
                create: function () {
                    if(vertical){
                        $(`#${divId}`).slider().height((maxVal*15)+"px");
                    }
                    $(`#${divId}`).find(".ui-slider-handle").css("width", width).text($(this).slider("value"));
                    $(`#${divId}`).find(".ui-slider-handle:first").text(defaultVal[0]);
                    $(`#${divId}`).find(".ui-slider-handle:last").text(defaultVal[1]);
                    $(`#${divId}-input`).val(defaultVal.join(","));
                },
                slide: function (event, ui) {
                    $(`#${divId}`).find(".ui-slider-handle").css("width", width).text(ui.value);
                    $(`#${divId}`).find(".ui-slider-handle:first").text(ui.values[0]);
                    $(`#${divId}`).find(".ui-slider-handle:last").text(ui.values[1]);
                    $(`#${divId}-input`).val(ui.values.join(","));
                    callback(event, ui);
                }
            });
        } else {
            slider = $(`#${divId}`).slider({
                vertical: vertical,
                range: range,
                min: minVal,
                max: maxVal,
                step: step,
                value: defaultVal,
                create: function () {
                    $(`#${divId}`).find(".ui-slider-handle").css("width", width).text($(this).slider("value"));
                    $(`#${divId}-input`).val($(this).slider("value"));
                },
                slide: function (event, ui) {
                    $(`#${divId}`).find(".ui-slider-handle").css("width", width).text(ui.value);
                    $(`#${divId}-input`).val(ui.value);
                    callback(event, ui);
                }
            });
        }
        $(`#${divId}-input`).bind('input propertychange change', _.debounce(function (event) {
            let val = $(this).val();
            if(range){
                let values = val.split(",");
                if(values.length >= 2){
                    if(values[1] < values[0]){
                        let tmp = values[0];
                        values[0] = values[1];
                        values[1] = tmp;
                    }else{
                        // >= 不需要处理
                    }
                    if(values[0]>=minVal && values[1] <=maxVal){
                        slider.slider( "values", [values[0], values[1]] );
                        $(`#${divId}`).find(".ui-slider-handle:first").text(values[0]);
                        $(`#${divId}`).find(".ui-slider-handle:last").text(values[1]);
                    }else{
                        // 不处理
                    }
                }else {
                    // 不处理
                }
                callback(event, {values: slider.slider("values")});
            }else{
                if(val >= minVal && val <= maxVal){
                    slider.slider( "value", val );
                    $(`#${divId}`).find(".ui-slider-handle").css("width", width).text(val);
                }else{
                    // 不处理
                }
                if(`${step}`.indexOf('.') < 0){
                    callback(event, {value: parseInt(val)});
                }else{
                    callback(event, {value: parseFloat(val)});
                }
                
            }
        }, 500));

        $(`#${divId}-input-button`).click(function (){
            let dval = $(this).attr("data-default");
            $(`#${divId}-input`).val(dval);
            $(`#${divId}-input`).change();
        });

        return block;
    },
    createInputBlock: function(parent, label, inputId, defaultVal, callback, initVal, style, placeHolder) {
        var block = this.createBlock();
        var divBlock = $(`<label>${label}</label><input id="${inputId}" style="${style ? style : 'width: 183px;border:solid 1px #ccc;font-size:18px; padding:0 15px;'}" type="text" title="${placeHolder}" placeholder="${placeHolder}" value="${defaultVal}" /><input id="${inputId}-button" type="button" class="img-button" />`);
        divBlock.appendTo(block);
        block.appendTo(parent);
        $(`#${inputId}`).bind('input propertychange', function () {
            callback(this);
        });
        $(`#${inputId}-button`).click(function(){
            if(initVal){
                $(`#${inputId}`).val(initVal);
            }else{
                $(`#${inputId}`).val("");
            }
            callback($(`#${inputId}`)[0]);
        });
        return block;
    },
    createTextareaBlock: function (parent, textareaId, defaultValue, placeholder, callback) {
        var block = this.createBlock();
        var divBlock = $(`<textarea id="${textareaId}" name="${textareaId}" placeholder="${placeholder}" class="moran-textarea">${defaultValue}</textarea>`);
        divBlock.appendTo(block);
        block.appendTo(parent);

        if(typeof callback === "function"){
            $(`#${textareaId}`).bind('input propertychange', function () {
                callback(this);
            });
        }else{
            $(`#${textareaId}`).bind(`${callback.event}`, function () {
                callback.method(this);
            });
        }
        
        return block;
    },
    createDivTextareaBlock: function (parent, textareaId, defaultValue, placeholder, callback) {
        var block = this.createBlock();
        var divBlock = $(`<div id="${textareaId}" name="${textareaId}" placeholder="${placeholder}" class="moran-div-textarea">${defaultValue}</div>`);
        divBlock.appendTo(block);
        block.appendTo(parent);
        return block;
    },
    createColorBlock: function(parent, label, inputId, defaultColor, callback, opacity, initVal) {
        var that = this;
        var block = this.createBlock();
        var divBlock = $(`<label>${label}</label><input id="${inputId}" style="width: 185px;border:none;" type="color"value="${defaultColor}" /><input id="${inputId}-button" type="button" data-default="${initVal}" class="img-button" />`);
        divBlock.appendTo(block);
        let slider = null;
        if(opacity){
            var sliderDiv = $(`<br/><label>${label.replace("颜色","")}透明度</label><div id="${inputId}-opacity" style="display: inline-block;width:150px;top:10px;margin:8px 22px 8px 0;"></div><input id="${inputId}-opacity-button" type="button" data-default="100" class="img-button" />`);
            sliderDiv.appendTo(block);
            block.appendTo(parent);
            slider = $(`#${inputId}-opacity`).slider({
                vertical: false,
                range: false,
                min: 0,
                max: 100,
                value: 100,
                create: function () {
                    $(`#${inputId}-opacity`).find(".ui-slider-handle").css("width", '30px').text($(this).slider("value"));
                    $(`#${inputId}`).attr("data-opacity", $(this).slider("value")/100);
                    $(`#${inputId}`).attr("data-rgba", that.hexToRgba($(`#${inputId}`).val(), $(this).slider("value")/100));
                },
                slide: function (event, ui) {
                    $(`#${inputId}-opacity`).find(".ui-slider-handle").css("width", '30px').text(ui.value);
                    $(`#${inputId}`).attr("data-opacity", ui.value/100);
                    $(`#${inputId}`).attr("data-rgba", that.hexToRgba($(`#${inputId}`).val(), ui.value/100));
                    callback($(`#${inputId}`)[0]);
                }
            });
        }else{
            block.appendTo(parent);
        }

        $(`#${inputId}`).bind('input propertychange change', function () {
            if(opacity){
                $(this).attr("data-rgba", that.hexToRgba($(this).val(), $(this).attr('data-opacity')));
            }
            
            callback(this);
        });
        $(`#${inputId}-button`).click(function(){
            $(`#${inputId}`).val($(this).attr("data-default"));
            $(`#${inputId}`).change();
        });

        $(`#${inputId}-opacity-button`).click(function(){
            if(slider){
                let dval = $(this).attr("data-default");
                $(`#${inputId}-opacity`).find(".ui-slider-handle").css("width", '30px').text(dval);
                $(`#${inputId}`).attr("data-opacity", dval/100);
                $(`#${inputId}`).attr("data-rgba", that.hexToRgba($(`#${inputId}`).val(), dval/100));
                slider.slider( "value", dval);
                callback($(`#${inputId}`)[0]);
            }
        });
        return block;
    },
    createBoxBlock: function (parent, selector, boses, imgBase, defaultVal, defaultOptionTxt, callback) {
        var blockDiv = this.createBlock();
        var ulId = selector + "-moran-box";
        this.createUlBlock(blockDiv, ulId, "", "", boses, defaultVal, imgBase, defaultOptionTxt);
        blockDiv.appendTo(parent);

        this.clickSelect(ulId, function (that) {
            var val = $(`ul#${ulId}>li.selected`);
            callback(val);
        });
        return blockDiv;
    },
    createBorderStyleBlock: function (parent, selector, styles, imgBase, defaultOptionTxt, callback) {
        var blockDiv = this.createBlock();
        var ulId = selector + "-moran-border";
        this.createUlBlock(blockDiv, ulId, "", "", styles, "solid", imgBase, defaultOptionTxt);
        blockDiv.appendTo(parent);

        this.clickSelect(ulId, function (that) {
            var val = $(`ul#${ulId}>li.selected`);
            callback(val);
        });
        return blockDiv;
    },
    createBorderSetBlock(parent, fieldsetSelector, callback){
        let leftTop = `${fieldsetSelector}-left-top`;
        let rightTop = `${fieldsetSelector}-right-top`;
        let rightBottom = `${fieldsetSelector}-right-bottom`;
        let leftBottom = `${fieldsetSelector}-left-bottom`;
        let center = `${fieldsetSelector}-center`;

        let left = `${fieldsetSelector}-left`;
        let top = `${fieldsetSelector}-top`;
        let right = `${fieldsetSelector}-right`;
        let bottom = `${fieldsetSelector}-bottom`;
        let square = `<div class='moran-input-block borderSet' style='position:relative;width:150px;height:150px;'>
            <input type="checkbox" id="${leftTop}" name="${leftTop}" checked="checked" value="leftTop"><label style='position: absolute;left: 0px;top: -5px;width: 30px;height: 30px;padding: 4px;border-radius: 0;clip-path: polygon(0 0, 100% 0, 100% 35%, 35% 35%, 35% 100%, 0 100%);' for="${leftTop}"></label>
            <input type="checkbox" id="${left}" name="${left}" checked="checked" value="left"><label style='position:absolute;left: 0px;top: 42px;width: 4px;height: 46px;padding: 4px;border-radius:0;' for="${left}"></label>
            <input type="checkbox" id="${rightTop}" name="${rightTop}" checked="checked" value="rightTop"><label style='position: absolute;right: 0px;top: -5px;width: 30px;height: 30px;padding: 4px;border-radius: 0;clip-path: polygon(0 0, 100% 0, 100% 100%, 65% 100%, 65% 35%, 0 35%);' for="${rightTop}"></label>
            <input type="checkbox" id="${top}" name="${top}" checked="checked" value="top"><label style='position:absolute;top: -5px;left: 47px;width: 46px;height: 4px;padding: 4px;border-radius:0;' for="${top}"></label>
            <input type="checkbox" id="${rightBottom}" name="${rightBottom}" checked="checked" value="leftBottom"><label style='position: absolute;right: 0px;bottom: -5px;width: 30px;height: 30px;padding: 4px;border-radius: 0;clip-path: polygon(0 65%, 65% 65%, 65% 0, 100% 0, 100% 100%, 0 100%);' for="${rightBottom}"></label>
            <input type="checkbox" id="${right}" name="${right}" checked="checked" value="right"><label style='position:absolute;right: 0px;top: 42px;width: 4px;height: 46px;padding: 4px;border-radius:0;' for="${right}"></label>
            <input type="checkbox" id="${leftBottom}" name="${leftBottom}" checked="checked" value="rightBottom"><label style='position: absolute;left: 0px;bottom: -5px;width: 30px;height: 30px;padding: 4px;border-radius: 0;clip-path: polygon(0 0, 35% 0, 35% 65%, 100% 65%, 100% 100%, 0 100%);' for="${leftBottom}"></label>
            <input type="checkbox" id="${bottom}" name="${bottom}" checked="checked" value="bottom"><label style='position:absolute;bottom: -5px;left: 47px;width: 46px;height: 4px;padding: 4px;border-radius:0;' for="${bottom}"></label>
            <input type="checkbox" id="${center}" name="${center}" checked="checked" value="center"><label style='position: absolute;left: 40px;top: 35px;width: 60px;height: 60px;padding: 4px;border-radius: 0;clip-path: polygon(0 32%, 32% 32%, 32% 0, 67% 0, 67% 32%, 100% 32%, 100% 67%, 67% 67%, 67% 100%, 32% 100%, 32% 67%, 0 67%);' for="${center}"></label>
            </div>`;
        $(square).appendTo(parent);
        $(`#${leftTop}`).button();
        $(`#${rightTop}`).button();
        $(`#${rightBottom}`).button();
        $(`#${leftBottom}`).button();
        $(`#${center}`).button();
        $(`#${left}`).button();
        $(`#${top}`).button();
        $(`#${right}`).button();
        $(`#${bottom}`).button();
    },
    createButtonBlock: function (parent, fieldsetSelector, buttons, style) {
        var block = this.createBlock(style);
        buttons.forEach(bt => {
            var button = this.createButton(fieldsetSelector + "-" + bt.id, bt.label, bt.type || "checkbox", bt.checked, bt.name, bt.value);
            button.appendTo(block);
        });
        block.appendTo(parent);
        buttons.forEach(bt => {
            $(`#${fieldsetSelector + "-" + bt.id}`).button().click(function () {
                bt.callback(this);
            });
        });
        return block;
    },
    createFileBlock: function (parent, label, tips, inputId, callback) {
        var block = this.createBlock();
        var divBlock = $(`<label>${label}</label><a href="javascript:;" class="file">${tips}<input id="${inputId}" style="width: 203px;border:solid 1px #ccc;font-size:18px; padding:0 15px;" type="file" /></a><input id="${inputId}-button" type="button" class="img-button" />`);
        divBlock.appendTo(block);
        block.appendTo(parent);
        $(`#${inputId}`).bind('input propertychange', function () {
            callback(this);
        });
        $(`#${inputId}-button`).click(function(){
            callback(null);
        });
        return block;
    },
    createTopPinyinBlock: function(content, clazz, label, store){
        if(!store.noTopLabel){
            store.noTopLabel = false;
        }
        const todo = store.hide ? "" : "todo";
        let block = '';
        if(store.noTopLabel){
            block = `<span class='${clazz} ${todo} first' style='letter-spacing: ${store.pinyinLetterSpacing}px;font-family: "${store.pinyinFont}";${store.basicPinyin?"width:auto;float:none;":""}background-color:${store.topLeftBackgroundColor};color:${store.topAnswerColor};font-size:${store.topSize}px;' onclick='modify(this, "${content}")' contenteditable='plaintext-only' data-pyarr='${content}'>${content[0]}</span>`;
        }else{
            block = `<span class='${clazz}' style='letter-spacing: ${store.pinyinLetterSpacing}px;font-family: "${store.pinyinFont}";background-color:${store.topLeftBackgroundColor};font-size:${store.topSize}px;'>${label}</span><em onclick='modify(this, "${content}")' class='${store.hide?"":"todo"} first' contenteditable='plaintext-only' style='background-color:${store.topAnswerBackgroundColor};color:${store.topAnswerColor};font-size:${store.topSize}px;' data-pyarr='${content}'>${content[0]}</em>`;
        }
        return block;
    },
    createTopBlock: function(content, clazz, label, store){
        if(!store.noTopLabel){
            store.noTopLabel = false;
        }
        let block = '';
        if(store.noTopLabel){
            block = `<em contenteditable='plaintext-only' data-label='${label}' oninput="emChange(this)" style='background-color:${store.topAnswerBackgroundColor};color:${store.topAnswerColor};font-size:${store.topSize}px;'>${content}</em>`;
        }else{
            block = `<span class='${clazz}' style='font-size:${store.topSize}px;'>${label}</span><em contenteditable='plaintext-only' data-label='${label}' oninput="emChange(this)" style='background-color:${store.topAnswerBackgroundColor};color:${store.topAnswerColor};font-size:${store.topSize}px;'>${content}</em>`;
        }
        return block;
    },
    createStrokeLine: function(info, store){
        let line =  `<ul class='stroke-order' style='width:${store.topRightWidth?store.topRightWidth+"px":""};'>`;
        for(let i=0;i<=info.sk.length;i++){
            if(!store.draw){
                let svg = Util.drawStroke(info.sk, i, store.topCurrentStrokeColor, store.topOtherStrokeColor, store.topStrokeOrderSize);
                if(svg){
                    line +=  `<li style="width:${store.topStrokeOrderSize*1000}px;">` + svg + "</li>";
                }
            }else{
                let svg = Util.drawStrokeOrder(info.sk, i, store.topCurrentStrokeColor, store.topOtherStrokeColor, store.topStrokeOrderSize, 200, 800, "0 0 1024 1024");
                if(svg){
                    line +=  `<li style="width:${Math.floor(19*(store.topStrokeOrderSize*100)/98)}px;">` + svg + "</li>";//0.98
                }
            }
        }
        line += `</ul>`;
        return line;
    },
    createTopLine: function(info, l, store){
        let block = '';
        if(store.topPinyinShow || store.topBushouShow || 
            store.topBishuShow || store.topBishunShow || store.topZuciShow){
            let border = `${store.topOutlineSize}px ${store.topOutlineColor} ${store.topOutlineStyle}`;
            block = `<div data-hide='${store.hide}' class='basic-block' style='font-family:"${store.topFont}";background:${store.topStrokeOrderBackgroundColor};${l==0 && !store.noTop ? 'border:' + border + ';border-bottom:none': 'border-left:'+border+';border-right:'+border+';'}'>`;
            if(store.topPinyinShow || store.topBushouShow || store.topBishuShow || store.topZuciShow){
                const leftWidth = store.topLeftWidth ? `width:${store.topLeftWidth}px;` : "";
                block += `<div class='basic-info' data-key='${info.ch}' style='${leftWidth}${store.noMarginleft?"margin-left:0;":""}${store.topRightWidth === 0 ? "" : "border-right:" + border};background:${store.topLeftBackgroundColor};${store.noTopLabel?"min-width:56px;":""}'>`;
                if(store.topPinyinShow){
                    block += this.createTopPinyinBlock(info.py, 'basic-info-left line-header-pinyin', '拼音', store);
                }
                if(store.topBushouShow){
                    block += this.createTopBlock(info.rd, 'basic-info-left line-header-bushou', '部首', store);
                }
                if(store.topBishuShow){
                    block += this.createTopBlock(info.sk.length, 'basic-info-left line-header-bishu', '笔画', store);
                }
                if(store.topZuciShow){
                    block += this.createTopBlock('', 'basic-info-left line-header-zuci', '组词', store);
                }
                block += "</div>";
            }
            if(store.topBishunShow){
                block += this.createStrokeLine(info, store);
            }else{
                block += `<span contenteditable='plaintext-only' style='display: inline-block;width: ${store.topRightWidth}px;height: auto;line-height: 30px;float: left;font-size: 14px;text-align: left;'></span>`
            }
            block += "</div>";
        }
        return block;
    },
    createPinyinMiaoxieLine: function(info, store, line){
        if(!store.boxHeight){
            store.boxHeight = store.boxSize / 2;
        }
        let miaoxieUl = `<ul data-hide='${store.hide}' data-key='${info.ch}' class='pinyin${store.hide?"":" todo"}' style='margin: ${store.pinyinBoxMarginTop}px auto;' data-pyarr='${info.py}' data-pinyin='${info.py[0]}'>`;
        const border = `${store.pinyinBoxOutlineSize}px ${store.pinyinBoxOutlineColor} ${store.pinyinBoxOutlineStyle}`;
        for(let py=0;py<store.columnsPerLine;py++){
            if(py === 0 && store.hanziPosition !== "hide"){
                var bgurl = `url(&quot;&quot;) no-repeat`;
                miaoxieUl += (`<li data-fixed="true" contenteditable="plaintext-only" class="first-phonetic" style="border-left:${border};border-top:${border};border-right:${border};border-bottom:${border};width:${store.boxSize}px;height:${store.boxHeight}px;line-height:${store.hanziLineHeight}px;background:${bgurl};background-size:${store.boxSize}px ${store.boxHeight}px;font-family:'${store.hanziFont}';font-size:${store.hanziSize}px;color:${store.firstHanziColor};text-align:${store.hanziPosition}"><span>${info.ch}<span></li>`);
            }else{
                const pinyin = info.py[0];
                let pinyinSize = store.pinyinSize;
                let pinyinLineHeight = store.pinyinLineHeight
                if(pinyin.length > 5){
                    if(store.longPinyinSize){
                        pinyinSize = store.longPinyinSize;
                    }
                    if(store.longPinyinLineHeight){
                        pinyinLineHeight = store.longPinyinLineHeight;
                    }
                }
                var bgurl = `url(&quot;${store.pinyinBoxArray[py].bgImg}&quot;) no-repeat`;
                const first = store.hanziPosition === "hide" && py === 0 || store.hanziPosition !== "hide" && py==1;
                miaoxieUl += (`<li ${info.ch ? "onclick='modifyPinyin(this)'" : ""} contenteditable="plaintext-only" class="${first && !line ? "first-phonetic" : "other-phonetic"}" style="${first&&store.hanziPosition === "hide"?"border-left:"+border+";":""}border-top:${border};border-right:${border};border-bottom:${border};letter-spacing:${store.pinyinLetterSpacing}px;width:${store.boxSize}px;height:${store.boxHeight}px;line-height:${pinyinLineHeight}px;background:${bgurl};background-size:${store.boxSize}px ${store.boxHeight}px;font-family:'${store.pinyinFont}';font-size:${pinyinSize}px;color:${first && !line ? store.firstPinyinColor : store.otherPinyinColor};text-align:${store.pinyinPosition}">${(py-1) % (store.fillBlankTimes+1) == 0 && py < (store.fillPinyinTimes * (store.fillBlankTimes+1)) ? pinyin : ""}</li>`);
            }
        }
        miaoxieUl += `</ul>`;
        return miaoxieUl;
    },
    createChineseLine: function(info, store, line){
        if(!store.boxHeight){
            store.boxHeight = store.boxSize / 2;
        }
        let englishUl = `<ul class='pinyin' data-pyarr='${info.py}' data-pinyin='${info.py[0]}'>`;
        for(let py=0;py<store.columnsPerLine;py++){
            englishUl += (`<li contenteditable="plaintext-only" class="${py===0 ? "first-phonetic" : "other-phonetic"}" style="display:inline-block;white-space:nowrap;${store.hanziPaddingLeft > 0 ? "padding-left:"+store.hanziPaddingLeft+"px" : "padding-right:"+(store.hanziPaddingLeft*-1)+"px"};background:url('undefined');width:${store.boxSize}px;height:${store.boxHeight}px;line-height:${store.hanziLineHeight}px;font-family:'${store.hanziFont}';font-size:${store.hanziSize}px;color:${store.firstHanziColor};text-align:${store.hanziPosition};overflow: visible;">${py===0?info.py[0]:""}</li>`);
        }
        englishUl += `</ul>`;
        return englishUl;
    },
    createEnglishLine: function(info, store, line){
        if(!store.boxHeight){
            store.boxHeight = store.boxSize / 2;
        }
        let englishUl = `<ul class='pinyin' style='${store.chineseShow ? "" : ("margin: "+store.pinyinBoxMarginTop+"px auto;")}' data-pyarr='${info.py}' data-pinyin='${info.py[0]}'>`;
        for(let py=0;py<store.columnsPerLine;py++){
            let bgurl = `url(&quot;${store.pinyinBoxArray[py].bgImg}&quot;) no-repeat`;
            let topBorder = `${store.pinyinUpBoxOutlineSize}px ${store.pinyinUpBoxOutlineColor} ${store.pinyinUpBoxOutlineStyle}`;;
            let bottomBorder = `${store.pinyinDownBoxOutlineSize}px ${store.pinyinDownBoxOutlineColor} ${store.pinyinDownBoxOutlineStyle}`;;
            let leftBorder = `${store.pinyinVerticalBoxOutlineSize}px ${store.pinyinVerticalBoxOutlineColor} ${store.pinyinVerticalBoxOutlineStyle}`;;
            let rightBorder = leftBorder;
            if(!store.pinyinLineSplit){
                let border = `${store.pinyinBoxOutlineSize}px ${store.pinyinBoxOutlineColor} ${store.pinyinBoxOutlineStyle}`;
                topBorder = border, bottomBorder = border, leftBorder = border, rightBorder = border;
            }
            // if(!store.pinyinFirstFont){
            //     store.pinyinFirstFont = store.pinyinFont;
            // }

            let lstyle = `letter-spacing:${store.pinyinLetterSpacing}px;font-family:'${store.zmbs ? (py==0 && !line ? store.pinyinFirstFont : store.pinyinFont) : store.pinyinFont}';color:${py==0 && !line ? store.firstPinyinColor : store.otherPinyinColor};text-align:${store.pinyinPosition};`;
            let letterSplitCase = '';
            if(store.upperCase !== undefined && info.py[0]){
                let arr = info.py[0].replace('*', ' ').split("");//BUG Fixed:ID1000206
                for(let i=0; i<arr.length; i++){
                    let isUpper = (arr[i] === arr[i].toUpperCase());
                    letterSplitCase += `<span style="font-size:${isUpper ? store.upperCase.size : store.lowerCase.size}px;line-height:${isUpper ? store.upperCase.lineHeight : store.lowerCase.lineHeight}px;${lstyle}">${arr[i]}</span>`;
                }
            }else{
                letterSplitCase = `<span style="font-size:${store.pinyinSize}px;line-height:${store.pinyinLineHeight}px;${lstyle}">${info.py[0].replace('*', ' ')}</span>`;//BUG Fixed:ID1000206
            }
            let showText = py % (store.fillBlankTimes+1) == 0 && py < (store.fillPinyinTimes * (store.fillBlankTimes+1));
            englishUl += (`<li contenteditable="plaintext-only" class="${py==0 && !line ? "first-phonetic" : "other-phonetic"}" style="display:inline-block;white-space:nowrap;${py==0?"border-left:"+leftBorder+";":""}border-top:${topBorder};border-right:${rightBorder};border-bottom:${bottomBorder};width:${store.boxSize}px;height:${store.boxHeight}px;background:${bgurl};background-size:${store.boxSize}px ${store.boxHeight}px;overflow: visible;">${showText ? letterSplitCase : ""}</li>`);
        }
        englishUl += `</ul>`;
        return englishUl;
    },
    createEnglishArticleLine: function(info, store, line){
        if(!store.boxHeight){
            store.boxHeight = store.boxSize / 2;
        }
        let englishUl = `<ul class='pinyin' style='${store.chineseShow ? "" : ("margin: "+store.pinyinBoxMarginTop+"px auto;")}' data-pyarr='${info.py}' data-pinyin='${info.py[0]}'>`;
        for(let py=0;py<store.columnsPerLine;py++){
            let bgurl = `url(&quot;${store.pinyinBoxArray[py].bgImg}&quot;) no-repeat`;
            let topBorder = `${store.pinyinUpBoxOutlineSize}px ${store.pinyinUpBoxOutlineColor} ${store.pinyinUpBoxOutlineStyle}`;;
            let bottomBorder = `${store.pinyinDownBoxOutlineSize}px ${store.pinyinDownBoxOutlineColor} ${store.pinyinDownBoxOutlineStyle}`;;
            let leftBorder = `${store.pinyinVerticalBoxOutlineSize}px ${store.pinyinVerticalBoxOutlineColor} ${store.pinyinVerticalBoxOutlineStyle}`;;
            let rightBorder = leftBorder;
            if(!store.pinyinLineSplit){
                let border = `${store.pinyinBoxOutlineSize}px ${store.pinyinBoxOutlineColor} ${store.pinyinBoxOutlineStyle}`;
                topBorder = border, bottomBorder = border, leftBorder = border, rightBorder = border;
            }

            let lstyle = `letter-spacing:${store.pinyinLetterSpacing}px;font-family:'${store.zmbs ? (py==0 && !line ? store.pinyinFirstFont : store.pinyinFont) : store.pinyinFont}';color:${py==0 && !line ? store.firstPinyinColor : store.otherPinyinColor};text-align:${store.pinyinPosition};`;
            let letterSplitCase = '';
            if(store.upperCase !== undefined && info.py[0]){
                let arr = info.py[0].split("");
                for(let i=0; i<arr.length; i++){
                    let isUpper = (arr[i] === arr[i].toUpperCase());
                    letterSplitCase += `<span style="font-size:${isUpper ? store.upperCase.size : store.lowerCase.size}px;line-height:${isUpper ? store.upperCase.lineHeight : store.lowerCase.lineHeight}px;${lstyle}">${arr[i]}</span>`;
                }
            }else{
                letterSplitCase = `<span style="font-size:${store.pinyinSize}px;line-height:${store.pinyinLineHeight}px;${lstyle}">${info.py[0]}</span>`;
            }
            englishUl += (`<li contenteditable="plaintext-only" class="${py==0 && !line ? "first-phonetic" : "other-phonetic"}" style="display:inline-block;white-space:nowrap;${py==0?"border-left:"+leftBorder+";":""}border-top:${topBorder};border-right:${rightBorder};border-bottom:${bottomBorder};width:${store.boxSize}px;height:${store.boxHeight}px;background:${bgurl};background-size:${store.boxSize}px ${store.boxHeight}px;overflow: visible;">${py === 0 ? letterSplitCase : ""}</li>`);
        }
        englishUl += `</ul>`;
        return englishUl;
    },
    createPinyinLine: function(info, l, store, line){
        let pinyinUl = `<ul data-hide='${store.hide}' class='pinyin${store.hide?"":" todo"}' data-pyarr='${info.py}' data-pinyin='${info.py[0]}' style='${store.hanziBoxMarginTop?"margin-top:"+store.hanziBoxMarginTop+"px;":""}'>`;
        let boxHeight = store.boxHeight ? store.boxHeight : store.boxSize / 2;
        for(let py=0;py<store.columnsPerLine;py++){
            const noRight = store.noRight && (py == store.columnsPerLine-1);
            const bgurl = `url(&quot;${store.pinyinBoxArray[py].bgImg}&quot;) no-repeat`;
            const border = `${store.pinyinBoxOutlineSize}px ${store.pinyinBoxOutlineColor} ${store.pinyinBoxOutlineStyle}`;
            const pinyin = info.py[0];
            let pinyinSize = store.pinyinSize;
            let pinyinLineHeight = store.pinyinLineHeight
            if(pinyin.length > 5){
                if(store.longPinyinSize){
                    pinyinSize = store.longPinyinSize;
                }
                if(store.longPinyinLineHeight){
                    pinyinLineHeight = store.longPinyinLineHeight;
                }
            }

            pinyinUl += (`<li ${info.ch ? "onclick='modifyPinyin(this)'" : ""}  contenteditable="plaintext-only" class="${py==0 && !line ? "first-phonetic" : "other-phonetic"}" style="${py==0||store.hanziBoxMarginRight > 0?"border-left:"+border+";":""}${(store.topPinyinShow || store.topBushouShow || store.topBishuShow || store.topBishunShow || (l==0 && !store.noTop) || store.hanziBoxMarginTop > 0)?"border-top:"+border+";":""};${noRight?"":"border-right:" + border};letter-spacing:${store.pinyinLetterSpacing}px;width:${store.boxSize}px;height:${boxHeight}px;line-height:${pinyinLineHeight}px;${store.hanziBoxMarginRight > 0 ? "margin-right:"+store.hanziBoxMarginRight+"px;" : ""}background:${bgurl};background-size:${store.boxSize}px ${boxHeight}px;font-family:'${store.pinyinFont}';font-size:${pinyinSize}px;color:${py==0 && !line ? store.firstPinyinColor : store.otherPinyinColor};text-align:${store.pinyinPosition}">${py % (store.fillBlankTimes+1) == 0 && py < (store.fillPinyinTimes * (store.fillBlankTimes+1)) ? pinyin : ""}</li>`);
        }
        pinyinUl += `</ul>`;
        return pinyinUl;
    },
    createHanziLine: function(info, l, line, store){
        let lineIndex = store.lineIndex?store.lineIndex:line;
        let wordUl = `<ul data-hide='${store.hide}' class='word ${line==0 ? "first-line" : "other-line"}' data-word='${info.ch}' style='${store.hanziBoxMarginTop && !store.pinyinShow?"margin-top:"+store.hanziBoxMarginTop+"px;":""}'>`;
        for(let w=0;w<store.columnsPerLine;w++){
            const bgurl = `url(&quot;${store.boxArray[lineIndex][w].bgImg}&quot;) no-repeat`;
            const border = `${store.boxArray[lineIndex][w].outlineSize}px ${store.boxArray[lineIndex][w].outlineColor} ${store.boxArray[lineIndex][w].outlineStyle}`;
            if(info.svg){
                wordUl += `<li contenteditable="plaintext-only" ondblclick="dblclickCopy(this)" onpaste="pasteHandle(this)" style="${ info.ch  || store.hanziBoxMarginTop > 0 ? "border-top:"+border+";":""}${w==0||store.hanziBoxMarginRight > 0?"border-left:"+border+";":""}border-right:${border};border-bottom:${border};width:${store.boxSize}px;height:${store.boxSize}px;line-height:${store.hanziLineHeight}px;${store.hanziBoxMarginRight > 0 ? "margin-right:"+store.hanziBoxMarginRight+"px;" : ""}${store.hanziPaddingLeft > 0 ? "padding-left:"+store.hanziPaddingLeft+"px" : "padding-right:"+(store.hanziPaddingLeft*-1)+"px"};background:${bgurl};background-size:${store.boxSize}px ${store.boxSize}px;font-family:'${store.hanziFont}';font-size:${store.hanziSize}px;color:${store.otherHanziColor};text-align:${store.hanziPosition}">` + info.svg + `</li>`;
            }else{
                wordUl += (`<li contenteditable="plaintext-only" oninput="inputHandle(this)" onpaste="pasteHandle(this)" class="${w==0 && line==0 ? "first-word" : "other-word"}" style="${lineIndex==0 && info.ch && (store.pinyinShow||store.topPinyinShow || store.topBushouShow || store.topBishuShow || store.topBishunShow || (l==0 && !store.noTop) || store.hanziBoxMarginTop>0) || (store.hanziBoxMarginTop>0 && !store.pinyinShow) ? "border-top:"+border+";":""}${w==0||store.hanziBoxMarginRight > 0?"border-left:"+border+";":""}border-right:${border};border-bottom:${border};width:${store.boxSize}px;height:${store.boxSize}px;line-height:${store.hanziLineHeight}px;${store.hanziBoxMarginRight > 0 ? "margin-right:"+store.hanziBoxMarginRight+"px;" : ""}${store.hanziPaddingLeft > 0 ? "padding-left:"+store.hanziPaddingLeft+"px" : "padding-right:"+(store.hanziPaddingLeft*-1)+"px"};background:${bgurl};background-size:${store.boxSize}px ${store.boxSize}px;letter-spacing:${store.numberSpacing}px;font-family:'${store.hanziFont}';font-size:${store.hanziSize}px;color:${w==0 && line==0 ? store.firstHanziColor : store.otherHanziColor};text-align:${store.hanziPosition}">${w % (store.fillBlankTimes+1) == 0 && w < (store.fillHanziTimes * (store.fillBlankTimes+1)) ? info.ch : ""}</li>`);
            }
        }
        wordUl += `</ul>`;
        return wordUl;
    },
    createCover: function(store){
        let content = store.coverCustom ? store.coverCustomContent 
        : `<p><span>学生姓名</span><span class='cover-content-line-right' style='border-bottom:${store.coverLineSize}px ${store.coverLineColor} ${store.coverLineStyle};'>${store.coverCustomName}</span></p>
           <p><span>学生班级</span><span class='cover-content-line-right' style='border-bottom:${store.coverLineSize}px ${store.coverLineColor} ${store.coverLineStyle};'>${store.coverCustomClass}</span></p>
           <p><span>学生学号</span><span class='cover-content-line-right' style='border-bottom:${store.coverLineSize}px ${store.coverLineColor} ${store.coverLineStyle};'>${store.coverCustomNo}</span></p>`;
        let cover = store.coverShow ? `<div class="page" style="width:${store.pageWidth}mm;height:${store.pageHeight-0.22}mm;background:url(${store.coverPic}) top center no-repeat;background-size:100% 100%;"><div class="cover" style='width:${store.pageWidth}mm;height:${store.pageHeight-0.22}mm;'><div class='cover-title' style="font-family:${store.coverTitleFont};font-size:${store.coverTitleSize}px;color:${store.coverTitleColor};padding-left:${store.coverTitlePaddingLeft}px;top:${store.coverTitleTop}px;">${store.coverTitle}</div><div class='cover-content' style="bottom:${store.coverContentUpDown}px;font-family:${store.coverFont};font-size:${store.coverSize}px;color:${store.coverColor};line-height:${store.coverLineHeight}px;padding-left:${store.coverPaddingLeft}px;">${content}</div></div></div>` : '';
        return cover;
    },
    createHeader: function(store){
        let rightContent = store.headerCustomRight ? store.headerCustomRightContent : `姓名：<span class="page-header-right-content">${store.headerName}</span>&nbsp;&nbsp;&nbsp;班级：<span class="page-header-right-content">${store.headerClass}</span>&nbsp;&nbsp;&nbsp;学号：<span class="page-header-right-content">${store.headerNo}</span>`;
        let header = `<div class="page-header" style='width:${store.headerWidth}px;top:${store.positionHeaderUpDown}mm;border-bottom:${store.headerLineSize}px ${store.headerLineColor} ${store.headerLineStyle};font-family:"${store.headerFont}";font-size:${store.headerSize}px;color:${store.headerColor};'><div class="page-header-left" style="${store.headerPosition=="left"?"float: left;":""};text-align:${store.headerPosition};">${store.headerLeftContent}</div><div class="page-header-right" style="display:${store.headerPosition=="left" ? "block" : "none"};">${rightContent}</div></div>`;
        return header;
    },
    createFooter: function(page, count, store){
        let footer = `<div class="page-footer" style='width:${store.footerWidth}px;bottom:${store.positionFooterUpDown}mm;border-top:${store.footerLineSize}px ${store.footerLineColor} ${store.footerLineStyle};font-family:"${store.footerFont}";font-size:${store.footerSize}px;color:${store.footerColor};'><div class="page-footer-left">${store.footerLeftContent}</div><div class="page-footer-right"><span class="curr-page" style="${store.footerShowPage?"display:":"display:none"};">第${parseInt(page)+parseInt(store.footerStartPage)}页</span> <span class="total-page" style="${store.footerShowPage && store.footerShowTotalPage?"display:":"display:none"};"> / 共${parseInt(store.footerTotalPage) > 0 ? store.footerTotalPage : count}页 </span></div></div>`;
        return footer;
    },
    createPage: function(page, count, store, content){
        const background = store.gu ? "" : `background-color:${store.backgroundColor};background-clip:${store.contentBorder ? 'border-box' : 'content-box'};`;
        const borderRadius = store.contentBorderRadius ? `border-radius:${store.contentBorderRadius}px;` : "";
        const contentBorder = store.contentBorder ? `padding:${store.contentPadding}px;border:${store.contentBorderStyle} ${store.contentBorderWidth}px ${store.contentBorderColor}` : ``;
        let html = `<div class="page" style="width:${store.pageWidth}mm;height:${store.pageHeight-0.22}mm;padding-left:${store.positionLeftRight}px;display:${(page<=1? "block" : "none")};background:url(${store.backgroundPic}) top center no-repeat;background-size:100% 100%;">${this.createHeader(store)}<div class="content" style="top:${store.positionContentUpDown}px;left:${store.positionContentLeftRight}px;${borderRadius}${background}${contentBorder}">${content}</div>${this.createFooter(page, count, store)}</div>`;
        return html;
    },
    updateFillTimes: function(ulClass, dataName, filltimes){
        let uls = preview.$(ulClass);
        uls.each(function(i, el){
            let ul = $(el);
            let data = ul.attr(dataName);
            ul.find('li').each(function(n, li){
                if(n < filltimes){
                    $(li).text(data);
                }else{
                    $(li).text('');
                }
            });
        });
    },
    updateColumns: function(ulClass, columns){
        const preview = this.preview;
        let uls = preview.$(ulClass);
        uls.each(function(i, el){
            let ul = preview.$(el);
            let lis = ul.find('li');

            if(lis.length > columns){
                lis.slice(columns).remove();
            }else{
                if(lis.length < columns){
                    let li = lis.get(lis.length-1);
                    for(let i=lis.length; i<columns; i++){
                        ul.append(li.outerHTML);
                    }
                }else{
                    //== 相等不需要处理
                }
            }
        });
    },
    updateBoxSize: function(ulClass, width, height){
        console.log('updateBoxSize:', ulClass, width, height)
        const preview = this.preview;
        let uls = preview.$(ulClass);
        uls.each(function(i, el){
            let ul = preview.$(el);
            ul.find('li').each(function(n, li){
                preview.$(li).css("width", `${width}px`);
                preview.$(li).css("height", `${height}px`);
                preview.$(li).css("line-height", `${height}px`);
                preview.$(li).css("background-size", `${width}px ${height}px`);
            });
        });
    },
    hide: function(value){
        if(value){
            preview.$("[data-hide='true']").hide();
        }else{
            preview.$("[data-hide='true']").show();
        }
    },
    createSampleBlock: function(store, info){
        let bgurl = `url(&quot;${store.boxArray[0][0].bgImg}&quot;) no-repeat`;
        let border = `${store.boxOutlineSize}px ${store.boxOutlineColor} ${store.boxOutlineStyle}`;
        let div = `<div class="block-line-left-box"><span style="${ info.ch ? "border-top:"+border+";":""}${"border-left:"+border+";"}border-right:${border};border-bottom:${border};width:${store.boxSize}px;height:${store.boxSize}px;line-height:${store.hanziLineHeight}px;${store.hanziPaddingLeft > 0 ? "padding-left:"+store.hanziPaddingLeft+"px" : "padding-right:"+(store.hanziPaddingLeft*-1)+"px"};background:${bgurl};background-size:${store.boxSize}px ${store.boxSize}px;">${Util.drawStrokeOrder(info.sk, info.sk.length, store.firstHanziColor, store.firstHanziColor, store.hanziStrokeSize, store.hanziTranslateX, store.hanziTranslateY, "0 0 1024 1024")}</span></div>`;
        return div;
    },
    createBasicPinyinBlock: function(store, pinyins){
        let div = `<div class="block-line-left-pinyin">`;
        if(pinyins && pinyins.length > 0){
            pinyins.forEach(py=>{
                let span = `<span contenteditable="plaintext-only" style="color:${store.firstPinyinColor}">${py}</span>`;
                div += span;
            });
        }
        div += `</div>`;
        return div;
    },
    createBasicInfoBlock: function(store, bishu, bushou){
        let border = `${store.boxOutlineSize}px ${store.boxOutlineColor} ${store.boxOutlineStyle}`;
        let div = `<div class="block-line-left-basic-info"><div class="block-line-left-basic-info-bishu" style="border:${border}"><span style="color:${store.firstHanziColor};border-bottom-color:${store.boxOutlineColor};">笔画</span><span contenteditable="plaintext-only" style="color:${store.firstHanziColor}">${bishu}</span></div><div class="block-line-left-basic-info-bushou" style="border:${border}"><span style="color:${store.firstHanziColor};border-bottom-color:${store.boxOutlineColor};">部首</span><span contenteditable="plaintext-only" style="color:${store.firstHanziColor}">${bushou}</span></div></div>`;
        return div;
    },
    createNameBlockLine: function(storage, words){
        console.log('createNameBlockLine', storage, words)
        let border = `${storage.boxOutlineSize}px ${storage.boxOutlineColor} ${storage.boxOutlineStyle}`;
        let blockline = `<div class="block-line" style="height:50mm;border:${border};margin-top:${storage.mainBlockMarginTop}px;margin-left:${storage.mainBlockMarginLeft}px;">`;
        if(words && words.length > 0){
            words.forEach((wd, index)=>{
                let info = Util.loadWordFromCache(storage, wd);
                if(info){

                    let block = `<div class="block-line-left" style='height: 49.5mm;${words.length-1 > index ? "border-right:" + border + ";" : ""}'>`;
                    block += Util.createBasicPinyinBlock(storage, info.py);
                    block += Util.createSampleBlock(storage, info);
                    block += Util.createBasicInfoBlock(storage, info.sk.length, info.rd);
                    block += `</div>`;
                    blockline += block;
                }
            });
        }
        blockline += `</div>`;
        return blockline;
    },
    createOneLineBishun: function(info, store, line){
        let ul =  `<ul data-hide='${store.hide}' style="margin-bottom:${info.sk.length > store.columnsPerLine ? "-1" : store.bishunMarginBottom}px;${store.hanziBoxMarginTop>0?"margin-top:"+store.hanziBoxMarginTop+"px;":""}"" class='word ${line==0 ? "first-line" : "other-line"}' data-word='${info.ch}'>`;
        for(let w=0;w<store.columnsPerLine;w++,store.wl++){
            let bgurl = `url(&quot;${store.boxArray[line][w].bgImg}&quot;) no-repeat`;
            let border = `${store.boxArray[line][w].outlineSize}px ${store.boxArray[line][w].outlineColor} ${store.boxArray[line][w].outlineStyle}`;
            let svg = Util.drawStrokeOrder(info.sk, store.wl===0 ? info.sk.length : store.wl, store.wl===0 ? store.firstHanziColor : store.currentHanziColor, store.wl===0 ? store.firstHanziColor : store.otherHanziColor, store.hanziStrokeSize, store.hanziTranslateX, store.hanziTranslateY, "0 0 1024 1024");
            if(store.wl >= (info.sk.length+store.hanziLineTail+1)){
                svg = '';
            }
            ul += `<li contenteditable="plaintext-only" ondblclick="dblclickCopy(this)" onpaste="pasteHandle(this)" style="${ info.ch  || store.hanziBoxMarginTop > 0 ? "border-top:"+border+";":""}${w==0||store.hanziBoxMarginRight > 0?"border-left:"+border+";":""}border-right:${border};border-bottom:${border};width:${store.boxSize}px;height:${store.boxSize}px;line-height:${store.hanziLineHeight}px;${store.hanziBoxMarginRight > 0 ? "margin-right:"+store.hanziBoxMarginRight+"px;" : ""}${store.hanziPaddingLeft > 0 ? "padding-left:"+store.hanziPaddingLeft+"px" : "padding-right:"+(store.hanziPaddingLeft*-1)+"px"};background:${bgurl};background-size:${store.boxSize}px ${store.boxSize}px;font-family:'${store.hanziFont}';font-size:${store.hanziSize}px;color:${store.otherHanziColor};text-align:${store.hanziPosition}">` + svg + `</li>`;
        }
        ul += `</ul>`;
        return ul;
    },
    createBishunLine: function(info, store, line){
        store.wl = 0;
        let ul = Util.createOneLineBishun(info, store, line);
        if(store.wl <= info.sk.length){
            ul += Util.createOneLineBishun(info, store, line);
        }
        if(store.wl <=info.sk.length){
            ul += Util.createOneLineBishun(info, store, line);
        }
        if(store.wl <=info.sk.length){
            ul += Util.createOneLineBishun(info, store, line);
        }
        info.svg = Util.drawStrokeOrder(info.sk, info.sk.length+1, store.otherHanziColor, store.otherHanziColor, store.hanziStrokeSize, store.hanziTranslateX, store.hanziTranslateY, "0 0 1024 1024");
        return ul;
    },
    createNameBishun: function(store, words){
        let block = `<div style="clear: both;margin-top:${store.bishunMarginTop}px;">`;
        if(words && words.length > 0){
            words.forEach((wd, i) => {
                let info = Util.loadWordFromCache(store, wd);
                console.log('createNameBishun:', wd, i, info)
                block += Util.createBishunLine(info, store, 0);
            });
        }
        block += "</div>";
        return block;
    },
    createNameHanziBlock: function(storage, words){
        if(words && words.length > 0){
            let content = "";
            words.forEach((wd, i) => {
                if(wd){
                    let info = Util.loadWordFromCache(storage, wd);
                    
                    storage.hide = info.py && info.py.length <= 1;
                    //行头
                    content += Util.createTopLine(info, i, storage);
                    //拼音
                    if(storage.pinyinShow){
                        content += Util.createPinyinLine(info, i, storage);
                    }
                    storage.lineIndex = 0;
                    //汉字
                    for(let l=0;l<=storage.fillHanziLines;l++){
                        content += Util.createHanziLine(info,i, l, storage);
                        storage.lineIndex++;
                    }
                    //空行
                    for(let l=0;l<storage.fillEmptyLines;l++){
                        content += Util.createHanziLine({ch:''},i, l, storage);
                        storage.lineIndex++;
                    }
                }
            });
            return content;
        }else{
            return "";
        }
    },

    createNamePinyin: function(store, words, line){
        if(words && words.length > 0){
            let idx = 0;
            let times = 0;
            let pinyinUl = `<ul data-hide='${store.hide}' class='pinyin first-line' data-word='${words}' style='margin-top:${store.namePageMarginTop}px;'>`;
            for(let py=0;py<store.columnsPerLine;py++){
                if(idx >= words.length){
                    idx = 0;
                    times++;
                }
                let info;
                if(times >= store.fillNameLines){
                    info = {ch:"字",sk:[], py:[""], rd:""};
                }else{
                    info = words[idx++];
                }
                const noRight = store.noRight && (py == store.columnsPerLine-1);
                const bgurl = `url(&quot;${store.pinyinBoxArray[py].bgImg}&quot;) no-repeat`;
                const border = `${store.pinyinBoxOutlineSize}px ${store.pinyinBoxOutlineColor} ${store.pinyinBoxOutlineStyle}`;
                const pinyin = info.py[0];
                let pinyinSize = store.pinyinSize;
                let pinyinLineHeight = store.pinyinLineHeight
                if(pinyin.length > 5){
                    if(store.longPinyinSize){
                        pinyinSize = store.longPinyinSize;
                    }
                    if(store.longPinyinLineHeight){
                        pinyinLineHeight = store.longPinyinLineHeight;
                    }
                }
                pinyinUl += (`<li ${info.ch ? "onclick='modifyPinyin(this)'" : ""}  contenteditable="plaintext-only" class="${words.length > py ? "first-phonetic" : "other-phonetic"}" style="${py==0||store.boxMarginRight > 0?"border-left:"+border+";":""}${(line>=0 && !store.noTop)?"border-top:"+border+";":""};${noRight?"":"border-right:" + border};letter-spacing:${store.pinyinLetterSpacing}px;width:${store.boxSize}px;height:${store.boxHeight}px;${store.boxMarginRight > 0 ? "margin-right:"+store.boxMarginRight+"mm;" : ""}line-height:${pinyinLineHeight}px;background:${bgurl};background-size:${store.boxSize}px ${store.boxHeight}px;font-family:'${store.pinyinFont}';font-size:${pinyinSize}px;color:${words.length > py ? store.firstPinyinColor : store.otherPinyinColor};text-align:${store.pinyinPosition}">${pinyin}</li>`);
            }
            pinyinUl += `</ul>`;
            return pinyinUl;
        }else{
            return "";
        }
    },
    createNameLine: function(store, words, line){
        if(!store.namePageMarginTop){
            store.namePageMarginTop = 10;
        }
        if(words && words.length > 0){
            let idx = 0;
            let times = 0;
            let wordUl = `<ul data-hide='${store.hide}' class='word first-line' data-word='${words}' style='${line===0 && !store.pinyinShow?"margin-top:"+store.namePageMarginTop+"px;":"margin-top:-1px;"}'>`;
            for(let w=0;w<store.columnsPerLine;w++){
                if(idx >= words.length){
                    idx = 0;
                    times++;
                }
                let word;
                if(times >= store.fillNameLines){
                    word = "";
                }else{
                    word = words[idx++];
                }
                let bgurl = `url(&quot;${store.boxArray[store.lineIndex][w].bgImg}&quot;) no-repeat`;
                let border = `${store.boxOutlineSize}px ${store.boxOutlineColor} ${store.boxOutlineStyle}`;
                wordUl += (`<li contenteditable="plaintext-only" onpaste="pasteHandle(this)" class="${words.length > w ? "first-word" : "other-word"}" style="border-top:${border};${w==0?"border-left:"+border+";":""}border-right:${border};border-bottom:${border};width:${store.boxSize}px;height:${store.boxSize}px;line-height:${store.hanziLineHeight}px;${store.hanziPaddingLeft > 0 ? "padding-left:"+store.hanziPaddingLeft+"px" : "padding-right:"+(store.hanziPaddingLeft*-1)+"px"};background:${bgurl};background-size:${store.boxSize}px ${store.boxSize}px;font-family:'${store.hanziFont}';font-size:${store.hanziSize}px;color:${words.length > w ? store.firstHanziColor : store.otherHanziColor};text-align:${store.hanziPosition}">${word}</li>`);
            }
            wordUl += `</ul>`;
            return wordUl;
        }else{
            return "";
        }
    },
    createNamePage: function(store, words){
        if(words && words.length > 0){
            let content = "";
            let infos = Util.loadLineWordsFromCache(store, words.join(''))
            store.lineIndex = 0;
            for(let i=0; i<store.wordsPerPage; i++){
                if(i < store.nameLines){
                    //拼音
                    if(store.pinyinShow){
                        content += Util.createNamePinyin(store, infos, i);
                    }
                    content += Util.createNameLine(store, words, i);
                }else{
                    if(!store.dontFillTail){
                        content += Util.createNameLine(store, ["",""], i);
                    }
                }
                store.lineIndex++;
            }
            return content;
        }else{
            return "";
        }
    },
    createBihuaManual: function(){
        let block = ``;

        return block;
    },
    createCustomLine: function(info, line, store){
        const border = `${store.customLineOutlineStyle} ${store.customLineOutlineSize}px ${store.customLineOutlineColor}`;
        const index = Util.getCharCode(info.ch);
        const customData = Util.customData[index] ? Util.customData[index] : "";
        return `<div id='custom${index}' class='custom-line' contenteditable='plaintext-only' style='font-family:${store.customLineFont};font-size:${store.customLineSize}px;line-height:${store.customLineLineHeight}px;padding-left:${store.customLinePaddingLeft}px;color:${store.customLineColor};border-top:${line==0?border:'none'};border-left:${border};border-right:${border};border-bottom:${line==0?'none':border};' title='点击我，在此添加内容'>${customData}</div>`;
    },
    createQrCode: function (elementId, text){
        preview.$(`#${elementId}`).empty();
        let useJQueryQrCode = $.cookie('jquery-qr-code');
        if(useJQueryQrCode){
            preview.$(`#${elementId}`).qrcode({
                render: "canvas", //也可以替换为table
                width: 57,
                height: 57,
                foreground: "#000000",
                background: "#ffffff",
                text: text
            });
        }else{
            new preview.QRCode(elementId, {
                text: text,
                width: 57,
                height: 57,
                colorDark : "#000000",
                colorLight : "#ffffff",
                correctLevel : QRCode.CorrectLevel.H
            });
        }
    },
    initQrCode: function (words, store){
        if(words && words.length > 0){
            words.forEach(wd=>{
                let charCode = Util.getCharCode(wd);
                let spans = preview.$(`span[id^='qr-${charCode}']`);
				preview.$.each(spans, function(i, span){
                    const newId = preview.$(span).attr("id");
                    if(store.synCustomQrCode){
                        const link = Util.QrCodeLinks[charCode];
                        if(link){
                            Util.createQrCode(newId, link);
                        }else{
                            //不存在自定义链接不需要生成二维码
                        }
                    }else{
                        Util.createQrCode(newId, `https://www.wenziyuntu.com/word/${encodeURIComponent(wd)}`);
                    }
                    preview.$(span).attr("title",`【${wd}】的笔顺演示动画`);
				});
            });
        }
    },
    QrCodeLinks: {},
    initQrCodeUpload: function (words, store){
        if(words && words.length > 0){
            words.forEach(wd=>{
                var charCode = Util.getCharCode(wd);
				preview.$(`a[id^="link-${charCode}"]`).bind("click", function(){
                    const divId = $(this).attr("id").replace("link", "div");
                    const inputId = divId.replace("div", "input");
                    const spanId = inputId.replace("input", "qr");
                    preview.$( `#${divId}` ).dialog({
                        dialogClass: "no-close",
                        modal: true,
                        width: '65%',
                        height: 200,
                        buttons: [
                            {
                                text: "取消",
                                click: function() {
                                    preview.$( `#${divId}` ).dialog("close");
                                }
                            },
                            {
                                text: "确认",
                                click: function() {
                                  const link = preview.$(`#${inputId}`).val();
                                  if(link){
                                    Util.QrCodeLinks[charCode] = link;
                                    Util.createQrCode(spanId, link);
                                  }
                                  preview.$( `#${divId}` ).dialog("close");
                                }
                            }
                        ]
                    });
                });
            });
        }
    },
    createQrCodeLine: function(line, words, store){
        const lineIndex = 0;
        const liBorder = `${store.blockOutlineSize}px ${store.blockOutlineStyle} ${store.blockOutlineColor}`;
        const liStyle = `border:${liBorder};margin-bottom:${store.hanziBoxMarginTop}px;margin-right:${store.hanziBoxMarginRight}px;`;
        const leftStyle = `width:${store.blockWidth}px;height:${store.blockHeight}px;`;
        const rightStyle = `width:${store.blockWidth}px;height:${store.blockHeight}px;text-align:left;`;
        const labelStyle = `font-family:${store.blockLabelFont};font-size:${store.blockLabelSize}px;color:${store.blockLabelColor};line-height:${store.blockLabelLineHeight}px;padding-left:${store.blockLabelPaddingLeft}px;text-align:left;`;
         const otherstyle = `font-family:${store.otherFont};font-size:${store.otherSize}px;color:${store.otherColor};line-height:${store.otherLineHeight}px;padding-left:${store.otherPaddingLeft}px;text-align:center;`;
        let wordUl = `<ul data-hide='${store.hide}' class='single-line'>`;
        for(let w=0;w<store.columnsPerLine;w++){
            const info = Util.loadWordFromCache(store, words[line*store.columnsPerLine + w]);
            if (info.ch) {
                const charCode = Util.getCharCode(info.ch);
                const rndIdx = Math.floor(Math.random()*10000);
                const todo = (info.py && info.py.length > 1) ? "todo" : "";
                const bgurl = `url(&quot;${store.boxArray[lineIndex][w].bgImg}&quot;) no-repeat`;
                const border = `${store.boxArray[lineIndex][w].outlineSize}px ${store.boxArray[lineIndex][w].outlineColor} ${store.boxArray[lineIndex][w].outlineStyle}`;
                const hanziStyle = `width:${store.boxSize}px;height:${store.boxSize}px;border:${border};background:${bgurl};background-size:${store.boxSize}px ${store.boxSize}px;font-family:'${store.hanziFont}';font-size:${store.hanziSize}px;color:${store.firstHanziColor};text-align:${store.hanziPosition};line-height:${store.hanziLineHeight}px;${store.hanziPaddingLeft>0?'padding-left':'padding-right'}:${Math.abs(store.hanziPaddingLeft)}px;`;
                const pinyin = info.py[0];
                let pinyinSize = store.pinyinSize;
                let pinyinLineHeight = store.pinyinLineHeight
                if(pinyin.length > 5){
                    if(store.longPinyinSize){
                        pinyinSize = store.longPinyinSize;
                    }
                    if(store.longPinyinLineHeight){
                        pinyinLineHeight = store.longPinyinLineHeight;
                    }
                }
                const pyStyle = `font-family:${store.pinyinFont};font-size:${pinyinSize}px;color:${store.firstPinyinColor};line-height:${pinyinLineHeight}px;letter-spacing:${store.pinyinLetterSpacing}px;text-align:center;`;
                const addLink = `<a href="javascript:;" id="link-${charCode}-${rndIdx}" class="file" style="padding: 8px 8px;background:none;border:none">+<div id="div-${charCode}-${rndIdx}" title="自定义【${info.ch}】的二维码" style="display:none"><input name="input-${charCode}-${rndIdx}" id="input-${charCode}-${rndIdx}" value="" style="width:100%;height:50px;" placeholder="请输入需要生成二维码的链接"/></div></a>`;
                const file = store.synCustomQrCode ? addLink : "";
                wordUl += (`<li style="${liStyle}">
                        <span class="single-line-left" style="${leftStyle}">
                            <span class="word" style="${hanziStyle}">${info.ch}</span>
                            <span class="word-code word-code-op" id="qr-${charCode}-${rndIdx}" style="margin-left:${store.codeMarginLeft}px;">${file}</span>
                        </span>
                        <span class="single-line-right" style="${rightStyle}">
                            <span style="${labelStyle}">拼音</span><span class="editpinyin ${todo}" contenteditable="plaintext-only" data-word="${info.ch}" data-pyarr="${info.py}" onclick="modify(this, '${info.py}')" style="${pyStyle}">${pinyin}</span>
                            <span style="${labelStyle}">部首</span><span contenteditable="plaintext-only" style="${otherstyle}">${info.rd}</span>
                            <span style="${labelStyle}">笔画</span><span contenteditable="plaintext-only" style="${otherstyle}">${info.sk.length}</span>
                        </span>
                    </li>`);
            }
        }
        wordUl += `</ul>`;
        return wordUl;
    },
    calc: function(negative, first, op, second){
        let mod, answer;
        if(!negative && "-" == op){
            let temp = first;
            if(second > first){
                first = second;
                second = temp;
            }
        }
        switch(op){
            case "+":
                answer = first + second;
                break;
            case "-":
                answer = first - second;
                break;
            case "×":
                answer = first * second;
                break;
            case "÷":
                answer = parseInt(first / second);
                mod = first % second;
                break;
            default:
                answer = first + second;
                break;
        }
        return {answer:answer, mod: mod};
    },
    getRandomNumberByRange: function (start, end) {
        return Math.floor(Math.random() * (end - start) + start)
    },
    getNumWidth: function(store){
        return store.numRange === "result" ? (store.resultRange[1]+"").length : ((store.num1Range[1]>store.num2Range[1]) ? (store.num1Range[1]+"").length : (store.num2Range[1]+"").length);
    },
    generateExpress: function(store, ops){
        const opsIdx = Util.getRandomNumberByRange(0, 10);
        const op = ops[opsIdx%ops.length];
        const startResult = store.resultRange[0], endResult = store.resultRange[1];
        const startNum1 = /[÷]/.test(op) && store.num1Range[0] == 0 ? store.num1Range[0] + 1: store.num1Range[0], 
              endNum1 = /[÷]/.test(op) && (store.num1Range[1] == 0 || store.num1Range[1] - 1 == 0) ? store.num1Range[1] + 2: store.num1Range[1];
        const startNum2 = /[÷]/.test(op) && store.num2Range[0] == 0 ? store.num2Range[0] + 1: store.num2Range[0], 
              endNum2 = /[÷]/.test(op) && (store.num2Range[1] == 0 || store.num2Range[1] - 1 == 0) ? store.num2Range[1] + 2: store.num2Range[1];

        let result = Util.getRandomNumberByRange(startResult, endResult);
        let op1 = Util.getRandomNumberByRange(startNum1, endNum1);
        let op2 = Util.getRandomNumberByRange(startNum2, endNum2);

        if(store.numRange === "result"){
            switch(op){
                case "-":
                    op1 = endResult - result;
                    op2 = Util.getRandomNumberByRange(startResult, op1>result?result:op1);
                    op1 = result + op2;
                    break;
                case "×":
                    op1 = endResult - result;
                    op2 = Util.getRandomNumberByRange(startResult, op1>result?result:op1);
                    op2 = (op2 == 0 ? op2+1 : op2);
                    op1 = Math.floor(result / op2);
                    result = op1 * op2;
                    break;
                    break;
                case "÷":
                    result = (result == 0 ? result + 1 : result);
                    op2 = Math.floor(endNum1 / result);
                    op2 = (op2 == 0 ? op2 + 1 : op2);
                    op1 = op2 * result;
                    break;
                case "+":
                default:
                    op1 = endResult - result;
                        op2 = Util.getRandomNumberByRange(startResult, op1>result?result:op1);
                        result = op1 + op2;
                    break;
            }
        }else{
            //Nothing to do!
        }

        let num1 = parseInt(op1);
        let num2 = parseInt(op2);
        if(num2 > num1){
            let tmp = num2;
            num2 = num1;
            num1 = tmp;
        }
        op1 = num1.toString();
        op2 = num2.toString();

        // console.log(`${op1} ${op} ${op2} = ${result}`)

        return (op1 + op + op2) + '=_ ';;
    },
    generateCount: function(store){
        const bookCount = store.columnsPerLine * store.wordsPerPage * store.pageRange;
        let numCount = (store.num1Range[1] - store.num1Range[0]) * (store.num2Range[1] - store.num2Range[0]);
        if(store.numRange == "result"){
            numCount = (store.resultRange[1] - store.resultRange[0])**2;
        }
        return bookCount > numCount ? numCount : bookCount;
    },
    randomExpress: function (store){
        store.words.length = 0;
        const ops = [];
        if((store.op & 1) == 1){
            ops.push("+");
        }
        if((store.op & 2) == 2){
            ops.push("-");
        }
        if((store.op & 4) == 4){
            ops.push("×");
        }
        if((store.op & 8) == 8){
            ops.push("÷");
        }
        if(ops.length > 0){
            const count = Util.generateCount(store);

            for(let i=0;i<count;i++){
                let express = Util.generateExpress(store, ops);
                store.words.push(express);
            }
            $("textarea").text(store.words.join(" "));
        }
    },
    leftPadding: function(val, len, pad){
        for(let i=0; i<len; i++){
            if(val.length >= len){
                break;
            }
            val = pad + val;
        }
        return val;
    },
    createShushiPadding: function(val, idx, store){
        const bgurl = `url(&quot;${store.boxArray[0][0].bgImg}&quot;) no-repeat`;
        const border = `${store.boxOutlineSize}px ${store.boxOutlineColor} ${store.boxOutlineStyle}`;
        const style = idx == 4 ? `border:${border};background:${bgurl};background-size:${store.boxSize}px ${store.boxSize}px;` : ``;
        const spanStyle = `line-height:${store.hanziLineHeight}px;${store.hanziPaddingLeft > 0 ? "padding-left:"+store.hanziPaddingLeft+"px" : "padding-right:"+(store.hanziPaddingLeft*-1)+"px"};font-family:'${store.hanziFont}';font-size:${store.hanziSize}px;color:${store.firstHanziColor};text-align:${store.hanziPosition}`;
        let spans="";
        const arr = val.split("");
        for(let i=0; i<arr.length; i++){
            spans += `<span class="word" style="display:inline-block;margin:${store.boxMarginTop}px ${store.boxMarginRight}px;width:${store.boxSize}px;height:${store.boxSize}px;${style}${spanStyle}">${arr[i].replace(" ", "&nbsp;")}</span>`;
        }
        return spans;
    },
    convert2Space: function(val, store){
        let tmp = "";
        if((store.op & 16) != 16){
            let arr = val.split("");
            for(let i=0; i<arr.length; i++){
                tmp += "_";
            }
        }else{
            tmp = val;
        }
        return tmp;
    },
    ChufaShuShiBlock: function(ops, spanStyle, max, store){
        const bgurl = `url(&quot;${store.boxArray[0][0].bgImg}&quot;) no-repeat`;
        const border = `${store.boxOutlineSize}px ${store.boxOutlineColor} ${store.boxOutlineStyle}`;
        const shareStyle = `margin-top:${store.boxMarginTop}px;margin-right:${store.boxMarginRight}px;margin-bottom:${store.boxMarginTop/3}px;width:${store.boxSize}px;height:${store.boxSize}px;`;
        const style = `border:${border};background:${bgurl};background-size:${store.boxSize}px ${store.boxSize}px;`;
        const DivHelper = {
            resultString: "",
            times: function(s, n) { 
                return Array.prototype.join.call({length:n+1}, s); 
            },
            splitSpan: function(val){
                const arr = val.split("");
                let result = "";
                for(let i=0; i<arr.length; i++){
                    result += `<span style="${spanStyle};${shareStyle};display:inline-block;${arr[i].indexOf(")") > -1?"font-size:"+(store.hanziSize*2-2)+"px;":""}">${arr[i].replace(" ", "&nbsp;")}</span>`;
                }
                return result;
            },
            span: function(val){
                if(val){
                    const arr = val.split("");
                    let result = "";
                    for(let i=0; i<arr.length; i++){
                        const css = arr[i].indexOf(" ")>-1?"height:1px;":"";
                        result += `<span style="${spanStyle};${style};${shareStyle};display:inline-block;${css}">${arr[i].replace(" ", "&nbsp;").replace("_", "&nbsp;")}</span>`;
                    }
                    return result;
                }else{
                    return "";
                }
            },
            print: function (s, v) {
                if(v){
                    if(v.indexOf("-") > -1){
                        DivHelper.resultString +=  `<div style="margin-left:${store.boxSize*s.length+s.length*store.boxMarginRight+store.boxSize/4}px;"><div style="display:inline-block;width:${store.boxSize*v.length}px;height:3px;background:#000000;"></div></div>`;
                    }else{
                        DivHelper.resultString +=  `<div style="">${DivHelper.splitSpan(s)}${DivHelper.span(v)}</div>`;
                    }
                    
                }else{
                    DivHelper.resultString +=  `<div style="${s.indexOf("-")>-1?"text-align: right;":""}">${DivHelper.splitSpan(s)}</div>`;
                }
                
            },
            printAlignRight: function (s, width) {
                DivHelper.print(DivHelper.times(" ", width - s.length), Util.convert2Space(s, store))
            },
            div: function (beichushuStr, chushuStr) {
                DivHelper.resultString = "";
                
                let beichushu = parseInt(beichushuStr);
                let chushu = parseInt(chushuStr);
                
                if(chushu > beichushu){
                    let tmp = chushu;
                    chushu = beichushu;
                    beichushu = tmp;
                }
                
                beichushuStr = beichushu.toString();
                chushuStr = chushu.toString();
                
                let width = beichushuStr.length + chushuStr.length + 1;
                let shang = Math.floor(beichushu / chushu);
                let shangStr = shang.toString();
                
                DivHelper.print(DivHelper.times(" ", width - shangStr.length), Util.convert2Space(shangStr, store));
                DivHelper.print(DivHelper.times(" ", chushuStr.length), DivHelper.times("-", beichushuStr.length + 2));
                DivHelper.print(chushuStr + ")" + beichushuStr);
                
                let beichushuPartStr = beichushuStr.substring(0, beichushuStr.length - shangStr.length + 1);
                for(i = 0; i < shangStr.length; i++) {
                    let alignWidth = width - shangStr.length + i + 1;
                    if(shangStr[i] == "0"){
                        if(i == shangStr.length - 1){
                            DivHelper.printAlignRight(beichushuPartStr, alignWidth);
                        }else{
                            beichushuPartStr = beichushuPartStr + beichushuStr[beichushuStr.length - shangStr.length + 1 + i];
                        }
                        continue;
                    }
                    let product = chushu * parseInt(shangStr[i]);
                    let productStr = product.toString();
                    if(i != 0){
                        DivHelper.printAlignRight(beichushuPartStr, alignWidth);
                    }
                    DivHelper.printAlignRight(productStr, alignWidth);
                    DivHelper.print(DivHelper.times(" ",chushuStr.length + 1), DivHelper.times("-", width - chushuStr.length));
                    let beichushuPart = parseInt(beichushuPartStr);
                    let difference = beichushuPart - product;
                    let differenceStr = difference.toString();
                    if(i != shangStr.length - 1){
                        if(difference == 0){
                            differenceStr = "";
                        }
                        beichushuPartStr = differenceStr + beichushuStr[beichushuStr.length - shangStr.length + 1 + i];
                    }else{
                        DivHelper.print(DivHelper.times(" ", width - differenceStr.length), Util.convert2Space(differenceStr, store));
                    }
                }
                return DivHelper.resultString;
            }
        };
        const block = `<div style="display: inline-block; position: relative; line-height: 100%;">${DivHelper.div(ops[0], ops[2])}</div>`;
        return block;
    },
    ShushiBlock: function(ops, spanStyle, max, store){
        const block = `<div style="text-align:right;">${Util.createShushiPadding(Util.leftPadding(ops[0], max, " "), 0, store)}</div>
        <div class="clear-both"></div>
        <div style="text-align:right;"><span style="float:left;${spanStyle}">${ops[1]}</span>${Util.createShushiPadding(Util.leftPadding(ops[2], max, " "), 2, store)}</div>
        <div class="clear-both"></div>
        <div style="width:100%;height:1px;background-color:#000000;"></div>
        <div class="clear-both"></div>
        <div style="text-align:right;">${Util.createShushiPadding(Util.leftPadding(ops[4], max, " "), 4, store)}</div>
        <div class="clear-both"></div>`;
        return block;
    },
    createShushiBlock: function(info, store){
        const arr = info && info.split("") || [];
        if(arr.length >= 5){
            const ops = ["","","","",""];
            let idx = 0;
            for(let i=0; i<arr.length; i++){
                if(/[+\-×÷_=]/.test(arr[i])){
                    idx++;
                    if(/[+\-×÷]/.test(arr[i])){
                        ops[idx++] += `${arr[i]}`;
                    }
                }else{
                    ops[idx] += `${arr[i]}`;
                }
            }
            const answer = Util.calc(store.negative, parseInt(ops[0]), ops[1], parseInt(ops[2])).answer + "";
            let max = Math.max(ops[0].length, ops[2].length);
            if((store.op & 16) == 16){
                ops[4] = answer;
            }else{
                max = Math.max(max, answer.length);
            }
            const spanStyle = `line-height:${store.hanziLineHeight}px;${store.hanziPaddingLeft > 0 ? "padding-left:"+store.hanziPaddingLeft+"px" : "padding-right:"+(store.hanziPaddingLeft*-1)+"px"};font-family:'${store.hanziFont}';font-size:${store.hanziSize}px;color:${store.firstHanziColor};text-align:${store.hanziPosition}`;
            let shushi;
            if(/[+\-×]/.test(ops[1])){
                shushi = Util.ShushiBlock(ops, spanStyle, max, store);
            }else{
                shushi =  Util.ChufaShuShiBlock(ops, spanStyle, max, store);
            }
            const block = `<li style="width:${store.coloumnWidth}px;margin-right:${store.suanShiMarginRight}px;margin-top:${store.suanShiMarginTop}px;">${shushi}</li>`;
            return block;
        }else{
            return "";
        }
    },
    createShushiLine: function(line, words, store){
        const style = `width:${store.coloumnWidth*store.columnsPerLine + store.suanShiMarginRight*store.columnsPerLine}px;text-align:right;`;
        let wordUl = `<ul class="clear-both" style="${style}">`;
        for(let w=0; w<store.columnsPerLine; w++){
            const info = words[line*store.columnsPerLine + w];
            wordUl += Util.createShushiBlock(info, store);
        }
        wordUl += `</ul>`;
        return wordUl;
    },
    createKousuanPadding: function(val, idx, store){
        const bgurl = `url(&quot;${store.boxArray[0][0].bgImg}&quot;) no-repeat`;
        const border = `${store.boxOutlineSize}px ${store.boxOutlineColor} ${store.boxOutlineStyle}`;
        const style = idx == 4 ? `border:${border};background:${bgurl};background-size:${store.boxSize}px ${store.boxSize}px;` : ``;
        const spanStyle = `line-height:${store.hanziLineHeight}px;${store.hanziPaddingLeft > 0 ? "padding-left:"+store.hanziPaddingLeft+"px" : "padding-right:"+(store.hanziPaddingLeft*-1)+"px"};font-family:'${store.hanziFont}';font-size:${store.hanziSize}px;color:${store.firstHanziColor};text-align:${store.hanziPosition}`;
        let spans="";
        const arr = val.split("");
        for(let i=0; i<arr.length; i++){
            spans += `<span class="word" style="display:inline-block;margin:${store.boxMarginTop}px ${store.boxMarginRight}px;width:${store.boxSize}px;height:${store.boxSize}px;${style}${spanStyle}">${arr[i].replace(" ", "&nbsp;").replace(/_/g,"")}</span>`;
        }
        return spans;
    },
    KousuanBlock: function(ops, spanStyle, max, store){
        const block = `<li style="width:${store.coloumnWidth}px;"><span style="${spanStyle}">${_.padStart(ops[0], max, ' ').replace(' ', '&ensp;')}</span><span style="${spanStyle}"> ${ops[1]} </span><span style="${spanStyle}">${_.padStart(ops[2], max, ' ').replace(' ', '&ensp;')}</span><span style="${spanStyle}"> = </span><span class="answer">${Util.createKousuanPadding(_.padStart(ops[4], max, ' '), 4, store)}</span></li>`;
        return block;
    },
    createKousuanBlock: function(info, store){
        const arr = info && info.split("") || [];
        if(arr.length >= 5){
            const ops = ["","","","",""];
            let idx = 0;
            for(let i=0; i<arr.length; i++){
                if(/[+\-×÷_=]/.test(arr[i])){
                    idx++;
                    if(/[+\-×÷]/.test(arr[i])){
                        ops[idx++] += `${arr[i]}`;
                    }
                }else{
                    ops[idx] += `${arr[i]}`;
                }
            }
            const answer = Util.calc(store.negative, parseInt(ops[0]), ops[1], parseInt(ops[2])).answer + "";
            let max = Util.getNumWidth(store);
            ops[4] = Util.convert2Space(answer, store);
            const spanStyle = `display:inline-block;width:${store.coloumnWidth/6}px;line-height:${store.hanziLineHeight}px;${store.hanziPaddingLeft > 0 ? "padding-left:"+store.hanziPaddingLeft+"px" : "padding-right:"+(store.hanziPaddingLeft*-1)+"px"};font-family:'${store.hanziFont}';font-size:${store.hanziSize}px;color:${store.firstHanziColor};text-align:${store.hanziPosition};white-space:pre;`;
            const shushi = Util.KousuanBlock(ops, spanStyle, max, store);
            const block = `<li style="margin-right:${store.suanShiMarginRight}px;margin-top:${store.suanShiMarginTop}px;">${shushi}</li>`;
            return block;
        }else{
            return "";
        }
    },
    createKousuanLine: function(line, words, store){
        const style = `width:${store.coloumnWidth*store.columnsPerLine + store.suanShiMarginRight*store.columnsPerLine}px;text-align:right;`;
        let wordUl = `<ul class="clear-both" style="${style}">`;
        for(let w=0; w<store.columnsPerLine; w++){
            const info = words[line*store.columnsPerLine + w];
            wordUl += Util.createKousuanBlock(info, store);
        }
        wordUl += `</ul>`;
        return wordUl;
    },
    modifyPageSize: function(store){
        if(store.synModifyPage){
            if(store.pageWidth !== store.mediaWidth){
                store.pageWidth = store.mediaWidth;
                $("#page-layout-module-page-width-input").val(store.mediaWidth*10);
                $("#page-layout-module-page-width-input").change();
            }
            if(store.pageHeight !== store.mediaHeight){
                store.pageHeight = store.mediaHeight;
                $("#page-layout-module-page-height-input").val(store.mediaHeight*10);
                $("#page-layout-module-page-height-input").change();
            }
        }
    },
    modifyTextDirection: function(store){
        let temp = store.wordsPerPage;
        store.wordsPerPage = store.columnsPerLine;
        store.columnsPerLine = temp;
        $("#page-layout-module-words-per-page-input").val(store.wordsPerPage);
        $("#page-layout-module-words-per-page-input").change();
        $("#page-layout-module-box-per-line-input").val(store.columnsPerLine);
        $("#page-layout-module-box-per-line-input").change();
    },
    paddingRight: function(text, length, pad){
        for(let i=0; i<length; i++){
            if(text.length >= length){
                break;
            }
            text +=  pad;
        }
        return text;
    },
    paddingLeft: function(text, length, pad){
        for(let i=0; i<length; i++){
            if(text.length >= length){
                break;
            }
            text =  pad + text;
        }
        return text;
    },
    formatDuoci: function(store, article){
        let array = [];
        const paras = article.split('\n');
        for(let p=0; p<paras.length; p++){
            const para = paras[p];
            const arr = para.split(" ");
            for(let i=0; i<arr.length; i++){
                let s = arr[i];
                if(s){
                    array.push(s + " ");
                }
            }
        }
        
        return array;
    },
    formatCiyu: function(store, article){
        let array = [];
        const count = store.columnsPerLine;
        const paras = article.split('\n');
        for(let p=0; p<paras.length; p++){
            const para = paras[p];
            const arr = para.split(" ");
            let tmpStr = "", tmp = "";
            for(let i=0; i<arr.length; i++){
                let s = arr[i];
                if(s){
                    if(tmpStr.length <= count && (tmpStr + s).length <= count){
                        tmpStr += s;
                        tmp += s + " "
                        if(i == arr.length - 1){
                            array.push(tmp);
                            tmpStr = "";
                            tmp = "";
                        }
                    }else{
                        array.push(tmp);
                        tmpStr = s;
                        tmp = s + " ";
                    }
                }
            }
            if(tmpStr && tmpStr.length > 0){
                array.push(tmp);
            }
        }
        
        return array;
    },
    formatArticle: function(store, article){
        let array = [];
        const count = store.columnsPerLine;
        const paras = article.split('\n');
        for(let p=0; p<paras.length; p++){
            const para = paras[p];
            let i = 0;
            for(; i<para.length; i += count){
                let tmp = (i + count) <= para.length ? para.substr(i, count) : para.substr(i);

                if(store.hideHanziFlag){
                    if(para.length >= (i+count+1) && /[。，：”；！？、’）》>]+/.test(para.substr(i+count, 1))){
                        tmp += para.substr(i+count, 1);
                        i++;
                    }
                    // 行末的 。 ， ： ” ； ！ ？、’ ）》>)'合并到上一行
                    // 行首的 “ ‘ （ 《<(' 合并到首格
                    // 行中的 ：和 “ 合并为一格
                    // 行中的 。！？和 ”’）》>)' 合并为一格
                }

                if(store.contentPaddingLeft){
                    let paddingLength = count > (tmp.length + store.contentPaddingLeft) ? (tmp.length + store.contentPaddingLeft) : count;
                    tmp = Util.paddingLeft(tmp, paddingLength, ' ');
                }
                array.push(Util.paddingRight(tmp, count, ' '));
            }
        }
        
        return array;
    },
    formatArticles: function(store, text){
        const array = text.split("\n\n\n");
        let articles = [];
        if(array && array.length > 0){
            array.forEach((s)=>{
                let items = s.split("\n\n");
                if(items && items.length > 1){
                    let article = {
                        title:items[0].replace(/\n/g,""),
                        words: (store.isCizu ? (store.isDuoci ? Util.formatDuoci(store, items[1]) : Util.formatCiyu(store, items[1])) : Util.formatArticle(store, items[1]))
                    };
                    articles.push(article);
                }else if(items && items.length > 0){
                    let article = {
                        title:"",
                        words: (store.isCizu ? (store.isDuoci ? Util.formatDuoci(store, items[0]) : Util.formatCiyu(store, items[0]))  : Util.formatArticle(store, items[0]))
                    };
                    articles.push(article);
                }
            });
        }
        console.log(text, articles);
        return Util.articlesToArray(articles);
    },
    formatArray: function(store, text){
        let words = Util.formatArticles(store, text);
        let length = words.length;

        let left = 0;

        if((store.titlePosition & 1) === 1){
            left++;
        }

        if((store.titlePosition & 4) === 4){
            left++;
        }

        if((store.titlePosition & 2) === 2){
            left++;
        }

        while(length < store.wordsPerPage-left){
            words.push({
                type: "content",
                content: Util.paddingRight('', store.columnsPerLine, ' ')
            });
            length++;
        }
        // if(length < store.wordsPerPage){
        //     if((store.titlePosition & 1) !== 1){
        //         words.push({
        //             type: "content",
        //             content: Util.paddingRight('', store.columnsPerLine, ' ')
        //         });
        //     }
        //     length++;
        // }
        // if(length < store.wordsPerPage){
        //     if((store.titlePosition & 2) !== 2){
        //         words.push({
        //             type: "content",
        //             content: Util.paddingRight('', store.columnsPerLine, ' ')
        //         });
        //     }
        //     length++;
        // }
        // if(length < store.wordsPerPage){
        //     if((store.titlePosition & 4) !== 4){
        //         words.push({
        //             type: "content",
        //             content: Util.paddingRight('', store.columnsPerLine, ' ')
        //         });
        //     }
        //     length++;
        // }
        
        if((store.titlePosition & 1) === 1){
            words.push({
                type: "title",
                content: Util.paddingRight(store.titleText, store.columnsPerLine, ' ')
            });
        }
        if((store.titlePosition & 4) === 4){
            words.unshift({
                type: "title",
                content: Util.paddingRight(store.rightTitleText, store.columnsPerLine, ' ')
            });
        }
        if((store.titlePosition & 2) === 2){
            words.splice(words.length/2, 0, {
                type: "title",
                content: Util.paddingRight(store.centerTitleText, store.columnsPerLine, ' ')
            });
        }
        console.log("formatArray", length, words.length)
        return words;
    },
    calcIndex: function(store){
        let lineIndexs = [];
        for(let i=0; i<store.wordsPerPage; i++){
            lineIndexs.push(0);
        }
        let index = store.wordsPerPage / 3;
        let i = 0;
        while(index < store.wordsPerPage){
            console.log(i, index, store.wordsPerPage)
            lineIndexs[i] = index;
            lineIndexs[store.wordsPerPage-1-i] = index;
            index += 2;
            i++;
        }
        for(let i=0; i<store.wordsPerPage; i++){
            if(lineIndexs[i] === 0){
                lineIndexs[i] = store.wordsPerPage;
            }
        }
        return lineIndexs;
    },
    formatOctagonArray: function(store, text){
        store.lineIndexs = Util.calcIndex(store);
        let words = [];
        let start = 0;
        for(let i=0; i<store.wordsPerPage; i++){
            if((store.titlePosition & 4) === 4 && i === 0){
                words.push({
                    type: "title",
                    content: Util.paddingRight(store.rightTitleText, store.lineIndexs[i], ' ')
                });
                continue;
            }
            if((store.titlePosition & 1) === 1 && i === store.wordsPerPage -1){
                words.push({
                    type: "title",
                    content: Util.paddingRight(store.titleText, store.lineIndexs[i], ' ')
                });
                continue;
            }
            if((store.titlePosition & 2) === 2 && i === Math.trunc(store.wordsPerPage/2)){
                words.push({
                    type: "title",
                    content: Util.paddingRight(store.centerTitleText, store.lineIndexs[i], ' ')
                });
                continue;
            }
            let tmp  = '';
            if(start < text.length){
                tmp = text.substr(start, store.lineIndexs[i]);
            }
            start = start + store.lineIndexs[i];
            console.log(tmp, text, start, store.lineIndexs[i]);
            words.push({
                type: "content",
                content: Util.paddingRight(tmp, store.lineIndexs[i], ' ')
            });
        }
        return words;
    },
    articlesToArray: function(articles){
        let array = [];

        if(articles && articles.length > 0){
            for(let i=0; i<articles.length; i++){
                const article = articles[i];
                if(article.title){
                    array.push({type:'title', content: article.title});
                }
                
                if(article.words && article.words.length > 0){
                    for(let j=0; j<article.words.length; j++){
                        const line = article.words[j];
                        array.push({type:'content', content: line});
                    }
                }
            }
        }
        
        return array;
    },
    arrayToArticles: function(words){
        let articles = '';
        if(words && words.length > 0){
            for(let i=0; i<words.length; i++){
                const line = words[i];
                if(line.type === 'title'){
                    if(i > 0){
                        articles += '\n\n\n';
                    }
                    articles += _.trimEnd(line.content) + '\n\n';
                }else if(line.type === 'content'){
                    articles += _.trimEnd(line.content) + '\n';
                }
            }
        }
        return articles;
    },
    createTitleV2: function(store, line, content){
        const border = `${store.titleBorderSize}px ${Util.hexToRgba(store.titleBorderColor, store.titleBorderOpacity/100)} ${store.titleBorderStyle}`;
        const box = {
            bgImg: store.titleBoxCustomImage ? store.titleBoxCustomImage : this.svgMaker(store.titleBoxId,store.titleBoxInlineDashArray.join(","), store.titleBoxInlineSize, store.titleBoxInlineColor, store.titleBoxInlineOpacity),
            outlineSize: store.titleBorderSize,
            outlineColor: store.titleBorderColor,
            outlineStyle: store.titleBorderStyle
        };
        const bgurl = `url(&quot;${box.bgImg}&quot;) no-repeat`;
        const bgStyle = `background:${bgurl};background-size:${store.boxSize}px ${store.boxSize}px;`;
        
        let list = '';
        const words = Util.paddingRight(content, store.columnsPerLine, ' ').split("");
        for(let i=0;i<store.columnsPerLine;i++){
            let height = i==0?store.boxSize+1:(i==store.columnsPerLine-1?store.boxSize-1:store.boxSize);
            let lineHeight = store.wordLandscape?`padding-top: ${store.titlePaddingLeft}px;line-height: ${store.titleLineHeight}px;`:`padding-left: ${store.titlePaddingLeft}px;line-height: ${store.titleLineHeight}px;`;
            let style = `${store.writingMode?"writing-mode:vertical-rl;":""}width:${store.boxSize}px;height:${height}px;${lineHeight}font-size: ${store.titleSize}px;font-family: '${store.titleFont}';color:${store.titleColor};`;
            let firstBorder = store.wordLandscape?"right":"top";
            let firstBoxBorder = store.wordLandscape?"top":"left";
            let lastBoxBorder = store.wordLandscape?"bottom":"right";
            let lastBorder = store.wordLandscape?"left":"bottom";
            let borderStyle = `${line === store.wordsPerPage-1 ? "border-"+lastBorder+":"+border+";": ""}${line===0?"border-"+firstBorder+":"+border+";":""}${i==0?"border-"+firstBoxBorder+":"+border+";":""}${i==store.columnsPerLine-1?"border-"+lastBoxBorder+":"+border+";":""}`;
            let bottomBorder = store.titleBoxId !== "91"?(i < store.columnsPerLine-1?"border-"+lastBoxBorder+":"+border + ";":""):"";
            list += `<li contenteditable="plaintext-only" style="${style}${bgStyle}${bottomBorder}${borderStyle}">${words[i]}</li>`;
        }
        return `<ul style="width: 100%;display:block;overflow: hidden;${store.wordLandscape?"float:right;width:"+store.boxSize+"px;margin-top:"+store.hanziBoxMarginTop+"px;":"margin-left:"+store.hanziBoxMarginTop+"px;"}">${list}</ul>`;
    },
    createTitle: function(store, content){
        const leftOrRight = store.titlePaddingLeft > 0 ? "left" : "right";
        const style = `padding-${leftOrRight}: ${Math.abs(store.titlePaddingLeft)}px;line-height: ${store.titleLineHeight}px;font-size: ${store.titleSize}px;font-family: '${store.titleFont}';color:${store.titleColor};`;
        return `<ul style="width: 100%;display:block;overflow: hidden;"><li style="${style}">${content}</li></ul>`;
    },
    loadLineWordsFromCache(store, content){
        const array = [];
        const words = content.split('');
        for(let i=0; i<words.length; i++){
            const wd = words[i];
            const info = Util.loadWordFromCache(store, wd);
            array.push(info);
        }
        return array;
    },
    createArticlePinyinLine: function(infos, store){
        return Util.createArticleLinePinyin(infos, store, store.columnsPerLine);
    },
    createArticleHanziLine: function(infos, line, l, store){
        return Util.createArticleLineHanzi(infos, line, l, store, store.columnsPerLine);
    },
    createArticleLinePinyin: function(infos, store, length){
        let pinyinUl = `<ul class='pinyin' style='clear:both;${store.hanziBoxMarginTop?"margin-top:"+store.hanziBoxMarginTop+"px;":""}'>`;
        for(let py=0;py<length;py++){
            const info = infos[py] || {};
            const hide = (info.py && info.py.length <= 1) || (!info.py[0]);
            const bgurl = `url(&quot;${store.pinyinBoxArray[py].bgImg}&quot;) no-repeat`;
            const border = `${store.pinyinBoxOutlineSize}px ${store.pinyinBoxOutlineColor} ${store.pinyinBoxOutlineStyle}`;
            const pinyin = info.py[0] ? info.py[0]: "";
            let pinyinSize = store.pinyinSize;
            let pinyinLineHeight = store.pinyinLineHeight
            if(pinyin.length > 5){
                if(store.longPinyinSize){
                    pinyinSize = store.longPinyinSize;
                }
                if(store.longPinyinLineHeight){
                    pinyinLineHeight = store.longPinyinLineHeight;
                }
            }
            pinyinUl += (`<li data-word='${info.ch}' data-pyarr='${info.py}' data-pinyin='${pinyin}' data-hide='${hide}'  class='${hide ? "" : " todo"}' ${info.ch ? "onclick='modifyPinyin(this)'" : ""} contenteditable="plaintext-only" class="first-phonetic" style="${py==0||store.hanziBoxMarginRight>0?"border-left:"+border+";":""}${store.firstLine || store.hanziBoxMarginTop?"border-top:"+border+";":""};border-right:${border};letter-spacing:${store.pinyinLetterSpacing}px;width:${store.boxSize}px;height:${store.boxSize/2}px;line-height:${pinyinLineHeight}px;background:${bgurl};background-size:${store.boxSize}px ${store.boxSize/2}px;font-family:'${store.pinyinFont}';font-size:${pinyinSize}px;color:${store.firstPinyinColor };text-align:${store.pinyinPosition};${store.hanziBoxMarginRight?"margin-right:"+store.hanziBoxMarginRight+"px;":""}">${store.hidePinyin? "" : pinyin}</li>`);
        }
        pinyinUl += `</ul>`;
        return pinyinUl;
    },
    createArticleLineHanzi: function(infos, line, l, store, length){
        const lineIndex = store.lineIndex?store.lineIndex:l;
        const margin = store.gu ? store.wordLandscape ? "top" : "left" : "top";
        let wordUl = `<ul data-hide='${store.hide}' class='word ${l==0 ? "first-line" : "other-line"}' style='${store.wordLandscape?"float:right;width:"+store.boxSize+"px;":"clear:both;"}${store.hanziBoxMarginTop&&!store.pinyinShow?"margin-"+margin+":"+store.hanziBoxMarginTop+"px;":""}'>`;
        for(let w=0;w<length;w++){
            const needRight = store.needBorderRight && (w == 0 || w == length -1);
            const info = infos[w] || {};
            const bgurl = `url(&quot;${store.boxArray[lineIndex][w].bgImg}&quot;) no-repeat`;
            const border = `${store.boxArray[lineIndex][w].outlineSize}px ${store.boxArray[lineIndex][w].outlineColor} ${store.boxArray[lineIndex][w].outlineStyle}`;
            const bottomBorder =  `${store.bottomOutlineSize}px ${store.bottomOutlineColor} ${store.bottomOutlineStyle}`;
            const borderTop = `${lineIndex==0 && (store.pinyinShow || (!store.pinyinShow && store.firstLine) || store.wordLandscape || (!store.wordLandscape && needRight)) || (store.hanziBoxMarginTop && !store.gu && !store.pinyinShow)? "border-top:"+border+";" : ""}${!store.hengxiange && (w==0||store.hanziBoxMarginRight>0 || store.wordLandscape) ? "border-left:"+border+";" : ""}`;
            
            // const hanzi = (store.hideHanziFlag && w == length-1 && infos.length > length) ? `${info.ch}<span style="font-size:14px;text-align:right;margin-right:-5px;">${infos[length].ch}</span>` : `${info.ch}`;
            const hideHanzi = (store.hideHanziFlag && w == length-1 && infos.length > length)
            const hanzi = hideHanzi ? `${info.ch}${infos[length].ch}` : `${info.ch}`;
            const fontSize = (store.hideHanziFlag && w == length-1 && infos.length > length) ? store.hanziSize - 4 : store.hanziSize;
            wordUl += (`<li data-word='${info.ch}' contenteditable="plaintext-only" class="${lineIndex==0 ? "first-word" : "other-word"}" style="${store.writingMode? "writing-mode:vertical-rl;": ""}${borderTop}${(!store.hengxiange && !store.wordLandscape || store.wordLandscape && store.firstLine || needRight)?"border-right:"+border:""};border-bottom:${store.hengxiange ? bottomBorder : (store.wordLandscape && w < length-1 ? "none" : border)};width:${store.boxSize}px;height:${store.boxSize}px;line-height:${store.hanziLineHeight}px;${store.hanziPaddingLeft > 0 ? "padding-left:"+store.hanziPaddingLeft+"px" : "padding-right:"+(store.hanziPaddingLeft*-1)+"px"};background:${bgurl};background-size:${store.boxSize}px ${store.boxSize}px;font-family:'${store.hanziFont}';font-size:${fontSize}px;color:${l==0 ? store.firstHanziColor : store.otherHanziColor};text-align:${store.hanziPosition};${store.hanziBoxMarginRight?"margin-right:"+store.hanziBoxMarginRight+"px;":""} ${hideHanzi?`overflow:visible`:``}">${store.hideHanzi ? "" : hanzi}</li>`);
        }
        wordUl += `</ul>`;
        return wordUl;
    },
    formatEmptyWords: function(infos){
        let array = [];
        if(infos && infos.length > 0){
            for(let i=0; i<infos.length; i++){
                array.push({ch:''});
            }
        }
        return array;
    },
    createArticleLine: function(store, line, content){
        let block = '';
        let infos = Util.loadLineWordsFromCache(store, content);
        //拼音
        if(store.pinyinShow && !store.wordLandscape){
            block += Util.createArticlePinyinLine(infos, store);
        }
        store.lineIndex = 0;
        //汉字
        for(let l=0;l<=store.fillHanziLines;l++){
            block += Util.createArticleHanziLine(infos, line, l, store);
            store.lineIndex++;
        }
        //空行
        for(let l=0;l<store.fillEmptyLines;l++){
            block += Util.createArticleHanziLine(Util.formatEmptyWords(infos), line, l, store);
            store.lineIndex++;
        }
        return block;
    },
    splitArray: function(array, compare){
        let splitArray = [];
        let tmp = [];
        for(let i=0; i<array.length; i++){
            if(compare(array[i])){
                splitArray.push(tmp);
                tmp = [];
            }else{
                tmp.push(array[i]);
            }
        }
        return splitArray;
    },
    createCiyuLine: function(store, line, content){
        let block = '';
        let infos = Util.loadLineWordsFromCache(store, content);
        let splitInfos = Util.splitArray(infos, function(o){
            return o.ch === " ";
        });

        for(let i=0; i<splitInfos.length; i++){
            console.log(splitInfos[i])
            let ciyu = `<div style="float: left;margin-right:${store.ciyuMarginRight}px;margin-bottom:${store.ciyuMarginBottom}px;">`;
            //拼音
            if(store.pinyinShow){
                ciyu += Util.createArticleLinePinyin(splitInfos[i], store, splitInfos[i].length);
            }
            store.lineIndex = 0;
            //汉字
            for(let l=0;l<=store.fillHanziLines;l++){
                ciyu += Util.createArticleLineHanzi(splitInfos[i], line, l, store, splitInfos[i].length);
                store.lineIndex++;
            }
            //空行
            for(let l=0;l<store.fillEmptyLines;l++){
                ciyu += Util.createArticleLineHanzi(Util.formatEmptyWords(splitInfos[i]), line, l, store, splitInfos[i].length);
                store.lineIndex++;
            }
            block += ciyu + `</div>`;
        }
        return block;
    },
    createPinyinBlock: function(infos, store, length){
        let pinyinUl = `<ul class='pinyin'>`;
        const groups = store.columnsPerLine/length;
        for(let g=0; g<groups; g++){
            if(length*g > store.columnsPerLine){
                break;
            }
            for(let py=0;py<length;py++){
                if(length*g+(py+1) > store.columnsPerLine){
                    break;
                }
                const info = infos[py] || {};
                const hide = (info.py && info.py.length <= 1) || (!info.py[0]);
                const bgurl = `url(&quot;${store.pinyinBoxArray[py].bgImg}&quot;) no-repeat`;
                const border = `${store.pinyinBoxOutlineSize}px ${store.pinyinBoxOutlineColor} ${store.pinyinBoxOutlineStyle}`;
                const pinyin = info.py[0] ? info.py[0]: "";
                let pinyinSize = store.pinyinSize;
                let pinyinLineHeight = store.pinyinLineHeight
                if(pinyin.length > 5){
                    if(store.longPinyinSize){
                        pinyinSize = store.longPinyinSize;
                    }
                    if(store.longPinyinLineHeight){
                        pinyinLineHeight = store.longPinyinLineHeight;
                    }
                }
                pinyinUl += (`<li data-word='${info.ch}' data-pyarr='${info.py}' data-pinyin='${pinyin}' data-hide='${hide}'  class='${hide ? "" : " todo"}' ${info.ch ? "onclick='modifyPinyin(this)'" : ""} contenteditable="plaintext-only" class="${g==0 ? "first-phonetic" : "other-phonetic"}" style="${py==0&&g==0?"border-left:"+border+";":""}${store.firstLine?"border-top:"+border+";":""};border-right:${border};letter-spacing:${store.pinyinLetterSpacing}px;width:${store.boxSize}px;height:${store.boxSize/2}px;line-height:${pinyinLineHeight}px;background:${bgurl};background-size:${store.boxSize}px ${store.boxSize/2}px;font-family:'${store.pinyinFont}';font-size:${pinyinSize}px;color:${g==0 ? store.firstPinyinColor : store.otherPinyinColor};text-align:${store.pinyinPosition}">${g % (store.fillBlankTimes+1) == 0 && g < (store.fillPinyinTimes * (store.fillBlankTimes+1)) ? (store.hidePinyin ? "" : pinyin) : ""}</li>`);
            }
        }
        pinyinUl += `</ul>`;
        return pinyinUl;
    },
    createHanziBlock: function(infos, line, l, store, length){
        let lineIndex = store.lineIndex?store.lineIndex:l;
        let wordUl = `<ul data-hide='${store.hide}' class='word ${l==0 ? "first-line" : "other-line"}' style='clear:both;${store.hanziBoxMarginTop?"margin-top:"+store.hanziBoxMarginTop+"px;":""}'>`;
        const groups = store.columnsPerLine/length;
        for(let g=0; g<groups; g++){
            if(length*g > store.columnsPerLine){
                break;
            }
            for(let w=0;w<length;w++){
                if(length*g+(w+1) > store.columnsPerLine){
                    break;
                }
                const info = infos[w] || {};
                const bgurl = `url(&quot;${store.boxArray[lineIndex][w].bgImg}&quot;) no-repeat`;
                const border = `${store.boxArray[lineIndex][w].outlineSize}px ${store.boxArray[lineIndex][w].outlineColor} ${store.boxArray[lineIndex][w].outlineStyle}`;
                wordUl += (`<li data-word='${info.ch}' contenteditable="plaintext-only" class="${lineIndex==0 && g==0 ? "first-word" : "other-word"}" style="${lineIndex==0 && (store.pinyinShow || (!store.pinyinShow && store.firstLine)) ?"border-top:"+border+";":""}${w==0&&g==0?"border-left:"+border+";":""}border-right:${border};border-bottom:${border};width:${store.boxSize}px;height:${store.boxSize}px;line-height:${store.hanziLineHeight}px;${store.hanziPaddingLeft > 0 ? "padding-left:"+store.hanziPaddingLeft+"px" : "padding-right:"+(store.hanziPaddingLeft*-1)+"px"};background:${bgurl};background-size:${store.boxSize}px ${store.boxSize}px;font-family:'${store.hanziFont}';font-size:${store.hanziSize}px;color:${lineIndex==0 && g==0 ? store.firstHanziColor : store.otherHanziColor};text-align:${store.hanziPosition}">${g % (store.fillBlankTimes+1) == 0 && g < (store.fillHanziTimes * (store.fillBlankTimes+1)) ? (store.hideHanzi? "" : info.ch) : ""}</li>`);
            }
        }
        wordUl += `</ul>`;
        return wordUl;
    },
    createCiyuBlock: function(store, line, content){
        let block = '';
        let infos = Util.loadLineWordsFromCache(store, content);
        let splitInfos = Util.splitArray(infos, function(o){
            return o.ch === " ";
        });

        for(let i=0; i<splitInfos.length; i++){
            let ciyu = `<div style="float: left;margin-right:${store.ciyuMarginRight}px;margin-bottom:${store.ciyuMarginBottom}px;">`;
            //拼音
            if(store.pinyinShow){
                ciyu += Util.createPinyinBlock(splitInfos[i], store, splitInfos[i].length);
            }
            store.lineIndex = 0;
            //汉字
            for(let l=0;l<=store.fillHanziLines;l++){
                ciyu += Util.createHanziBlock(splitInfos[i], line, l, store, splitInfos[i].length);
                store.lineIndex++;
            }
            //空行
            for(let l=0;l<store.fillEmptyLines;l++){
                ciyu += Util.createHanziBlock(Util.formatEmptyWords(splitInfos[i]), line, l, store, splitInfos[i].length);
                store.lineIndex++;
            }
            block += ciyu + `</div>`;
        }
        return block;
    },
    createBlockLine:function(store, info, line){
        const blockBorder = `${Util.hexToRgba(store.borderOutlineColor, store.borderOutlinOpacity/100)} ${store.borderOutlineSize}px ${store.borderOutlineStyle}`;
        const blockStyle = `margin-bottom: ${store.blockMarginTop!==undefined?store.blockMarginTop:4}px; border: ${blockBorder}; border-radius: ${store.borderOutlineRadius}px; position: relative;float: left;`;
        console.log('boxLeftRightRate:', store.boxLeftRightRate, 100-store.boxLeftRightRate)
        const leftStyle = `float: left; width: ${store.boxLeftRightRate?store.boxLeftRightRate:'24.5'}%; color: #980F29;`;
        const rightStyle = `float: left;width: ${store.boxLeftRightRate?(100-store.boxLeftRightRate):'75.5'}%;`;
        let blockLine = `<div style="${blockStyle}">`;

        let blockLineLeft = `<div style="${leftStyle}">`;
        blockLineLeft += Util.createXiziBasicPinyinBlock(store, info.py);
        blockLineLeft += Util.createXiziSampleBlock(store, info.ch);
        blockLineLeft += Util.createXiziBasicInfoBlock(store, info.sk.length, info.rd);
        blockLineLeft += `</div>`;
        blockLine += blockLineLeft;

        let blockLineRight = `<div style="${rightStyle}">`;
        if(store.customShow){
            blockLineRight += Util.createXiziCustomLine(store, "");
        }
        //行头
        blockLineRight += Util.createXiziTopLine(info, line, store);
        //拼音
        if(store.pinyinShow){
            blockLineRight += Util.createXiziPinyinLine(info, line, store);
        }
        store.lineIndex = 0;
        //汉字
        for(let l=0;l<=store.fillHanziLines;l++){
            blockLineRight += Util.createXiziHanziLine(info, line, l, store);
            store.lineIndex++;
        }
        //空行
        for(let l=0;l<store.fillEmptyLines;l++){
            blockLineRight += Util.createXiziHanziLine({ch:''}, line, l, store);
            store.lineIndex++;
        }
        blockLineRight += `</div>`;
        blockLine += blockLineRight;
        blockLine += `</div>`;

        return blockLine;

    },
    createXiziSampleBlock: function(store, word){
        const boxStyle = `text-align: center;width: 167px;height: 30px;float: left;margin-left:${store.sampleMarginLeft}px;margin-top: ${store.sampleMarginTop}px;`;
        const bgurl = `url(&quot;${store.sampleBoxImage}&quot;) no-repeat`;
        const border = `${store.sampleBoxOutlineSize}px ${store.sampleBoxOutlineColor} ${store.sampleBoxOutlineStyle}`;
        const basicSpanStyle = `padding: 0;margin: 0 auto;display: block;border: ${border};width: ${store.sampleBoxSize}px;height: ${store.sampleBoxSize}px;line-height: 57px;background: ${bgurl};background-size: ${store.sampleBoxSize}px ${store.sampleBoxSize}px;text-align: center;color: ${store.sampleColor};border-radius: 5px;overflow: hidden;`;
        const padding = store.samplePaddingLeft > 0 ? "left" : "right";
        return `<div style="${boxStyle}">
                    <span style="${basicSpanStyle}font-family:'${store.sampleFont}';font-size:${store.sampleSize}px;line-height:${store.sampleLineHeight}px;padding-${padding}:${Math.abs(store.samplePaddingLeft)}px;">${word}</span>
                </div>`;
    },
    createXiziBasicPinyinBlock: function(store, pinyins){
        const style = `width: 167px;padding: 0 ${store.samplePinyinPaddingLeft}px;height: ${store.samplePinyinLineHeight}px;line-height: ${store.samplePinyinLineHeight}px;text-align: center;overflow: hidden;`;
        const spanStyle = `margin-right: 5px;padding: 3px;font-family: '${store.samplePinyinFont}';font-size: ${store.samplePinyinSize}px;letter-spacing:${store.samplePinyinLetterSpacing}px;color:${store.samplePinyinColor}`;

        let div = `<div style="${style}">`;

        if(pinyins && pinyins.length > 0){
            pinyins.forEach(py=>{
                div += `<span style="${spanStyle}" contenteditable="plaintext-only">${py}</span>`;
            });
        }
        
        div += `</div>`;
        return div;
    },
    createXiziBasicInfoBlock: function(store, bishu, bushou){
        const basicStyle = `width: 167px;text-align: center;color:${store.sampleBihuaBushouColor};font-family:'${store.sampleBihuaBushouFont}';font-size: ${store.sampleBihuaBushouSize}px;position: absolute;left:${store.sampleBihuaBushouMarginLeft}px;bottom: ${store.sampleBihuaBushouMarginBottom}px;`;
        const border = `${store.sampleBihuaBushouBoxOutlineColor} ${store.sampleBihuaBushouBoxOutlineSize}px ${store.sampleBihuaBushouBoxOutlineStyle}`;
        const leftStyle = `width: ${store.sampleBihuaBushouBoxWidth}px;border: ${border};border-radius: 3px;overflow: hidden;display: inline-block;`;
        const padding = store.samplePaddingLeft < 0 ? 'right' : 'left';
        const leftSpanStyle = `display: block;padding-${padding}:${Math.abs(store.samplePaddingLeft)}px;height: ${store.sampleBihuaBushouBoxHeight}px;line-height: ${store.sampleBihuaBushouLineHeight}px;`;
        const rightStyle = `width: ${store.sampleBihuaBushouBoxWidth}px;border: ${border};border-radius: 3px;overflow: hidden;display: inline-block;margin-left: 10px;`;
        const rightSpanStyle = `display: block;padding-${padding}:${Math.abs(store.samplePaddingLeft)}px;height: ${store.sampleBihuaBushouBoxHeight}px;line-height: ${store.sampleBihuaBushouLineHeight}px;`;
        const bottomBorder = `${store.sampleBihuaBushouBoxInlineColor} ${store.sampleBihuaBushouBoxInlineSize}px ${store.sampleBihuaBushouBoxInlineStyle}`;
        return `<div style="${basicStyle}">
                    <div style="${leftStyle}">
                        <span style="${leftSpanStyle}background: ${store.sampleBihuaBushouUpBackgroundColor};border-bottom: ${bottomBorder};">笔画</span>
                        <span style="${leftSpanStyle}background: ${store.sampleBihuaBushouDownBackgroundColor}" contenteditable="plaintext-only">${bishu}</span>
                    </div>
                    <div style="${rightStyle}">
                        <span style="${rightSpanStyle}background: ${store.sampleBihuaBushouUpBackgroundColor};border-bottom: ${bottomBorder};">部首</span>
                        <span style="${rightSpanStyle}background: ${store.sampleBihuaBushouDownBackgroundColor}" contenteditable="plaintext-only">${bushou}</span>
                    </div>
                </div>`;
    },
    createXiziCustomLine: function(store, words){
        const border = `${store.blockOutlineSize}px ${store.blockOutlineColor} ${store.blockOutlineStyle}`;
        const style = `padding: 0 ${store.customPaddingLeft}px;height: ${store.customHeight}px;line-height: ${store.customLineHeight}px;font-size: ${store.customSize}px;border-left: ${border};border-bottom: ${border};overflow: hidden;text-align: left;color: ${store.customColor};`;
        return `<div style="${style}" contenteditable="plaintext-only">${words}</div>`;
    },
    createXiziTopPinyinBlock: function(content, clazz, label, store){
        if(!store.noTopLabel){
            store.noTopLabel = false;
        }
        const todo = store.hide ? "" : "todo";
        let block = '';
        if(store.noTopLabel){
            block = `<span class='${clazz} ${todo} first' style='${store.basicPinyin?"width:auto;float:none;":""}background-color:${store.topLeftBackgroundColor};color:${store.topAnswerColor};font-size:${store.topSize}px;' onclick='modify(this, "${content}")' contenteditable='plaintext-only' data-pyarr='${content}'>${content[0]}</span>`;
        }else{
            block = `<span class='${clazz}' style='background-color:${store.topLeftBackgroundColor};font-size:${store.topSize}px;'>${label}</span><em onclick='modify(this, "${content}")' class='${store.hide?"":"todo"} first' contenteditable='plaintext-only' style='background-color:${store.topAnswerBackgroundColor};color:${store.topAnswerColor};font-size:${store.topSize}px;' data-pyarr='${content}'>${content[0]}</em>`;
        }
        return block;
    },
    createXiziTopBlock: function(content, clazz, label, store){
        return `<span class='${clazz}' style='font-size:${store.topSize}px;'>${label}</span><em contenteditable='plaintext-only' data-label='${label}' oninput="emChange(this)" style='background-color:${store.topAnswerBackgroundColor};color:${store.topAnswerColor};font-size:${store.topSize}px;'>${content}</em>`;
    },
    createXiziStrokeLine: function(info, store){
        let line =  `<ul class='stroke-order'>`;
        for(let i=0;i<=info.sk.length;i++){
            if(!store.draw){
                line +=  `<li style="width:${store.topStrokeOrderSize*1000}px;">` + Util.drawStroke(info.sk, i, store.topCurrentStrokeColor, store.topOtherStrokeColor, store.topStrokeOrderSize) + "</li>";
            }else{
                line +=  `<li style="width:${Math.floor(19*(store.topStrokeOrderSize*100)/98)}px;">` + Util.drawStrokeOrder(info.sk, i, store.topCurrentStrokeColor, store.topOtherStrokeColor, store.topStrokeOrderSize, 200, 800, "0 0 1024 1024") + "</li>";//0.98
            }
        }
        line += `</ul>`;
        return line;
    },
    createXiziTopLine: function(info, l, store){
        let block = '';
        if(store.topPinyinShow || store.topBushouShow || 
            store.topBishuShow || store.topBishunShow || store.topZuciShow){
            let border = `${store.topOutlineSize}px ${store.topOutlineColor} ${store.topOutlineStyle}`;
            block = `<div data-hide='${store.hide}' class="basic-block" style='font-family:"${store.topFont}";background:${store.topStrokeOrderBackgroundColor};${l==0 && !store.customShow ? 'border:' + border + ';border-bottom:none;': 'border-left:'+border+';'}border-right:none;'>`;
            if(store.topPinyinShow || store.topBushouShow || store.topBishuShow || store.topZuciShow){
                const leftWidth = store.topLeftWidth ? `width:${store.topLeftWidth}px;` : "";
                block += `<div class='basic-info' data-key='${info.ch}' style='${leftWidth}${store.noMarginleft?"margin-left:0;":""}border-right:${border};background:${store.topLeftBackgroundColor};${store.noTopLabel?"min-width:56px;":""}'>`;
                if(store.topPinyinShow){
                    block += this.createXiziTopPinyinBlock(info.py, 'basic-info-left line-header-pinyin', '拼音', store);
                }
                if(store.topBushouShow){
                    block += this.createXiziTopBlock(info.rd, 'basic-info-left line-header-bushou', '部首', store);
                }
                if(store.topBishuShow){
                    block += this.createXiziTopBlock(info.sk.length, 'basic-info-left line-header-bishu', '笔画', store);
                }
                if(store.topZuciShow){
                    block += this.createXiziTopBlock('', 'basic-info-left line-header-zuci', '组词', store);
                }
                block += "</div>";
            }
            if(store.topBishunShow){
                block += this.createXiziStrokeLine(info, store);
            }else{
                block += `<span contenteditable='plaintext-only' style='display: inline-block;width: 450px;height: auto;line-height: 30px;float: left;font-size: 14px;text-align: left;'></span>`
            }
            block += "</div>";
        }
        return block;
    },
    createXiziPinyinLine: function(info, l, store, line){
        let pinyinUl = `<ul data-hide='${store.hide}' class='pinyin${store.hide?"":" todo"}' data-pyarr='${info.py}' data-pinyin='${info.py[0]}'>`;
        for(let py=0;py<store.columnsPerLine;py++){
            const noRight = store.noRight && (py == store.columnsPerLine-1);
            const bgurl = `url(&quot;${store.pinyinBoxArray[py].bgImg}&quot;) no-repeat`;
            const border = `${store.pinyinBoxOutlineSize}px ${store.pinyinBoxOutlineColor} ${store.pinyinBoxOutlineStyle}`;
            const pinyin = info.py[0];
            let pinyinSize = store.pinyinSize;
            let pinyinLineHeight = store.pinyinLineHeight
            if(pinyin.length > 5){
                if(store.longPinyinSize){
                    pinyinSize = store.longPinyinSize;
                }
                if(store.longPinyinLineHeight){
                    pinyinLineHeight = store.longPinyinLineHeight;
                }
            }
            pinyinUl += (`<li ${info.ch ? "onclick='modifyPinyin(this)'" : ""}  contenteditable="plaintext-only" class="${py==0 && !line ? "first-phonetic" : "other-phonetic"}" style="${py==0?"border-left:"+border+";":""}${(store.topPinyinShow || store.topBushouShow || store.topBishuShow || store.topBishunShow || l==0)?"border-top:"+border+";":""};${noRight?"":"border-right:" + border};letter-spacing:${store.pinyinLetterSpacing}px;width:${store.boxSize}px;height:${store.boxSize/2}px;line-height:${pinyinLineHeight}px;background:${bgurl};background-size:${store.boxSize}px ${store.boxSize/2}px;font-family:'${store.pinyinFont}';font-size:${pinyinSize}px;color:${py==0 && !line ? store.firstPinyinColor : store.otherPinyinColor};text-align:${store.pinyinPosition}">${py % (store.fillBlankTimes+1) == 0 && py < (store.fillPinyinTimes * (store.fillBlankTimes+1)) ? pinyin : ""}</li>`);
        }
        pinyinUl += `</ul>`;
        return pinyinUl;
    },
    createXiziHanziLine: function(info, l, line, store){
        let lineIndex = store.lineIndex?store.lineIndex:line;
        const noBottom = (store.lineIndex == (store.fillHanziLines+store.fillEmptyLines));
        let wordUl = `<ul data-hide='${store.hide}' class='word ${line==0 ? "first-line" : "other-line"}' data-word='${info.ch}' style='${store.hanziBoxMarginTop?"margin-top:"+store.hanziBoxMarginTop+"px;":""}'>`;
        for(let w=0;w<store.columnsPerLine;w++){
            const noRight = store.noRight && (w == store.columnsPerLine-1);
            const bgurl = `url(&quot;${store.boxArray[lineIndex][w].bgImg}&quot;) no-repeat`;
            const border = `${store.boxArray[lineIndex][w].outlineSize}px ${store.boxArray[lineIndex][w].outlineColor} ${store.boxArray[lineIndex][w].outlineStyle}`;
            wordUl += (`<li contenteditable="plaintext-only" oninput="inputHandle(this)" onpaste="pasteHandle(this)" class="${w==0 && line==0 ? "first-word" : "other-word"}" style="${line==0 && info.ch && (store.pinyinShow||store.topPinyinShow || store.topBushouShow || store.topBishuShow || store.topBishunShow || l==0) ? "border-top:"+border+";":""}${w==0?"border-left:"+border+";":""}${noRight?"":"border-right:" + border};${noBottom ? "" : "border-bottom:"+border+";"}width:${store.boxSize}px;height:${store.boxSize}px;line-height:${store.hanziLineHeight}px;${store.hanziPaddingLeft > 0 ? "padding-left:"+store.hanziPaddingLeft+"px" : "padding-right:"+(store.hanziPaddingLeft*-1)+"px"};background:${bgurl};background-size:${store.boxSize}px ${store.boxSize}px;font-family:'${store.hanziFont}';font-size:${store.hanziSize}px;color:${w==0 && line==0 ? store.firstHanziColor : store.otherHanziColor};text-align:${store.hanziPosition}">${w % (store.fillBlankTimes+1) == 0 && w < (store.fillHanziTimes * (store.fillBlankTimes+1)) ? info.ch : ""}</li>`);
        }
        wordUl += `</ul>`;
        return wordUl;
    },
    createWordBlock: function(i, wd, storage){
        let info = Util.loadWordFromCache(storage, wd);
        
        storage.hide = info.py && info.py.length <= 1;
        let border = `${storage.topOutlineSize}px ${storage.topOutlineColor} ${storage.topOutlineStyle}`;
        let block = `<div style="float:left;margin: 3px;border-top: ${border};">`;
        //行头
        block += Util.createTopLine(info, i, storage);
        //拼音
        if(storage.pinyinShow){
            block += Util.createPinyinLine(info, i, storage);
        }
        storage.lineIndex = 0;
        //汉字
        for(let l=0;l<=storage.fillHanziLines;l++){
            block += Util.createHanziLine(info,i, l, storage);
            storage.lineIndex++;
        }
        //空行
        for(let l=0;l<storage.fillEmptyLines;l++){
            block += Util.createHanziLine({ch:''},i, l, storage);
            storage.lineIndex++;
        }
        block += `</div>`;
        return block;
    },
    createGuLine: function(info, l, line, store){
        let lineIndex = store.lineIndex?store.lineIndex:line;
        let wordUl = `<ul data-hide='${store.hide}' class='line ${line==0 ? "first-line" : "other-line"}' data-word='${info.ch}' style='${store.hanziBoxMarginTop?"margin-top:"+store.hanziBoxMarginTop+"px;":""}'>`;
        for(let w=0;w<store.columnsPerLine;w++){
            const noRight = store.noRight && (w == store.columnsPerLine-1);
            const bgurl = `url(&quot;${store.boxArray[lineIndex][w].bgImg}&quot;) no-repeat`;
            const border = `${store.boxOutlineSize}px ${store.boxOutlineColor} ${store.boxOutlineStyle}`;
            wordUl += (`<li contenteditable="plaintext-only" oninput="inputHandle(this)" onpaste="pasteHandle(this)" class="${w==0 && line==0 ? "first-word" : "other-word"}" style="${line==0 && info.ch && (store.pinyinShow||store.topPinyinShow || store.topBushouShow || store.topBishuShow || store.topBishunShow || l==0) ? "border-top:"+border+";":""}${w==0?"border-left:"+border+";":""}${noRight?"":"border-right:" + border};${noBottom ? "" : "border-bottom:"+border+";"}width:${store.boxSize}px;height:${store.boxSize}px;line-height:${store.hanziLineHeight}px;${store.hanziPaddingLeft > 0 ? "padding-left:"+store.hanziPaddingLeft+"px" : "padding-right:"+(store.hanziPaddingLeft*-1)+"px"};background:${bgurl};background-size:${store.boxSize}px ${store.boxSize}px;font-family:'${store.hanziFont}';font-size:${store.hanziSize}px;color:${w==0 && line==0 ? store.firstHanziColor : store.otherHanziColor};text-align:${store.hanziPosition}">${w % (store.fillBlankTimes+1) == 0 && w < (store.fillHanziTimes * (store.fillBlankTimes+1)) ? info.ch : ""}</li>`);
        }
        wordUl += `</ul>`;
        return wordUl;
    },
    createGuPage: function(store, words){
        // if(words && words.length > 0){
        //     let content = "";
        //     store.lineIndex = 0;
        //     for(let i=0; i<store.wordsPerPage; i++){

        //         content += Util.createGuLine(info, i, 0, store);
        //         store.lineIndex++;
        //     }
        //     return content;
        // }else{
        //     return "";
        // }
    },
    fillBorder: function(page){
        //需要检查首行是否有上边框。
        let firstUl = preview.$(page).find('ul:first-child');
        let firstLi = preview.$(firstUl).find('li:first-child');
        if(firstLi.css('border-top-style') === 'none' || firstLi.css('border-top-width') === '0px'){
            preview.$(firstUl).find('li').css('border-top', firstLi.css('border-left'));
        }
        //需要检查末行是否有下边框。
        let lastUl = preview.$(page).find('ul:last-child');
        let lastLi = lastUl.find('li:first-child');
        if(lastLi.css('border-bottom-style') === 'none' || lastLi.css('border-bottom-width') === '0px'){
            preview.$(lastUl).find('li').css('border-bottom', lastLi.css('border-left'));
        }
    },
    formatPage: function(store){
        let pages = preview.$('.page');
        let total = parseInt(preview.$('.page:first-child').find('.total-page').text().replace(/[共页\/\s]/g,''));
        pages.each(function(index, page){
            let totalLinePerPage = store.wordsPerPage*(1+store.fillHanziLines + store.fillEmptyLines);
            if(store.pinyinShow){
                totalLinePerPage += store.wordsPerPage;
            }
            let uls = preview.$(page).find('ul');
            if(uls.length > totalLinePerPage){
                let removeUls = [];
                for(let uIndex=totalLinePerPage; uIndex<uls.length; uIndex++){
                    removeUls.push(uls[uIndex]);
                }
                if(index === pages.length - 1){
                    //超出总页数，新增页面
                    let lastPage = preview.$(page);
                    let needToAdds = Math.ceil(removeUls.length / totalLinePerPage);
                    total += needToAdds;
                    for(let p=0; p<needToAdds; p++){
                        let newPage = lastPage.clone();
                        let num = newPage.find('.curr-page').text().replace(/[第页\s]/g,'');
                        newPage.find('.curr-page').text(`第${++num}页`);
                        newPage.find('.content').empty();
                        let start = totalLinePerPage*p;
                        let end = start + totalLinePerPage;
                        let subUls = removeUls.slice(start,end);
                        console.log(newPage, start, end, subUls)
                        for(let l=0; l<subUls.length; l++){
                            let ul = subUls[l];
                            preview.$(ul).appendTo(newPage.find('.content'));
                        }
                        newPage.appendTo(preview.$('.book'));
                        Util.fillBorder(newPage);
                    }
                }else{
                    let nextPage = preview.$(pages[index + 1]);
                    for(let r=removeUls.length-1; r>=0; r--){
                        let ul = removeUls[r];
                        preview.$(ul).prependTo(nextPage.find('.content'));
                    }
                }
            }
            Util.fillBorder(page);
        });
        preview.$('.total-page').text(` / 共${total}页`);
    },
    formatRadius: function(store){
        preview.$('.content>ul:first-child').find('li:first-child').css('border-top-left-radius','50%');
        preview.$('.content>ul:first-child').find('li:last-child').css('border-top-right-radius','50%');
        preview.$('.content>ul:last-child').find('li:last-child').css('border-bottom-right-radius','50%');
        preview.$('.content>ul:last-child').find('li:first-child').css('border-bottom-left-radius','50%');
    },
    //设计模板专用
    formatArticleDisign: function(store, article){
        let array = [];
        const count = parseInt(store.article.boses);
        const paras = article.split('\n');
        for(let p=0; p<paras.length; p++){
            const para = paras[p];
            let i = 0;
            for(; i<para.length; i += count){
                let tmp = (i + count) <= para.length ? para.substr(i, count) : para.substr(i);
                console.log(i, count, tmp)
                if(store.hideHanziFlag){
                    if(para.length >= (i+count+1) && /[。，：”；！？、’]+/.test(para.substr(i+count, 1))){
                        tmp += para.substr(i+count, 1);
                        i++;
                    }
                }

                if(store.contentPaddingLeft){
                    let paddingLength = count > (tmp.length + store.contentPaddingLeft) ? (tmp.length + store.contentPaddingLeft) : count;
                    tmp = Util.paddingLeft(tmp, paddingLength, ' ');
                }
                array.push(Util.paddingRight(tmp, count, ' '));
            }
        }
        
        return array;
    },
    formatArticlesDisign: function(store, text){
        const array = text.split("\n\n\n");
        let articles = [];
        if(array && array.length > 0){
            array.forEach((s)=>{
                let items = s.split("\n\n");
                if(items && items.length > 1){
                    let article = {
                        title:items[0].replace(/\n/g,""),
                        words: (store.isCizu ? (store.isDuoci ? Util.formatDuoci(store, items[1]) : Util.formatCiyu(store, items[1])) : Util.formatArticleDisign(store, items[1]))
                    };
                    articles.push(article);
                }else if(items && items.length > 0){
                    let article = {
                        title:"",
                        words: (store.isCizu ? (store.isDuoci ? Util.formatDuoci(store, items[0]) : Util.formatCiyu(store, items[0]))  : Util.formatArticleDisign(store, items[0]))
                    };
                    articles.push(article);
                }
            });
        }
        // console.log(text, articles);
        return Util.articlesToArray(articles);
    },

    createSingleWordDisign: function(store, info, prop){
        if(!prop){
            prop = store.sampleWord;
        }
        
        // let background = `&quot;data:image/svg+xml,<svg width='80px' height='80px' version='1.1' xmlns='http://www.w3.org/2000/svg'><path d='M-2 40 L80 40' stroke-dasharray='${prop.innerlineDash}' stroke-width='${prop.innerlineWidth}' stroke='${Util.hexToRgb(prop.innerlineColor)}' stroke-opacity='${prop.innerlineOpacity}%' fill-opacity='0'></path><path d='M40 -2 L40 80' stroke-dasharray='${prop.innerlineDash}' stroke-width='${prop.innerlineWidth}' stroke='${Util.hexToRgb(prop.innerlineColor)}' stroke-opacity='${prop.innerlineOpacity}%' fill-opacity='0'></path></svg>&quot;`;
        let background = `&quot;${Util.svgMaker(prop.boxType, prop.innerlineDash, prop.innerlineWidth, prop.innerlineColor, prop.innerlineOpacity, prop.svgMap)}&quot;`;
        let border = `border-left:${prop.leftOutlineStyle} ${prop.leftOutlineWidth}px ${prop.leftOutlineColor};border-top:${prop.topOutlineStyle} ${prop.topOutlineWidth}px ${prop.topOutlineColor};border-bottom:${prop.bottomOutlineStyle} ${prop.bottomOutlineWidth}px ${prop.bottomOutlineColor};border-right:${prop.rightOutlineStyle} ${prop.rightOutlineWidth}px ${prop.rightOutlineColor};`;
        let borderRadius = `border-top-left-radius: ${prop.borderTopLeftRadius}px;border-top-right-radius: ${prop.borderTopRightRadius}px;border-bottom-right-radius: ${prop.borderBottomRightRadius}px;border-bottom-left-radius: ${prop.borderBottomLeftRadius}px;`;
        let style = `display: block;${prop.clearBoth ? `clear:${prop.clearBoth};` : ``}${prop.float && prop.float ? 'float:'+prop.float+';' : ''}${border}${borderRadius}width:${prop.width}px;height:${prop.height}px;font-family:'${prop.fontFamily}';overflow: hidden;font-size:${prop.fontSize}px;line-height:${prop.fontLineHeight}px;color:${prop.fontColor};${prop.fontPaddingLeft>=0?'padding-left:'+prop.fontPaddingLeft+'px;':'padding-right:'+Math.abs(prop.fontPaddingLeft)+'px;'}background: url(${background}) no-repeat;background-size: ${prop.width}px ${prop.height}px;`;
        let span = `<span contenteditable="plaintext-only" style="${style}">${info&&info.ch?info.ch:''}</span>`;
        return span;
    },
    createPinyinLineDisign: function(store, info){
        return '';
    },
    formatCopyRules: function(rules, max){
        let ruleArr;
        if(rules){
            ruleArr = Util.paddingRight(rules.match(/[[0-9]*/g).join(''), max, '0');
        }else{
            ruleArr = [];
        }
        return ruleArr;
    },
    createHanziLineDisign: function(store, info, prop){//增加对嵌套类模板对支持
        if(!prop){
            prop = store.copy;
        }
        let copyRules = Util.formatCopyRules(prop.copyRules, prop.boses);
        // let background = `&quot;data:image/svg+xml,<svg width='80px' height='80px' version='1.1' xmlns='http://www.w3.org/2000/svg'><path d='M-2 40 L80 40' stroke-dasharray='${prop.innerlineDash}' stroke-width='${prop.innerlineWidth}' stroke='${Util.hexToRgb(prop.innerlineColor)}' stroke-opacity='${prop.innerlineOpacity}%' fill-opacity='0'></path><path d='M40 -2 L40 80' stroke-dasharray='${prop.innerlineDash}' stroke-width='${prop.innerlineWidth}' stroke='${Util.hexToRgb(prop.innerlineColor)}' stroke-opacity='${prop.innerlineOpacity}%' fill-opacity='0'></path></svg>&quot;`;
        let background = `&quot;${Util.svgMaker(prop.boxType, prop.innerlineDash, prop.innerlineWidth, prop.innerlineColor, prop.innerlineOpacity, prop.svgMap)}&quot;`;
        let master = ``;
        for(let i=0; i<prop.boses; i++){
            let border = ``;
            if(i == 0 || prop.marginRight > 0){
                border = `border-left:${prop.leftOutlineStyle} ${prop.leftOutlineWidth}px ${prop.leftOutlineColor};border-top:${prop.topOutlineStyle} ${prop.topOutlineWidth}px ${prop.topOutlineColor};border-bottom:${prop.bottomOutlineStyle} ${prop.bottomOutlineWidth}px ${prop.bottomOutlineColor};border-right:${prop.middleOutlineStyle} ${prop.middleOutlineWidth}px ${prop.middleOutlineColor};`;
            }else if(i == prop.boses - 1 ){
                border = `border-top:${prop.topOutlineStyle} ${prop.topOutlineWidth}px ${prop.topOutlineColor};border-bottom:${prop.bottomOutlineStyle} ${prop.bottomOutlineWidth}px ${prop.bottomOutlineColor};border-right:${prop.rightOutlineStyle} ${prop.rightOutlineWidth}px ${prop.rightOutlineColor};`;
            }else{
                border = `border-top:${prop.topOutlineStyle} ${prop.topOutlineWidth}px ${prop.topOutlineColor};border-bottom:${prop.bottomOutlineStyle} ${prop.bottomOutlineWidth}px ${prop.bottomOutlineColor};border-right:${prop.middleOutlineStyle} ${prop.middleOutlineWidth}px ${prop.middleOutlineColor};`;
            }
            master += `<li contenteditable="plaintext-only" style="${border}width:${prop.width}px;height:${prop.height}px;font-family:'${prop.fontFamily}';font-size:${prop.fontSize}px;line-height:${prop.fontLineHeight}px;color:${(copyRules && copyRules.length > 0) ? (copyRules[i] !== "1" ? prop.secondFontColor : prop.firstFontColor) : (i==0?prop.firstFontColor:prop.secondFontColor)};${prop.marginRight !== 0 ? `margin-right:${prop.marginRight};` : ''}${prop.fontPaddingLeft==0?'text-align:center;': (prop.fontPaddingLeft > 0 ? 'padding-left:'+prop.fontPaddingLeft+'px;':'padding-right:'+Math.abs(prop.fontPaddingLeft)+'px;')}background:url(${background}) no-repeat;background-size:${prop.width}px ${prop.height}px;">${(copyRules && copyRules.length > 0) ? (copyRules[i] !== "0" ? info.ch : "") : (i % (prop.fillBlankTimes+1) == 0 && i < (prop.fillHanziTimes * (prop.fillBlankTimes+1)) ? info.ch : "")}</li>`
        }
        let style = `margin-top:${prop.marginTop}px;${prop.clearBoth ? `clear:${prop.clearBoth};` : ``}overflow: hidden;`;
        let block = `<ul data-word="${info.ch}" style="${style}">${master}</ul>`;
        return block;
    },
    createHanziBlankLineDisign: function(store, info, prop){
        if(!prop){
            prop = store.blank;
        }
        
        // let background = `&quot;data:image/svg+xml,<svg width='80px' height='80px' version='1.1' xmlns='http://www.w3.org/2000/svg'><path d='M-2 40 L80 40' stroke-dasharray='${prop.innerlineDash}' stroke-width='${prop.innerlineWidth}' stroke='${Util.hexToRgb(prop.innerlineColor)}' stroke-opacity='${prop.innerlineOpacity}%' fill-opacity='0'></path><path d='M40 -2 L40 80' stroke-dasharray='${prop.innerlineDash}' stroke-width='${prop.innerlineWidth}' stroke='${Util.hexToRgb(prop.innerlineColor)}' stroke-opacity='${prop.innerlineOpacity}%' fill-opacity='0'></path></svg>&quot;`;
        let background = `&quot;${Util.svgMaker(prop.boxType, prop.innerlineDash, prop.innerlineWidth, prop.innerlineColor, prop.innerlineOpacity, prop.svgMap)}&quot;`;
        let master = ``;
        for(let i=0; i<prop.boses; i++){
            let border = ``;
            if(i == 0){
                border = `border-left:${prop.leftOutlineStyle} ${prop.leftOutlineWidth}px ${prop.leftOutlineColor};border-top:${prop.topOutlineStyle} ${prop.topOutlineWidth}px ${prop.topOutlineColor};border-bottom:${prop.bottomOutlineStyle} ${prop.bottomOutlineWidth}px ${prop.bottomOutlineColor};border-right:${prop.middleOutlineStyle} ${prop.middleOutlineWidth}px ${prop.middleOutlineColor};`;
            }else if(i == prop.boses - 1 ){
                border = `border-top:${prop.topOutlineStyle} ${prop.topOutlineWidth}px ${prop.topOutlineColor};border-bottom:${prop.bottomOutlineStyle} ${prop.bottomOutlineWidth}px ${prop.bottomOutlineColor};border-right:${prop.rightOutlineStyle} ${prop.rightOutlineWidth}px ${prop.rightOutlineColor};`;
            }else{
                border = `border-top:${prop.topOutlineStyle} ${prop.topOutlineWidth}px ${prop.topOutlineColor};border-bottom:${prop.bottomOutlineStyle} ${prop.bottomOutlineWidth}px ${prop.bottomOutlineColor};border-right:${prop.middleOutlineStyle} ${prop.middleOutlineWidth}px ${prop.middleOutlineColor};`;
            }
            master += `<li contenteditable="plaintext-only" style="${border}width:${prop.width}px;height:${prop.height}px;font-family:'${prop.fontFamily}';font-size:${prop.fontSize}px;line-height:${prop.fontLineHeight}px;color:${i==0?prop.firstFontColor:prop.secondFontColor};${prop.fontPaddingLeft>=0?'padding-left:'+prop.fontPaddingLeft+'px;':'padding-right:'+Math.abs(prop.fontPaddingLeft)+'px;'}background:url(${background}) no-repeat;background-size:${prop.width}px ${prop.height}px;"></li>`
        }
        let style = `margin-top:${prop.marginTop}px;${prop.clearBoth ? `clear:${prop.clearBoth};` : ``}overflow: hidden;`;
        let block = `<ul style="${style}">${master}</ul>`;
        return block;
    },
    createBihuaLineDisign: function(store, bihua, prop){//增加对嵌套类模板对支持
        if(!prop){
            prop = store.bihua;
        }
        let bihuaSvg = Util.createWordBihua(prop.bihuaPaths[bihua].paths, {translateX: prop.fontPaddingLeft, translateY: prop.fontLineHeight, scale: prop.fontSize/100, dasharray: '3 3', dashwidth: 1, dashcolor:prop.fontColor, dashopacity: 100, fillopacity: 100});
        let copyRules = Util.formatCopyRules(prop.copyRules, prop.boses);
        let background = `&quot;${Util.svgMaker(prop.boxType, prop.innerlineDash, prop.innerlineWidth, prop.innerlineColor, prop.innerlineOpacity, prop.svgMap)}&quot;`;
        let master = ``;
        for(let i=0; i<prop.boses; i++){
            let border = ``;
            if(i == 0 || prop.marginRight > 0){
                border = `border-left:${prop.leftOutlineStyle} ${prop.leftOutlineWidth}px ${prop.leftOutlineColor};border-top:${prop.topOutlineStyle} ${prop.topOutlineWidth}px ${prop.topOutlineColor};border-bottom:${prop.bottomOutlineStyle} ${prop.bottomOutlineWidth}px ${prop.bottomOutlineColor};border-right:${prop.middleOutlineStyle} ${prop.middleOutlineWidth}px ${prop.middleOutlineColor};`;
            }else if(i == prop.boses - 1 ){
                border = `border-top:${prop.topOutlineStyle} ${prop.topOutlineWidth}px ${prop.topOutlineColor};border-bottom:${prop.bottomOutlineStyle} ${prop.bottomOutlineWidth}px ${prop.bottomOutlineColor};border-right:${prop.rightOutlineStyle} ${prop.rightOutlineWidth}px ${prop.rightOutlineColor};`;
            }else{
                border = `border-top:${prop.topOutlineStyle} ${prop.topOutlineWidth}px ${prop.topOutlineColor};border-bottom:${prop.bottomOutlineStyle} ${prop.bottomOutlineWidth}px ${prop.bottomOutlineColor};border-right:${prop.middleOutlineStyle} ${prop.middleOutlineWidth}px ${prop.middleOutlineColor};`;
            }
            master += `<li contenteditable="plaintext-only" style="${border}width:${prop.width}px;height:${prop.height}px;font-family:'${prop.fontFamily}';font-size:${prop.fontSize}px;line-height:${prop.fontLineHeight}px;color:${(copyRules && copyRules.length > 0) ? (copyRules[i] !== "1" ? prop.secondFontColor : prop.firstFontColor) : (i==0?prop.firstFontColor:prop.secondFontColor)};${prop.marginRight !== 0 ? `margin-right:${prop.marginRight};` : ''}${prop.fontPaddingLeft==0?'text-align:center;': (prop.fontPaddingLeft > 0 ? 'padding-left:'+prop.fontPaddingLeft+'px;':'padding-right:'+Math.abs(prop.fontPaddingLeft)+'px;')}background:url(${background}) no-repeat;background-size:${prop.width}px ${prop.height}px;">${(copyRules && copyRules.length > 0) ? (copyRules[i] !== "0" ? (bihua > -1?bihuaSvg:'') : "") : (i % (prop.fillBlankTimes+1) == 0 && i < (prop.fillHanziTimes * (prop.fillBlankTimes+1)) ? (bihua > -1?bihuaSvg:'') : "")}</li>`
        }
        let style = `margin-top:${prop.marginTop}px;${prop.clearBoth ? `clear:${prop.clearBoth};` : ``}overflow: hidden;`;
        let block = `<ul data-word="${bihua}" style="${style}">${master}</ul>`;
        return block;
    },
    createArticleHanziLineDisign: function(store, infos, prop){
        if(!prop){
            prop = store.article;
        }
        
        let background = `&quot;${Util.svgMaker(prop.boxType, prop.innerlineDash, prop.innerlineWidth, prop.innerlineColor, prop.innerlineOpacity, prop.svgMap)}&quot;`;
        let master = ``;
        for(let i=0; i<prop.boses; i++){
            const info = infos[i] || {ch:''};
            let border = ``;
            if(i == 0){
                border = `border-left:${prop.leftOutlineStyle} ${prop.leftOutlineWidth}px ${prop.leftOutlineColor};border-top:${prop.topOutlineStyle} ${prop.topOutlineWidth}px ${prop.topOutlineColor};border-bottom:${prop.bottomOutlineStyle} ${prop.bottomOutlineWidth}px ${prop.bottomOutlineColor};border-right:${prop.middleOutlineStyle} ${prop.middleOutlineWidth}px ${prop.middleOutlineColor};`;
            }else if(i == prop.boses - 1 ){
                border = `border-top:${prop.topOutlineStyle} ${prop.topOutlineWidth}px ${prop.topOutlineColor};border-bottom:${prop.bottomOutlineStyle} ${prop.bottomOutlineWidth}px ${prop.bottomOutlineColor};border-right:${prop.rightOutlineStyle} ${prop.rightOutlineWidth}px ${prop.rightOutlineColor};`;
            }else{
                border = `border-top:${prop.topOutlineStyle} ${prop.topOutlineWidth}px ${prop.topOutlineColor};border-bottom:${prop.bottomOutlineStyle} ${prop.bottomOutlineWidth}px ${prop.bottomOutlineColor};border-right:${prop.middleOutlineStyle} ${prop.middleOutlineWidth}px ${prop.middleOutlineColor};`;
            }
            const hanzi = (i == length-1 && infos.length > length) ? `${info.ch}<span style="font-size:14px;text-align:right;margin-right:-5px;">${infos[length].ch}</span>` : `${info.ch}`;
            const fontSize = (i == length-1 && infos.length > length) ? prop.fontSize - 4 : prop.fontSize;
            master += `<li contenteditable="plaintext-only" style="${border}width:${prop.width}px;height:${prop.height}px;font-family:'${prop.fontFamily}';font-size:${fontSize}px;line-height:${prop.fontLineHeight}px;color:${prop.fontColor};${prop.fontPaddingLeft==0?'text-align:center;': (prop.fontPaddingLeft > 0 ? 'padding-left:'+prop.fontPaddingLeft+'px;':'padding-right:'+Math.abs(prop.fontPaddingLeft)+'px;')}background:url(${background}) no-repeat;background-size:${prop.width}px ${prop.height}px;">${hanzi}</li>`
        }
        let style = `margin-top:${prop.marginTop}px;${prop.clearBoth ? `clear:${prop.clearBoth};` : ``}overflow: hidden;`;
        let block = `<ul style="${style}">${master}</ul>`;
        return block;
    },
    createCustomLineDisign: function(store, info, prop){
        if(!prop){
            prop = store.cstline;
        }
        let border = `border-left:${prop.leftOutlineStyle} ${prop.leftOutlineWidth}px ${prop.leftOutlineColor};border-top:${prop.topOutlineStyle} ${prop.topOutlineWidth}px ${prop.topOutlineColor};border-bottom:${prop.bottomOutlineStyle} ${prop.bottomOutlineWidth}px ${prop.bottomOutlineColor};border-right:${prop.rightOutlineStyle} ${prop.rightOutlineWidth}px ${prop.rightOutlineColor};`;
        let borderRadius = `border-top-left-radius: ${prop.borderTopLeftRadius}px;border-top-right-radius: ${prop.borderTopRightRadius}px;border-bottom-right-radius: ${prop.borderBottomRightRadius}px;border-bottom-left-radius: ${prop.borderBottomLeftRadius}px;`;
        let style = `display: inline-block;${prop.float && prop.float ? 'float:'+prop.float+';' : ''}${border}${borderRadius}width:${prop.width}px;height:${prop.height}px;overflow: hidden;font-family:'${prop.fontFamily}';font-size:${prop.fontSize}px;line-height:${prop.fontLineHeight}px;color:${prop.fontColor};${prop.fontPaddingLeft==0?"text-align:center;":(prop.fontPaddingLeft>0?'padding-left:'+prop.fontPaddingLeft+'px;':'padding-right:'+Math.abs(prop.fontPaddingLeft)+'px;')}`;
        let block = `<div style="${style}" contenteditable="plaintext-only"></div>`;
        return block;
    },
    createEmptyLineDisign: function(store, info, prop){
        if(!prop){
            prop = store.empty;
        }
        let border = `border-left:${prop.leftOutlineStyle} ${prop.leftOutlineWidth}px ${prop.leftOutlineColor};border-top:${prop.topOutlineStyle} ${prop.topOutlineWidth}px ${prop.topOutlineColor};border-bottom:${prop.bottomOutlineStyle} ${prop.bottomOutlineWidth}px ${prop.bottomOutlineColor};border-right:${prop.rightOutlineStyle} ${prop.rightOutlineWidth}px ${prop.rightOutlineColor};`;
        let borderRadius = `border-top-left-radius: ${prop.borderTopLeftRadius}px;border-top-right-radius: ${prop.borderTopRightRadius}px;border-bottom-right-radius: ${prop.borderBottomRightRadius}px;border-bottom-left-radius: ${prop.borderBottomLeftRadius}px;`;
        let style = `display: block;${border}${borderRadius}width:${prop.width}px;height:${prop.height}px;clear: both;`;
        let block = `<div contenteditable="plaintext-only" style='${style}'>&nbsp;</div>`;
        return block;
    },
    createPinyinBlockDisign: function(store, info, prop){
        if(!prop){
            prop = store.pyblock
        }
        let border = `border-left:${prop.leftOutlineStyle} ${prop.leftOutlineWidth}px ${prop.leftOutlineColor};border-top:${prop.topOutlineStyle} ${prop.topOutlineWidth}px ${prop.topOutlineColor};border-bottom:${prop.bottomOutlineStyle} ${prop.bottomOutlineWidth}px ${prop.bottomOutlineColor};border-right:${prop.rightOutlineStyle} ${prop.rightOutlineWidth}px ${prop.rightOutlineColor};`;
        let borderRadius = `border-top-left-radius: ${prop.borderTopLeftRadius}px;border-top-right-radius: ${prop.borderTopRightRadius}px;border-bottom-right-radius: ${prop.borderBottomRightRadius}px;border-bottom-left-radius: ${prop.borderBottomLeftRadius}px;`;
        let style = `display: block;${prop.float && prop.float ? 'float:'+prop.float+';' : ''}${border}${borderRadius}width:${prop.width}px;height:${prop.height}px;overflow: hidden;line-height:${prop.fontLineHeight}px;${prop.fontPaddingLeft==0?"text-align:center;":(prop.fontPaddingLeft>0?'padding-left:'+prop.fontPaddingLeft+'px;':'padding-right:'+Math.abs(prop.fontPaddingLeft)+'px;')}`;
        let span = ``;
        if(prop.label === 'true'){
            span = `<span contenteditable="plaintext-only" style="font-family: &quot;${prop.fontFamily}&quot;;background-color:${prop.labelBackgroundColor};font-size:${prop.labelFontSize}px;">拼音：</span>`;
        }
        let em = `<em onclick="modify(this, &quot;${info.py}&quot;)" contenteditable="plaintext-only" style="background-color:${prop.backgroundColor};font-family: &quot;${prop.fontFamily}&quot;;color:${prop.fontColor};font-size:${prop.fontSize}px;" data-word="${info.ch}" data-pyarr="${info.py}">${info.py[0]}</em>`;
        let master = `${span}${em}`;
        let block = `<div style="${style}">${master}</div>`;
        return block;
    },
    createHanziBlockDisign: function(store, info, prop){
        if(!prop){
            prop = store.hzblock;
        }
        let border = `border-left:${prop.leftOutlineStyle} ${prop.leftOutlineWidth}px ${prop.leftOutlineColor};border-top:${prop.topOutlineStyle} ${prop.topOutlineWidth}px ${prop.topOutlineColor};border-bottom:${prop.bottomOutlineStyle} ${prop.bottomOutlineWidth}px ${prop.bottomOutlineColor};border-right:${prop.rightOutlineStyle} ${prop.rightOutlineWidth}px ${prop.rightOutlineColor};`;
        let borderRadius = `border-top-left-radius: ${prop.borderTopLeftRadius}px;border-top-right-radius: ${prop.borderTopRightRadius}px;border-bottom-right-radius: ${prop.borderBottomRightRadius}px;border-bottom-left-radius: ${prop.borderBottomLeftRadius}px;`;
        let style = `display: block;${prop.float && prop.float ? 'float:'+prop.float+';' : ''}${border}${borderRadius}width:${prop.width}px;height:${prop.height}px;overflow: hidden;line-height:${prop.fontLineHeight}px;${prop.fontPaddingLeft==0?"text-align:center;":(prop.fontPaddingLeft>0?'padding-left:'+prop.fontPaddingLeft+'px;':'padding-right:'+Math.abs(prop.fontPaddingLeft)+'px;')}`;
        let span = ``;
        if(prop.label === 'true'){
            span = `<span contenteditable="plaintext-only" style="font-family: &quot;${prop.fontFamily}&quot;;background-color:${prop.labelBackgroundColor};font-size:${prop.labelFontSize}px;">汉字：</span>`;
        }
        let em = `<span contenteditable="plaintext-only" style="background-color:${prop.backgroundColor};font-family: &quot;${prop.fontFamily}&quot;;color:${prop.fontColor};font-size:${prop.fontSize}px;">${info.ch}</span>`;
        let master = `${span}${em}`;
        let block = `<div style="${style}">${master}</div>`;
        return block;
    },
    createBushouBlockDisign: function(store, info, prop){
        if(!prop){
            prop = store.bshblock;
        }
        let border = `border-left:${prop.leftOutlineStyle} ${prop.leftOutlineWidth}px ${prop.leftOutlineColor};border-top:${prop.topOutlineStyle} ${prop.topOutlineWidth}px ${prop.topOutlineColor};border-bottom:${prop.bottomOutlineStyle} ${prop.bottomOutlineWidth}px ${prop.bottomOutlineColor};border-right:${prop.rightOutlineStyle} ${prop.rightOutlineWidth}px ${prop.rightOutlineColor};`;
        let borderRadius = `border-top-left-radius: ${prop.borderTopLeftRadius}px;border-top-right-radius: ${prop.borderTopRightRadius}px;border-bottom-right-radius: ${prop.borderBottomRightRadius}px;border-bottom-left-radius: ${prop.borderBottomLeftRadius}px;`;
        let style = `display: block;${prop.float && prop.float ? 'float:'+prop.float+';' : ''}${border}${borderRadius}width:${prop.width}px;height:${prop.height}px;overflow: hidden;line-height:${prop.fontLineHeight}px;${prop.fontPaddingLeft==0?"text-align:center;":(prop.fontPaddingLeft>0?'padding-left:'+prop.fontPaddingLeft+'px;':'padding-right:'+Math.abs(prop.fontPaddingLeft)+'px;')}`;
        let span = ``;
        if(prop.label === 'true'){
            span = `<span contenteditable="plaintext-only" style="font-family: &quot;${prop.fontFamily}&quot;;background-color:${prop.labelBackgroundColor};font-size:${prop.labelFontSize}px;">部首：</span>`;
        }
        let em = `<em contenteditable="plaintext-only" style="background-color:${prop.backgroundColor};font-family: &quot;${prop.fontFamily}&quot;;color:${prop.fontColor};font-size:${prop.fontSize}px;">${info.rd}</em>`;
        let master = `${span}${em}`;
        let block = `<div style="${style}">${master}</div>`;
        return block;
    },
    createSingleBihuaDisign: function(store, bihua, prop){
        if(!prop){
            prop = store.sampleBihua;
        }
        console.log(bihua, prop);
        let bihuaSvg = Util.createWordBihua(prop.bihuaPaths[bihua].paths, {translateX: prop.fontPaddingLeft, translateY: prop.fontLineHeight, scale: prop.fontSize/100, dasharray: '3 3', dashwidth: 1, dashcolor:prop.fontColor, dashopacity: 100, fillopacity: 100});
        let background = `&quot;${Util.svgMaker(prop.boxType, prop.innerlineDash, prop.innerlineWidth, prop.innerlineColor, prop.innerlineOpacity, prop.svgMap)}&quot;`;
        let border = `border-left:${prop.leftOutlineStyle} ${prop.leftOutlineWidth}px ${prop.leftOutlineColor};border-top:${prop.topOutlineStyle} ${prop.topOutlineWidth}px ${prop.topOutlineColor};border-bottom:${prop.bottomOutlineStyle} ${prop.bottomOutlineWidth}px ${prop.bottomOutlineColor};border-right:${prop.rightOutlineStyle} ${prop.rightOutlineWidth}px ${prop.rightOutlineColor};`;
        let borderRadius = `border-top-left-radius: ${prop.borderTopLeftRadius}px;border-top-right-radius: ${prop.borderTopRightRadius}px;border-bottom-right-radius: ${prop.borderBottomRightRadius}px;border-bottom-left-radius: ${prop.borderBottomLeftRadius}px;`;
        let style = `display: block;${prop.clearBoth ? `clear:${prop.clearBoth};` : ``}${prop.float && prop.float ? 'float:'+prop.float+';' : ''}${border}${borderRadius}width:${prop.width}px;height:${prop.height}px;font-family:'${prop.fontFamily}';overflow: hidden;font-size:${prop.fontSize}px;line-height:${prop.fontLineHeight}px;color:${prop.fontColor};${prop.fontPaddingLeft>=0?'padding-left:'+prop.fontPaddingLeft+'px;':'padding-right:'+Math.abs(prop.fontPaddingLeft)+'px;'}background: url(${background}) no-repeat;background-size: ${prop.width}px ${prop.height}px;`;
        let span = `<span contenteditable="plaintext-only" style="${style}">${bihua > -1?bihuaSvg:''}</span>`;
        return span;
    },
    convertJiegou: function(dec){
        if(/^⿰+/.test(dec)){
            return '左右结构';
        }else if(/^⿱+/.test(dec)){
            return '上下结构';
        }else if(/^⿲+/.test(dec)){
            return '左中右结构';
        }else if(/^⿳+/.test(dec)){
            return '上中下结构';
        }else if(/^⿹+/.test(dec)){
            return '右上包围结构';
        }else if(/^⿸+/.test(dec)){
            return '左上包围结构';
        }else if(/^⿺+/.test(dec)){
            return '左下包围结构';
        }else if(/^⿵+/.test(dec)){
            return '上三包围结构';
        }else if(/^⿶+/.test(dec)){
            return '下三包围结构';
        }else if(/^⿷+/.test(dec)){
            return '左三包围结构';
        }else if(/^⿴+/.test(dec)){
            return '全包围结构';
        }else if(/^⿻+/.test(dec)){
            return '镶嵌结构';
        }else {
            return '单一结构';
        }
    },
    createJiegouBlockDisign: function(store, info, prop){
        if(!prop){
            prop = store.jgblock;
        }
        let border = `border-left:${prop.leftOutlineStyle} ${prop.leftOutlineWidth}px ${prop.leftOutlineColor};border-top:${prop.topOutlineStyle} ${prop.topOutlineWidth}px ${prop.topOutlineColor};border-bottom:${prop.bottomOutlineStyle} ${prop.bottomOutlineWidth}px ${prop.bottomOutlineColor};border-right:${prop.rightOutlineStyle} ${prop.rightOutlineWidth}px ${prop.rightOutlineColor};`;
        let borderRadius = `border-top-left-radius: ${prop.borderTopLeftRadius}px;border-top-right-radius: ${prop.borderTopRightRadius}px;border-bottom-right-radius: ${prop.borderBottomRightRadius}px;border-bottom-left-radius: ${prop.borderBottomLeftRadius}px;`;
        let style = `display: block;${prop.float && prop.float ? 'float:'+prop.float+';' : ''}${border}${borderRadius}width:${prop.width}px;height:${prop.height}px;overflow: hidden;line-height:${prop.fontLineHeight}px;${prop.fontPaddingLeft==0?"text-align:center;":(prop.fontPaddingLeft>0?'padding-left:'+prop.fontPaddingLeft+'px;':'padding-right:'+Math.abs(prop.fontPaddingLeft)+'px;')}`;
        let span = ``;
        if(prop.label === 'true'){
            span = `<span contenteditable="plaintext-only" style="font-family: &quot;${prop.fontFamily}&quot;;background-color:${prop.labelBackgroundColor};font-size:${prop.labelFontSize}px;"></span>`;
        }
        let em = `<em contenteditable="plaintext-only" style="background-color:${prop.backgroundColor};font-family: &quot;${prop.fontFamily}&quot;color:${prop.fontColor};font-size:${prop.fontSize}px;">${Util.convertJiegou(info.dec)}</em>`;
        let master = `${span}${em}`;
        let block = `<div style="${style}">${master}</div>`;
        return block;
    },
    createBishunBlockDisign: function(store, info, prop){
        if(!prop){
            prop = store.bsblock;
        }
        let border = `border-left:${prop.leftOutlineStyle} ${prop.leftOutlineWidth}px ${prop.leftOutlineColor};border-top:${prop.topOutlineStyle} ${prop.topOutlineWidth}px ${prop.topOutlineColor};border-bottom:${prop.bottomOutlineStyle} ${prop.bottomOutlineWidth}px ${prop.bottomOutlineColor};border-right:${prop.rightOutlineStyle} ${prop.rightOutlineWidth}px ${prop.rightOutlineColor};`;
        let borderRadius = `border-top-left-radius: ${prop.borderTopLeftRadius}px;border-top-right-radius: ${prop.borderTopRightRadius}px;border-bottom-right-radius: ${prop.borderBottomRightRadius}px;border-bottom-left-radius: ${prop.borderBottomLeftRadius}px;`;
        let style = `display: inline-block;${prop.float && prop.float ? 'float:'+prop.float+';' : ''}${border}${borderRadius}width:${prop.width}px;height:${prop.height}px;overflow: hidden;line-height:${prop.fontLineHeight}px;${prop.fontPaddingLeft==0?"text-align:center;":(prop.fontPaddingLeft>0?'padding-left:'+prop.fontPaddingLeft+'px;':'padding-right:'+Math.abs(prop.fontPaddingLeft)+'px;')}`;
        let line =  `<ul style="${style}" contenteditable="plaintext-only">`;
        for(let i=0;i<=info.sk.length;i++){
            if(!store.draw){
                let svg = Util.drawStroke(info.sk, i, prop.currentColor, prop.otherColor, prop.strokeSize);
                if(svg){
                    line +=  `<li style="width:${prop.strokeSize*1000}px;">` + svg + "</li>";
                }
            }else{
                let svg = Util.drawStrokeOrder(info.sk, i, prop.currentColor, prop.otherColor, prop.strokeSize, 200, 800, "0 0 1024 1024");
                if(svg){
                    line +=  `<li style="width:${Math.floor(19*(prop.strokeSize*100)/98)}px;">` + svg + "</li>";//0.98
                }
            }
        }
        line += `</ul>`;
        return line;
    },
    createBlockDisign: function(store, content, prop){//增加对嵌套模板对支持
        if(!prop){
            prop = store.cstblock;
        }
        let border = `border-left:${prop.leftOutlineStyle} ${prop.leftOutlineWidth}px ${prop.leftOutlineColor};border-top:${prop.topOutlineStyle} ${prop.topOutlineWidth}px ${prop.topOutlineColor};border-bottom:${prop.bottomOutlineStyle} ${prop.bottomOutlineWidth}px ${prop.bottomOutlineColor};border-right:${prop.rightOutlineStyle} ${prop.rightOutlineWidth}px ${prop.rightOutlineColor};`;
        let borderRadius = `border-top-left-radius: ${prop.borderTopLeftRadius}px;border-top-right-radius: ${prop.borderTopRightRadius}px;border-bottom-right-radius: ${prop.borderBottomRightRadius}px;border-bottom-left-radius: ${prop.borderBottomLeftRadius}px;`;
        let style = `display: block;${prop.float && prop.float ? 'float:'+prop.float+';' : ''}${border}${borderRadius}width:${prop.width}px;height:${prop.height}px;overflow: hidden;line-height:${prop.fontLineHeight}px;${prop.fontPaddingLeft==0?"text-align:center;":(prop.fontPaddingLeft>0?'padding-left:'+prop.fontPaddingLeft+'px;':'padding-right:'+Math.abs(prop.fontPaddingLeft)+'px;')}`;
        let block = `<div contenteditable="plaintext-only" style="${style}">${content}</div>`;
        return block;
    },
    createTitleDisign: function(store, content, prop){
        const leftOrRight = store.titlePaddingLeft > 0 ? "left" : "right";
        const style = `padding-${leftOrRight}: ${Math.abs(store.titlePaddingLeft)}px;line-height: ${store.titleLineHeight}px;font-size: ${store.titleSize}px;font-family: '${store.titleFont}';color:${store.titleColor};`;
        return `<ul style="width: 100%;display:block;overflow: hidden;"><li style="${style}">${content}</li></ul>`;
    },
    //设计模板专用

    initCommonComponents: function(){

        Background.init({
            legendTxt: "背景设置", 
            buttons: [], 
            backgroundUploadTxt: "页面背景", 
            tipsTxt: "选择图片", 
            backgroundColorTxt: "内容背景",
            defaultOptions: Helper.Storage
        }, 
        { 
            backgroundImageCallback: function (that) { 
                if(that){
                    var files = $(that)[0].files;
                    var file = files[0];
                    var reader = new FileReader();
                    reader.onload = function(e) {
                        var data = e.target.result;
                        Helper.Storage.backgroundPic = data;
                        Helper.createPage(Helper.Storage.words);
                    };
                    reader.readAsDataURL(file);
                }else{
                    Helper.Storage.backgroundPic = "";
                    Helper.createPage(Helper.Storage.words);
                }
            },
            backgroundColorCallback: function (that){
                Helper.Storage.backgroundColor = $(that).attr("data-rgba");
                Helper.createPage(Helper.Storage.words);
            }
        });
        
        Cover.init({
            legendTxt: "封面设置", 
            buttons: [
                {
                    id: "show-cover",
                    label: "插入封面",
                    checked: Helper.Storage.coverShow,
                    callback: function(that){
                        Helper.Storage.coverShow = $(that).is(":checked");
                        Helper.createPage(Helper.Storage.words);
                    }
                }
            ], 
            backgroundUploadTxt: "封面图片", 
            tipsTxt: "选择图片", 
            coverTitleTxt: "封面标题", 
            coverTitleSizeTxt: "标题大小", 
            coverTitleColorTxt: "标题颜色", 
            titlePaddingLeftTxt: "标题左右", 
            titleTopTxt: "标题上下", 
            coverSizeTxt: "文字大小", 
            coverColorTxt: "文字颜色", 
            paddingLeftTxt: "左右位置", 
            upDownTxt: "上下位置", 
            lineHeightTxt: "文字高度", 
            coverLineStyleTxt: "横线风格", 
            coverLineSizeTxt: "横线粗细", 
            coverLineColorTxt: "横线颜色", 
            customButtons: [
                {
                    id: "show-custom-cover",
                    label: "自定义封面",
                    checked: Helper.Storage.coverCustom,
                    callback: function (that) {
                        Helper.Storage.coverCustom = $(that).is(":checked");
                        console.log(Helper.Storage.coverCustom)
                        let customSelector = "#fix-setting-module-input-right-content-text";
                        let defaultSelector = "#fix-setting-module-input-right-stdname-text,#fix-setting-module-input-right-stdclass-text,#fix-setting-module-input-right-stdnum-text";
                        if(Helper.Storage.coverCustom){
                            $(customSelector).parent().show();
                            $(defaultSelector).parent().hide();
                        }else{
                            $(defaultSelector).parent().show();
                            $(customSelector).parent().hide();
                        }
                        Helper.createPage(Helper.Storage.words);
                    }
                }
            ], 
            coverStdContentTxt: "封面内容", 
            coverStdNameTxt: "学生姓名", 
            coverStdClassTxt: "学生班级", 
            coverStdNumTxt: "学生学号", 
            defaultOptions: Helper.Storage
        }, 
        { 
            backgroundImageCallback: function(that){
                if(that){
                    var files = $(that)[0].files;
                    var file = files[0];
                    var reader = new FileReader();
                    reader.onload = function(e) {
                        var data = e.target.result;
                        Helper.Storage.coverPic = data;
                        Helper.createPage(Helper.Storage.words);
                    };
                    reader.readAsDataURL(file);
                }else{
                    Helper.Storage.coverPic = "";
                    Helper.createPage(Helper.Storage.words);
                }
                
            },
            coverTitleCallback: function (that) { 
                Helper.Storage.coverTitle = $(that).val();
                Helper.createPage(Helper.Storage.words);
            }, 
            coverTitleFontCallback: function(that){
                Helper.Storage.coverTitleFont = $(that).attr("data-url");
                Helper.createPage(Helper.Storage.words);
            },
            coverTitleFontSizeCallback: function(event, ui){
                Helper.Storage.coverTitleSize = ui.value;
                Helper.createPage(Helper.Storage.words);
            },
            coverTitleColorCallback: function(that){
                Helper.Storage.coverTitleColor = $(that).val();
                Helper.createPage(Helper.Storage.words);
            },
            coverFontCallback: function (that) { 
                Helper.Storage.coverFont = $(that).attr("data-url")
                Helper.createPage(Helper.Storage.words);
            }, 
            coverContentFontSizeCallback: function (event, ui) { 
                Helper.Storage.coverSize = ui.value;
                Helper.createPage(Helper.Storage.words);
            }, 
            coverContentColorCallback: function (that) { 
                Helper.Storage.coverColor = $(that).val();
                Helper.createPage(Helper.Storage.words);
            },
            titlePaddingLeftCallback: function(event, ui){
                Helper.Storage.coverTitlePaddingLeft = ui.value;
                Helper.createPage(Helper.Storage.words);
            },
            titleTopCallback: function(event, ui){
                Helper.Storage.coverTitleTop = ui.value;
                Helper.createPage(Helper.Storage.words);
            },
            coverStdContentCallback: function(that){
                Helper.Storage.coverCustomContent = $(that).val();
                Helper.createPage(Helper.Storage.words);
            },
            coverStdNameCallback: function(that){
                Helper.Storage.coverCustomName = $(that).val();
                Helper.createPage(Helper.Storage.words);
            },
            coverStdClassCallback: function(that){
                Helper.Storage.coverCustomClass = $(that).val();
                Helper.createPage(Helper.Storage.words);
            },
            coverStdNumCallback: function(that){
                Helper.Storage.coverCustomNo = $(that).val();
                Helper.createPage(Helper.Storage.words);
            },
            paddingLeftCallback: function(event, ui){
                Helper.Storage.coverPaddingLeft = ui.value;
                Helper.createPage(Helper.Storage.words);
            },
            upDownCallback: function(event, ui){
                Helper.Storage.coverContentUpDown = ui.value;
                Helper.createPage(Helper.Storage.words);
            },
            lineHeightCallback: function(event, ui){
                Helper.Storage.coverLineHeight = ui.value;
                Helper.createPage(Helper.Storage.words);
            },
            coverLineBorderStyleCallback: function (that) { 
                Helper.Storage.coverLineStyle = $(that).attr("data-url");
                Helper.createPage(Helper.Storage.words);
            }, 
            coverLineBorderSizeCallback: function (event, ui) { 
                Helper.Storage.coverLineSize = ui.value;
                Helper.createPage(Helper.Storage.words);
            }, 
            coverLineColorCallback: function (that) { 
                Helper.Storage.coverLineColor = $(that).val();
                Helper.createPage(Helper.Storage.words);
            }, 
        });
        
        Header.init({
            legendTxt: "页眉设置", 
            aligns: [
                {
                    id: "show-align-left",
                    label: "居左",
                    checked: Helper.Storage.headerPosition === "left",
                    name: "header-setting-module-show-align",
                    value: "left",
                    callback: function (that) {
                        Helper.Storage.headerPosition = $(that).val()
                        Helper.createPage(Helper.Storage.words);
                    }
                },
                {
                    id: "show-align-center",
                    label: "居中",
                    checked: Helper.Storage.headerPosition === "center",
                    name: "header-setting-module-show-align",
                    value: "center",
                    callback: function (that) {
                        Helper.Storage.headerPosition = $(that).val()
                        Helper.createPage(Helper.Storage.words);
                    }
                },
                {
                    id: "show-align-right",
                    label: "居右",
                    checked: Helper.Storage.headerPosition === "right",
                    name: "header-setting-module-show-align",
                    value: "right",
                    callback: function (that) {
                        Helper.Storage.headerPosition = $(that).val()
                        Helper.createPage(Helper.Storage.words);
                    }
                }
            ], 
            headerLeftContentTxt: "左侧文字", 
            headerSizeTxt: "字体大小", 
            headerColorTxt: "文字颜色", 
            headerLineStyleTxt: "横线风格", 
            headerLineSizeTxt: "横线粗细", 
            headerLineColorTxt: "横线颜色", 
            buttons: [
                {
                    id: "show-custom-right",
                    label: "自定义右侧",
                    checked: Helper.Storage.headerCustomRight,
                    callback: function (that) {
                        Helper.Storage.headerCustomRight = $(that).is(":checked");
                        let customSelector = "#header-setting-module-input-right-content-text";
                        let defaultSelector = "#header-setting-module-input-right-stdname-text,#header-setting-module-input-right-stdclass-text,#header-setting-module-input-right-stdnum-text";
                        if(Helper.Storage.headerCustomRight){
                            $(customSelector).parent().show();
                            $(defaultSelector).parent().hide();
                        }else{
                            $(defaultSelector).parent().show();
                            $(customSelector).parent().hide();
                        }
                        Helper.createPage(Helper.Storage.words);
                    }
                }
            ], 
            headerRightContentTxt: "右侧内容", 
            headerRightStdNameTxt: "学生姓名", 
            headerRightStdClassTxt: "学生班级", 
            headerRightStdNumTxt: "学生学号", 
            defaultOptions: Helper.Storage
        }, 
        { 
            headerFontCallback: function (that) { 
                Helper.Storage.headerFont = $(that).attr("data-url");
                Helper.createPage(Helper.Storage.words);
            }, 
            headerInputContentCallback: function (that) { 
                Helper.Storage.headerLeftContent = $(that).val();
                Helper.createPage(Helper.Storage.words);
            }, 
            headerContentFontSizeCallback: function (event, ui) { 
                Helper.Storage.headerSize = ui.value;
                Helper.createPage(Helper.Storage.words);
            }, 
            headerContentColorCallback: function (that) { 
                Helper.Storage.headerColor = $(that).val();
                Helper.createPage(Helper.Storage.words);
            }, 
            headerBorderStyleCallback: function (that) { 
                Helper.Storage.headerLineStyle = $(that).attr("data-url");
                Helper.createPage(Helper.Storage.words);
            }, 
            headerLineBorderSizeCallback: function (event, ui) { 
                Helper.Storage.headerLineSize = ui.value;
                Helper.createPage(Helper.Storage.words);
            }, 
            headerLineColorCallback: function (that) { 
                Helper.Storage.headerLineColor = $(that).val();
                Helper.createPage(Helper.Storage.words);
            }, 
            headerInputRightContentCallback: function (that) { 
                Helper.Storage.headerCustomRightContent = $(that).val();
                Helper.createPage(Helper.Storage.words);
            }, 
            headerInputRightStdnameCallback: function (that) { 
                Helper.Storage.headerName = $(that).val();
                Helper.createPage(Helper.Storage.words);
            }, 
            headerInputRightStdclassCallback: function (that) { 
                Helper.Storage.headerClass = $(that).val();
                Helper.createPage(Helper.Storage.words);
            }, 
            headerInputRightStdnumCallback: function (that) { 
                Helper.Storage.headerNo = $(that).val();
                Helper.createPage(Helper.Storage.words);
            } 
        });
        
        Footer.init({
            legendTxt: "页脚设置", 
            footerLeftContentTxt: "左侧文字", 
            footerSizeTxt: "字体大小", 
            footerColorTxt: "文字颜色", 
            footerLineStyleTxt: "横线风格", 
            footerLineSizeTxt: "横线粗细", 
            footerLineColorTxt: "横线颜色", 
            buttons: [
                {
                    id: "show-page-count",
                    label: "显示页码",
                    checked: Helper.Storage.footerShowPage,
                    callback: function (that) {
                        Helper.Storage.footerShowPage = $(that).is(':checked');
                        Helper.createPage(Helper.Storage.words);
                    }
                },
                {
                    id: "show-total-page",
                    label: "显示总页码",
                    checked: Helper.Storage.footerShowTotalPage,
                    callback: function (that) {
                        Helper.Storage.footerShowTotalPage = $(that).is(':checked');
                        Helper.createPage(Helper.Storage.words);
                    }
                }
            ], 
            footerStartPageTxt: "起始页码", 
            footerTotalPageTxt: "总页码数", 
            defaultOptions: Helper.Storage 
        }, 
        { 
            footerFontCallback: function (that) { 
                Helper.Storage.footerFont = $(that).attr("data-url");
                Helper.createPage(Helper.Storage.words);
            }, 
            footerInputContentCallback: function (that) { 
                Helper.Storage.footerLeftContent = $(that).val();
                Helper.createPage(Helper.Storage.words);
            }, 
            footerContentFontSizeCallbak: function (event, ui) { 
                Helper.Storage.footerSize = ui.value;
                Helper.createPage(Helper.Storage.words);
            }, 
            footerContentColorCallback: function (that) { 
                Helper.Storage.footerColor = $(that).val();
                Helper.createPage(Helper.Storage.words);
            }, 
            footerBorderStyleCallback: function (that) { 
                Helper.Storage.footerLineStyle = $(that).attr("data-url");
                Helper.createPage(Helper.Storage.words);
            }, 
            footerLineBorderSizeCallback: function (event, ui) { 
                Helper.Storage.footerLineSize = ui.value;
                Helper.createPage(Helper.Storage.words);
            }, 
            footerLineColorCallback: function (that) { 
                Helper.Storage.footerLineColor = $(that).val();
                Helper.createPage(Helper.Storage.words);
            }, 
            footerInputStartPageCallback: function (that) { 
                Helper.Storage.footerStartPage = $(that).val();
                Helper.createPage(Helper.Storage.words);
            }, 
            footerInputTotalPageCallback: function (that) { 
                Helper.Storage.footerTotalPage = $(that).val();
                Helper.createPage(Helper.Storage.words);
            } 
        });
        
        Print.init({
            legendTxt: '打印设置',
            buttons:[
                {
                    id: "show-portrait",
                    label: "竖向打印",
                    checked: !Helper.Storage.landscape,
                    name: "print-landscape-or-not",
                    value: "portrait",
                    callback: function (that) {
                    }
                },
                {
                    id: "show-landscape",
                    label: "横向打印",
                    checked: Helper.Storage.landscape,
                    name: "print-landscape-or-not",
                    value: "landscape",
                    callback: function (that) {
                    }
                }
            ],
            buttons2: [
                {
                    id: "syn-modify-page",
                    label: "同步修改页面宽度和高度",
                    type:"checkbox",
                    checked: Helper.Storage.synModifyPage,
                    name: "print-syn-modify-page",
                    callback: function (that) {
                        Helper.Storage.synModifyPage = $(that).is(":checked");
                        Util.modifyPageSize(Helper.Storage);
                    }
                }
            ],
            printerTxt: '打 印 机',
            copiesTxt: '打印份数',
            scaleFactorTxt: '缩放比例',
            mediaSizeTxt: '纸张规格',
            mediaWidthTxt: '纸张宽度',
            mediaHeightTxt: '纸张高度', 
            defaultOptions: Helper.Storage
        },
        {
            printerCallback:function(that){
                Helper.Storage.printer = $(that).val();
            },
            printCopiesCallbak:function(event, ui){
                Helper.Storage.printCopies = ui.value;
            },
            scaleFactorCallback:function(event, ui){
                Helper.Storage.scaleFactor = ui.value;
            },
            mediaSizeCallback:function(that){
                let val = $(that).val();
                Helper.Storage.mediaSize = JSON.parse(val);
                $("#print-setting-module-print-media-width-input").val(Helper.Storage.mediaSize.width/1000);
                $("#print-setting-module-print-media-width-input").change();
                $("#print-setting-module-print-media-height-input").val(Helper.Storage.mediaSize.height/1000);
                $("#print-setting-module-print-media-height-input").change();
            },
            mediaWidthCallbak:function(event, ui){
                Helper.Storage.mediaWidth = ui.value;
                Util.modifyPageSize(Helper.Storage);
            },
            mediaHeightCallback:function(event, ui){
                Helper.Storage.mediaHeight = ui.value;
                Util.modifyPageSize(Helper.Storage);
            }
        });

        Operation.init({
            legendTxt: '打印操作',
            parentStyle: 'position:fixed;bottom:-6px;z-index:999;margin-bottom:15px;',
            operations: [
                {
                    id: "export",
                    label: "导出PDF",
                    name: "print-export-btn",
                    callback: function (that) {
                        $(that).attr("checked", false);
                        if(!parent.window.$.isPro() && !parent.window.$.isTrial()){
                            parent.window.$.proDialog();
                        }else{
                            if(parent.window.$.isTrial()){
                                preview.$(".page-footer-left").text('字帖大师出品【www.zitiedashi.com】');
                            }
                            preview.$("#filePath").click();
                        }
                    }
                },
                {
                    id: "print",
                    label: "立即打印",
                    name: "print-now-btn",
                    callback: function (that) {
                        $(that).attr("checked", false);
                        if(!parent.window.$.isPro() && !parent.window.$.isTrial()){
                            parent.window.$.proDialog();
                        }else{
                            if(parent.window.$.isTrial()){
                                preview.$(".page-footer-left").text('字帖大师出品【www.zitiedashi.com】');
                            }
                            preview.$("#printButton").click();
                        }
                    }
                },
                {
                    id: "shareOrNot",
                    label: Helper.isShared()?"取消模板间共享":"模板间共享内容",
                    name: "share-or-not",
                    checked: !Helper.isShared(),
                    callback: function (that) {
                        if($(that).is(":checked")){
                            Helper.removeShare(Helper._Key);
                            $(`label[for='operation-setting-module-shareOrNot']`).html('模板间共享内容');
                        }else{
                            Helper.share(Helper._Key, Helper.book);
                            $(`label[for='operation-setting-module-shareOrNot']`).html('取消模板间共享');
                        }
                    }
                },
                {
                    id: "autopager",
                    label: "更新页码",
                    name: "auto-pager",
                    callback: function (that) {
                        $(that).attr("checked", false);
                        let pages = preview.$(".page");
                        let cover = preview.$(".page>.cover");
                        let total = pages.length;
                        if(cover && cover.length > 0){
                            --total;
                        }
                        let p = 1;
                        pages.each(function(i, el){
                            let c = preview.$(el).find('.cover');
                            if(c && c.length > 0){
                                return true;
                            }else{
                                preview.$(el).find('.curr-page').html(`第${p++}页`);
                                preview.$(el).find('.total-page').html(` / 共${total}页 `);
                            }
                        })
                    }
                }
            ],
            defaultOptions: Helper.Storage
        },
        {
            
        });

        $('legend').click(function(){
            $(this).parent().children().toggle();
            $(this).toggle();
        })

        $('input[name="print-landscape-or-not"]').change(function(){
            let that = this;
            let change = false;
            let text = $(`label[for="${$(that).attr('id')}"]`).text();
            if(confirm(`如需${text}，请直接选择${text.replace('打印', '')}的 “纸张规格”。确定要改变吗？`)){
                change = true;
            }else{
                change = false;
            }

            $('input[name="print-landscape-or-not"]').each(function(n, e){
                $(`label[for="${$(e).attr('id')}"]`).removeClass("ui-state-active");
                $(e).attr("checked", false);
                if(change){
                    if($(e).val() === $(that).val()){
                        $(`label[for="${$(e).attr('id')}"]`).addClass("ui-state-active");
                        $(e).attr("checked", true);
                        if($(that).val() === "portrait"){
                            Helper.Storage.landscape = false;
                        }else{
                            Helper.Storage.landscape = true;
                        }
                    }
                }else{
                    if($(e).val() !== $(that).val()){
                        $(`label[for="${$(e).attr('id')}"]`).addClass("ui-state-active");
                        $(e).attr("checked", true);
                    }
                }
            });
        });
    }
};
Util.init();

const sharedPropertyDefinition = {
    enumerable: true,
    configurable: true,
    get: undefined,
    set: undefined
}

function proxy (Storage, target, key, callback) {
    sharedPropertyDefinition.get = function proxyGetter () {
        return Storage[key];
    }
    sharedPropertyDefinition.set = function proxySetter (val) {
        Storage[key] = val;
        callback(key, val);
    }
    Object.defineProperty(target, key, sharedPropertyDefinition)
}


const Helper = {
    _Key: undefined,
    _Storage: undefined,
    initRender: undefined,
    loaded: undefined,
    shared: false,
    book: '',
    params: {
        pageCount: 0,
        currentPage: 1
    },
    renderBlock: function(i, wd, storage){
        let info = Util.loadWordFromCache(storage, wd);
        if(!wd){
            info.ch = ' ';
        }
        
        storage.hide = info.py && info.py.length <= 1;
        let block = "";
        //行头
        block += Util.createTopLine(info, i, storage);
        //拼音
        if(storage.pinyinShow){
            block += Util.createPinyinLine(info, i, storage);
        }
        storage.lineIndex = 0;
        //汉字
        for(let l=0;l<=storage.fillHanziLines;l++){
            block += Util.createHanziLine(info,i, l, storage);
            storage.lineIndex++;
        }
        //空行
        for(let l=0;l<storage.fillEmptyLines;l++){
            block += Util.createHanziLine({ch:''},i, l, storage);
            storage.lineIndex++;
        }
        return block;
    },
    pageCount: function(storage, words){
        return Math.ceil(words.length / storage.wordsPerPage);
    },
    renderPerPageCallback: function(p, storage, words){
        let content = '';
        for(let i=0;i<storage.wordsPerPage;i++){
            let wd = words[i+p*storage.wordsPerPage];
            content += Helper.renderBlock && Helper.renderBlock(i, wd, storage);
        }
        return content;
    },
    fillEmptyArray: function(length, text){
        let array = [];
        for(let i=0; i<length; i++){
            array.push(text)
        }
        return array;
    },
    renderCallback: function(that, storage, words){
        if(words){
            const pageCount = Helper.pageCount(storage, words);
            if(words.length % storage.wordsPerPage !== 0){
                words.concat(Helper.fillEmptyArray())
            }
            Helper.params.pageCount = pageCount;
            preview.$(".book").empty();
            console.time("book");
            let book = Util.createCover(storage);
            for(let p=0;p<pageCount;p++){
                const currentPage = p+1;
                Helper.params.currentPage = currentPage;
                console.time("page"+currentPage)
                const content = Helper.renderPerPageCallback(p, storage, words);
                book += Util.createPage(p, pageCount, storage, content);
                console.timeEnd("page"+currentPage)
            }
            console.timeEnd("book");
            console.time("render");
            Helper.book = book;
            Helper.reloadShare(book);
            
            if(storage.formatPageLines){
                Util.formatPage(storage);
            }
            if(storage.contentBorderRadius){
                Util.formatRadius(storage);
            }
            storage._wordsCache = that._mapToJson(storage.wordsCache);
            console.timeEnd("render");
        }else{
            preview.$(".book").empty();
        }
    },
    inited: false,
    initBoard: undefined,
    bind: function(){
        for (var item in Helper._Storage){
            proxy(Helper._Storage, Helper.Storage, item, Helper.save);
        }
        Helper.Storage.inited = true;
        Helper.initBoard && Helper.initBoard();
        Helper.initRender && Helper.initRender(Helper);
    },
    init: function(){
        let that = this;
        localStorage.setItem("currentKey", Helper._Key);
        if(!that.inited){
            that.inited = true;
            this.load();
        }
    },
    Storage:{},
    _strMapToObj: function(strMap){
        let obj= Object.create(null);
        for (let[k,v] of strMap) {
            obj[k] = v;
        }
        return obj;
    },
    _mapToJson: function(map) {
        if(map){
            try {
                return JSON.stringify(Helper._strMapToObj(map));
            } catch (error) {
                return "";
            }
            
        }else{
            return "";
        }
    },
    _objToStrMap: function(obj){
        let strMap = new Map();
        for (let k of Object.keys(obj)) {
            strMap.set(k,obj[k]);
        }
        return strMap;
    },
    _jsonToMap: function(jsonStr){
        if(jsonStr){
            try {
                return Helper._objToStrMap(JSON.parse(jsonStr));
            } catch (error) {
                return new Map();
            }
        }else{
            return new Map();
        }
    },
    isShared: function() {
        Helper.shared = localStorage.getItem(`${Helper._Key}-shared`);
        return Helper.shared;
    },
    share: function(key, book) {
        try {
            localforage.getItem(`share-this-book`).then(function(array) {
                if(!array){
                    array = [];
                }
                array.push({key:key, content: book});
                localforage.setItem(`share-this-book`, array).then(function (value) {
                    console.log(`saved: share-this-book = `, value);
                    localStorage.setItem(`${key}-shared`, true);
                }).catch(function(err) {
                    console.log(err)
                });
            });
            
        } catch (error) {
            console.log('save error', error.message);
        }
    },
    removeShare: function(key) {
        try {
            localforage.getItem(`share-this-book`).then(function(array) {
                if(!array){
                    array = [];
                }
                for(let i=0; i<array.length; i++){
                    let item = array[i]
                    if(item.key === key){
                        array.splice(i, 1);
                        localStorage.setItem(`${key}-shared`,false);
                    }
                }
                localforage.setItem(`share-this-book`, array).then(function (value) {
                    console.log(`saved after remove: ${key}, share-this-book = `, value);
                }).catch(function(err) {
                    console.log(err)
                });
            });
            
        } catch (error) {
            console.log('save error', error.message);
        }
    },
    reloadShare: function(book) {
        localforage.getItem(`share-this-book`).then(function(array) {
            let value='';
            if(!array){
                array = [];
            }
            for(let i=0; i<array.length; i++){
                let item = array[i]
                if(item.key !== Helper._Key){
                    value += item.content;
                }
            }
            preview.$(".book").html(value + book);
        });
    },
    save: _.debounce(function(key, val){
        try {
            localforage.setItem(Helper._Key, Helper.Storage).then(function (value) {
                console.log(`saved: ${Helper._Key} = `, value);
                localStorage.removeItem(Helper._Key);
            }).catch(function(err) {
                localStorage.setItem(Helper._Key, JSON.stringify(Helper._Storage));
            });
        } catch (error) {
            console.log('save error', error.message);
        }
    }, 500),
    load: function(){
        localforage.getItem(Helper._Key).then(function(value) {
            let localStore = value;
			if(!localStore){
				const localStr = localStorage.getItem(Helper._Key);
				if(localStr){
					localStore = JSON.parse(localStr);
				}
			}
			if(localStore){
                if(!localStore.wordsCache && localStore._wordsCache){
                    localStore.wordsCache = Helper._jsonToMap(localStore._wordsCache);
                }
                if(localStore.inited && localStore.printer){
                    if(!Helper._Storage.boxHeight){
                        Helper._Storage.boxHeight = Helper._Storage.boxSize/2;
                    }
                    Helper._Storage = localStore;
                }
            }
            Helper.bind();
        });
    },
    createPage: _.debounce(function(data){
        console.time("createPage");
        Helper.renderCallback && Helper.renderCallback(this, this.Storage, data);
        console.timeEnd("createPage")
        $(_.debounce(function(){
            Util.preview.$(function(){
                Util.preview.$("#loadCacheButton").click();
                Helper.loaded && Helper.loaded(Helper.Storage, data);
                console.log('document ready!')
            });
        }, 800));
    }, 500)
};

const XMT = {
    init: function(){

        Helper.initRender = function(that){
            Util.updatePinyinBoxArray(that.Storage);
            Util.updateBoxArray(that.Storage);
            that.createPage(that.Storage.words);
        };
        Helper.initBoard = function(){
            Input.components = [
                {
                    label: "填充行尾",
                    type: 'slider',
                    suffixSelector: '-word-line-tail',
                    defaultVal: Helper.Storage.hanziLineTail,
                    initVal: 0,
                    min: 0,
                    max: 40,
                    style: '20px',
                    callback: function (event, ui){
                        Helper.Storage.hanziLineTail = ui.value;
                        Helper.createPage(Helper.Storage.words);
                    }
                },
                {
                    label: "填充姓名",
                    type: 'slider',
                    suffixSelector: '-fill-name-line',
                    defaultVal: Helper.Storage.fillNameLines,
                    initVal: 2,
                    min: 0,
                    max: 10,
                    style: '20px',
                    callback: function (event, ui){
                        Helper.Storage.fillNameLines = ui.value;
                        Helper.createPage(Helper.Storage.words);
                    }
                }
            ];

            Input.init({
                legendTxt: "字帖内容", 
                textareaHolder: "请输入要生成字帖的词语，用空格分隔", 
                defaultValue: Helper.Storage.originText, 
                fillBlankTimesTxt: "空几格描",
                fillPinyinPerLineTxt: "填充拼音", 
                fillWordsPerLineTxt: "填充汉字", 
                defaultOptions: Helper.Storage,
                filter: function(o){
                    return o.type !== 'usefull';
                }
            }, 
            {
                textareaCallback: function (that) { 
                    var text = $(that).val().trim();
                    if (text) {
                        Helper.Storage.originText = text;
                        if(text.indexOf(" ") > -1){
                            Helper.Storage.words = text.split(" ");
                        }else{
                            Helper.Storage.words = text.split("");
                        }
                        Helper.createPage(Helper.Storage.words);
                    }
                }, 
                fillBlankCallback: function (event, ui){
                    Helper.Storage.fillBlankTimes = ui.value;
                    Helper.createPage(Helper.Storage.words);
                },
                fillPinyinCallback: function (event, ui) { 
                    Helper.Storage.fillPinyinTimes = ui.value;
                    Helper.createPage(Helper.Storage.words);
                }, 
                fillWordCallback: function (event, ui) { 
                    Helper.Storage.fillHanziTimes = ui.value;
                    Helper.createPage(Helper.Storage.words);
                }
            });

            Layout.components = [
                {
                    label: "主格左右",
                    type: 'slider',
                    suffixSelector: '-main-margin-left',
                    defaultVal: Helper.Storage.mainBlockMarginLeft,
                    initVal: 85,
                    min: -600,
                    max: 600,
                    style: '20px',
                    callback: function (event, ui){
                        Helper.Storage.mainBlockMarginLeft = ui.value;
                        Helper.createPage(Helper.Storage.words);
                    }
                },
                {
                    label: "主格上下",
                    type: 'slider',
                    suffixSelector: '-main-margin-top',
                    defaultVal: Helper.Storage.mainBlockMarginTop,
                    initVal: 60,
                    min: -600,
                    max: 600,
                    style: '30px',
                    callback: function (event, ui){
                        Helper.Storage.mainBlockMarginTop = ui.value;
                        Helper.createPage(Helper.Storage.words);
                    }
                },
                {
                    label: "笔顺上下",
                    type: 'slider',
                    suffixSelector: '-bishun-margin-top',
                    defaultVal: Helper.Storage.bishunMarginTop,
                    initVal: 450,
                    min: -300,
                    max: 800,
                    style: '30px',
                    callback: function (event, ui){
                        Helper.Storage.bishunMarginTop = ui.value;
                        Helper.createPage(Helper.Storage.words);
                    }
                },
                {
                    label: "笔顺间隙",
                    type: 'slider',
                    suffixSelector: '-bishun-margin-bottom',
                    defaultVal: Helper.Storage.bishunMarginBottom,
                    initVal: 10,
                    min: -100,
                    max: 100,
                    style: '30px',
                    callback: function (event, ui){
                        Helper.Storage.bishunMarginBottom = ui.value;
                        Helper.createPage(Helper.Storage.words);
                    }
                },
                {
                    label: "姓名描行",
                    type: 'slider',
                    suffixSelector: '-slider-name-lines',
                    defaultVal: Helper.Storage.nameLines,
                    initVal: 5,
                    min: 0,
                    max: 30,
                    style: '20px',
                    callback: function (event, ui){
                        Helper.Storage.nameLines = ui.value;
                        Helper.createPage(Helper.Storage.words);
                    }
                }
            ];

            Layout.init({
                legendTxt: "布局设置", 
                pageWidthTxt: "页面宽度", 
                pageHeightTxt: "页面高度", 
                wordsPerPageTxt: "每页字数", 
                bosesPerLineTxt: "每行格数", 
                boxSizeTxt: "格子大小", 
                boxHeightTxt: "音格高度", 
                fillOtherLineTxt: "增加描行", 
                fillEmptyLineTxt: "增加空行", 
                leftRightTxt: "左右调整", 
                headerWidthTxt: "页眉宽度", 
                footerWidthTxt: "页脚宽度", 
                headerUpDownTxt: "页眉位置", 
                contentUpDownTxt: "内容位置", 
                contentLeftRightTxt: "内容左右", 
                footerUpDownTxt: "页脚位置", 
                defaultOptions: Helper.Storage
            }, 
            { 
                pageWidthCallback: function(event, ui){
                    Helper.Storage.pageWidth = ui.value/10;
                    Helper.createPage(Helper.Storage.words);
                },
                pageHeightCallback: function(event, ui){
                    Helper.Storage.pageHeight = ui.value/10;
                    Helper.createPage(Helper.Storage.words);
                },
                wordsPerPageCallback: function (event, ui) { 
                    Helper.Storage.wordsPerPage = ui.value;
                    Helper.createPage(Helper.Storage.words);
                }, 
                bosesPerLineCallback: function (event, ui) { 
                    Helper.Storage.columnsPerLine = ui.value;
                    Util.updateColumns('.pinyin', Helper.Storage.columnsPerLine)
                    Util.updateColumns('.word', Helper.Storage.columnsPerLine);
                }, 
                boxSizeCallback: function (event, ui) { 
                    Helper.Storage.boxSize = ui.value;
                    Util.updateBoxSize('.pinyin', Helper.Storage.boxSize, Helper.Storage.boxSize/2);
                    Util.updateBoxSize('.word', Helper.Storage.boxSize, Helper.Storage.boxSize);
                },
                boxHeightCallback: function (event, ui) { 
                    Helper.Storage.boxHeight = ui.value;
                    Util.updateBoxSize('.pinyin', Helper.Storage.boxSize, Helper.Storage.boxHeight);
                    Util.updateBoxSize('.word', Helper.Storage.boxSize, Helper.Storage.boxSize);
                },
                fillOtherLineCallback: function (event, ui) { 
                    Helper.Storage.fillHanziLines = ui.value;
                    Helper.createPage(Helper.Storage.words);
                }, 
                fillEmptyLineCallback: function (event, ui) { 
                    Helper.Storage.fillEmptyLines = ui.value;
                    Helper.createPage(Helper.Storage.words);
                },
                leftRightCallback: function(event, ui){
                    Helper.Storage.positionLeftRight = ui.value;
                    Helper.createPage(Helper.Storage.words);
                },
                headerWidthCallback: function(event, ui){
                    Helper.Storage.headerWidth = ui.value;
                    Helper.createPage(Helper.Storage.words);
                },
                footerWidthCallback: function(event, ui){
                    Helper.Storage.footerWidth = ui.value;
                    Helper.createPage(Helper.Storage.words);
                },
                headerUpDownCallback: function(event, ui){
                    Helper.Storage.positionHeaderUpDown = ui.value/10;
                    Helper.createPage(Helper.Storage.words);
                },
                contentUpDownCallback: function(event, ui){
                    Helper.Storage.positionContentUpDown = ui.value;
                    Helper.createPage(Helper.Storage.words);
                },
                contentLeftRightCallback: function(event, ui){
                    Helper.Storage.positionContentLeftRight = ui.value;
                    Helper.createPage(Helper.Storage.words);
                },
                footerUpDownCallback: function(event, ui){
                    Helper.Storage.positionFooterUpDown = ui.value/10;
                    Helper.createPage(Helper.Storage.words);
                }
            });

            Pinyin.init({
                legendTxt: "拼音设置", 
                buttons: [
                    { 
                        id: "show-pinyin-line", 
                        label: "显示拼音", 
                        checked: Helper.Storage.pinyinShow, 
                        name: "show-pinyin-line",
                        // value: "show",
                        callback: function (that) { 
                            Helper.Storage.pinyinShow = $(that).is(":checked");
                            Helper.createPage(Helper.Storage.words);
                        } 
                    },
                    { 
                        id: "show-multi-pinyin", 
                        label: "只显示多音字", 
                        name: "show-multi-pinyin",
                        value: "hide",
                        callback: function (that) { 
                            Util.hide($(that).is(":checked"));
                        } 
                    }
                ], 
                aligns: [
                    {
                        id: "show-align-left",
                        label: "居左",
                        checked: Helper.Storage.pinyinPosition === "left",
                        name: "pinyin-setting-module-show-align",
                        value: "left",
                        callback: function (that) {
                            Helper.Storage.pinyinPosition = $(that).val()
                            Helper.createPage(Helper.Storage.words);
                        }
                    },
                    {
                        id: "show-align-center",
                        label: "居中",
                        checked: Helper.Storage.pinyinPosition === "center",
                        name: "pinyin-setting-module-show-align",
                        value: "center",
                        callback: function (that) {
                            Helper.Storage.pinyinPosition = $(that).val()
                            Helper.createPage(Helper.Storage.words);
                        }
                    },
                    {
                        id: "show-align-right",
                        label: "居右",
                        checked: Helper.Storage.pinyinPosition === "right",
                        name: "pinyin-setting-module-show-align",
                        value: "right",
                        callback: function (that) {
                            Helper.Storage.pinyinPosition = $(that).val()
                            Helper.createPage(Helper.Storage.words);
                        }
                    }
                ],
                pinyinSizeTxt: "拼音大小", 
                longPinyinSizeTxt: "长音大小", 
                lineHeightTxt: "拼音位置",  
                longLineHeightTxt: "长音位置", 
                letterSpacingTxt: "拼音间距", 
                firstColorTxt: "首音颜色", 
                otherColorTxt: "描音颜色", 
                defaultOptions: Helper.Storage
            }, 
            { 
                pinyinFontCallback: function (that) { 
                    Helper.Storage.pinyinFont = $(that).attr("data-url");;
                    Helper.createPage(Helper.Storage.words);
                }, 
                pinyinFontSizeCallback: function (event, ui) { 
                    Helper.Storage.pinyinSize = ui.value;
                    Helper.createPage(Helper.Storage.words);
                }, 
                longPinyinFontSizeCallback: function (event, ui) { 
                    Helper.Storage.longPinyinSize = ui.value;
                    Helper.createPage(Helper.Storage.words);
                },
                lineHeightCallback: function (event, ui) { 
                    Helper.Storage.pinyinLineHeight = ui.value;
                    Helper.createPage(Helper.Storage.words);
                },
                longLineHeightCallback: function (event, ui) { 
                    Helper.Storage.longPinyinLineHeight = ui.value;
                    Helper.createPage(Helper.Storage.words);
                },
                letterSpacingCallback: function (event, ui) { 
                    Helper.Storage.pinyinLetterSpacing = ui.value;
                    Helper.createPage(Helper.Storage.words);
                },
                pinyinFirstPinyinColorCallback: function (that) { 
                    Helper.Storage.firstPinyinColor = $(that).val();
                    Helper.createPage(Helper.Storage.words);
                }, 
                pinyinOtherPinyinColorCallback: function (that) { 
                    Helper.Storage.otherPinyinColor = $(that).attr("data-rgba");
                    Helper.createPage(Helper.Storage.words);
                } 
            });

            PinyinBox.init({
                legendTxt: "音格设置", 
                effectLineTxt: "改哪几线", 
                effectBoxTxt: "改哪几列", 
                boxUploadTxt: "上传格子", 
                tipsTxt: "支持无外框格子", 
                boxOutlineStyleTxt: "外框风格", 
                boxOutlineSizeTxt: "外框粗细", 
                boxOutlineColorTxt: "外框颜色", 
                boxInnerlineSizeTxt: "内框粗细", 
                boxInnerlineColorTxt: "内框颜色", 
                boxInnerlineOpacityTxt: "透明程度", 
                boxInnerlineDasharrayTxt: "虚实间隙", 
                defaultOptions: Helper.Storage
            }, 
            { 
                effectLinesCallback: function (event, ui) { 
                    Helper.Storage.pinyinEffectLines = ui.values;
                }, 
                effectBosesCallback: function (event, ui) { 
                    Helper.Storage.pinyinEffectColumns = ui.values;
                }, 
                boxCallback: function (that) { 
                    Helper.Storage.pinyinBoxCustomImage = '';
                    Helper.Storage.pinyinBoxId = $(that).attr("data-url");
                    Util.updatePinyinBoxArray(Helper.Storage);
                    Helper.createPage(Helper.Storage.words);
                },
                boxUploadCallback: function (that){
                    let ul = $("li[data-url='1']").parent();
                    console.log(ul)
                    let files = $(that)[0].files;
                    let file = files[0];
                    let reader = new FileReader();
                    reader.onload = function(e) {
                        let data = e.target.result;
                        Helper.Storage.pinyinBoxUploadImages.push(data);
                        let customBoxLi = $(`<li data-url="${data}" title="自定义格子" style="width:58px;height: 35px;border:solid 1px #00b050;"><img alt="" style="width:50px;height:15px" src="${data}"></li>`);
                        customBoxLi.click(function(){
                            ul.find('li').removeClass("selected");
                            $(this).addClass("selected");
                            Helper.Storage.pinyinBoxCustomImage = data;
                            Util.updatePinyinBoxArray(Helper.Storage);
                            Helper.createPage(Helper.Storage.words);
                        });
                        customBoxLi.appendTo(ul);
                    };
                    reader.readAsDataURL(file);
                },
                boxOutlineSizeCallback: function (event, ui) { 
                    Helper.Storage.pinyinBoxOutlineSize = ui.value;
                    Util.updatePinyinBoxArray(Helper.Storage);
                    Helper.createPage(Helper.Storage.words);
                }, 
                boxOutlineColorCallback: function (that) { 
                    Helper.Storage.pinyinBoxOutlineColor = $(that).val();
                    Util.updatePinyinBoxArray(Helper.Storage);
                    Helper.createPage(Helper.Storage.words);
                }, 
                borderStyleCallback: function (that) { 
                    Helper.Storage.pinyinBoxOutlineStyle = $(that).attr("data-url");
                    Util.updatePinyinBoxArray(Helper.Storage);
                    Helper.createPage(Helper.Storage.words);
                }, 
                boxInnerlineSizeCallback: function (event, ui) { 
                    Helper.Storage.pinyinBoxInlineSize = ui.value;
                    Util.updatePinyinBoxArray(Helper.Storage);
                    Helper.createPage(Helper.Storage.words);
                }, 
                boxInnerlineColorCallback: function (that) { 
                    Helper.Storage.pinyinBoxInlineColor = $(that).val();
                    Util.updatePinyinBoxArray(Helper.Storage);
                    Helper.createPage(Helper.Storage.words);
                }, 
                boxInnerlineOpacityCallback: function (event, ui) { 
                    Helper.Storage.pinyinBoxInlineOpacity = ui.value;
                    Util.updatePinyinBoxArray(Helper.Storage);
                    Helper.createPage(Helper.Storage.words);
                }, 
                boxInnerlineDasharrayCallback: function (event, ui) { 
                    Helper.Storage.pinyinBoxInlineDashArray = ui.values;
                    Util.updatePinyinBoxArray(Helper.Storage);
                    Helper.createPage(Helper.Storage.words);
                } 
            });

            Font.components = [
                {
                    label: "当前颜色",
                    type: 'color',
                    suffixSelector: '-stroke-current-color',
                    defaultVal: Helper.Storage.currentHanziColor,
                    initVal: '#980F29',
                    callback: function (that){
                        Helper.Storage.currentHanziColor = $(that).val();
                        Helper.createPage(Helper.Storage.words);
                    }
                },
                {
                    label: "笔顺大小",
                    type: 'slider',
                    suffixSelector: '-bishun-size',
                    defaultVal: Helper.Storage.hanziStrokeSize*100,
                    initVal: 65,
                    min: 0,
                    max: 200,
                    style: '20px',
                    callback: function (event, ui){
                        Helper.Storage.hanziStrokeSize = (ui.value / 100);
                        Helper.createPage(Helper.Storage.words);
                    }
                },
                {
                    label: "笔顺左右",
                    type: 'slider',
                    suffixSelector: '-bishun-translateX',
                    defaultVal: Helper.Storage.hanziTranslateX,
                    initVal: 175,
                    min: -300,
                    max: 500,
                    style: '30px',
                    callback: function (event, ui){
                        Helper.Storage.hanziTranslateX = ui.value;
                        Helper.createPage(Helper.Storage.words);
                    }
                },
                {
                    label: "笔顺上下",
                    type: 'slider',
                    suffixSelector: '-bishun-translateY',
                    defaultVal: Helper.Storage.hanziTranslateY,
                    initVal: 800,
                    min: 0,
                    max: 2000,
                    style: '30px',
                    callback: function (event, ui){
                        Helper.Storage.hanziTranslateY = ui.value;
                        Helper.createPage(Helper.Storage.words);
                    }
                }
            ];

            Font.init({
                legendTxt: "汉字设置", 
                buttons: [
                    {
                        id: "show-align-left",
                        label: "居左",
                        checked: Helper.Storage.hanziPosition === "left",
                        name: "word-font-module-show-align",
                        value: "left",
                        callback: function (that) {
                            Helper.Storage.hanziPosition = $(that).val()
                            Helper.createPage(Helper.Storage.words);
                        }
                    },
                    {
                        id: "show-align-center",
                        label: "居中",
                        checked: Helper.Storage.hanziPosition === "center",
                        name: "word-font-module-show-align",
                        value: "center",
                        callback: function (that) {
                            Helper.Storage.hanziPosition = $(that).val()
                            Helper.createPage(Helper.Storage.words);
                        }
                    },
                    {
                        id: "show-align-right",
                        label: "居右",
                        checked: Helper.Storage.hanziPosition === "right",
                        name: "word-font-module-show-align",
                        value: "right",
                        callback: function (that) {
                            Helper.Storage.hanziPosition = $(that).val()
                            Helper.createPage(Helper.Storage.words);
                        }
                    }
                ], 
                sizeTxt: "字体大小", 
                lineHeightTxt: "文字位置", 
                hanziPaddingLeftTxt: "文字左右", 
                firstColorTxt: "首字颜色", 
                otherColorTxt: "描字颜色", 
                defaultOptions: Helper.Storage
            }, 
            { 
                wordFontCallback: function (that) { 
                    Helper.Storage.hanziFont = $(that).attr("data-url");
                    Helper.createPage(Helper.Storage.words);
                }, 
                wordFontSizeCallback: function (event, ui) { 
                    Helper.Storage.hanziSize = ui.value;
                    Helper.createPage(Helper.Storage.words);
                },
                lineHeightCallback: function (event, ui) {
                    Helper.Storage.hanziLineHeight = ui.value;
                    Helper.createPage(Helper.Storage.words);
                },
                hanziPaddingLeftCallback: function(event, ui){
                    Helper.Storage.hanziPaddingLeft = ui.value;
                    Helper.createPage(Helper.Storage.words);
                },
                wordFirstWordColorCallback: function (that) { 
                    Helper.Storage.firstHanziColor = $(that).val();
                    Helper.createPage(Helper.Storage.words);
                }, 
                wordOtherWordColorCallback: function (that) { 
                    Helper.Storage.otherHanziColor = $(that).attr("data-rgba");
                    Helper.createPage(Helper.Storage.words);
                }
            });

            Box.init({
                legendTxt: "汉格设置", 
                effectLineTxt: "改哪几行", 
                effectBoxTxt: "改哪几列", 
                boxUploadTxt: "上传格子", 
                tipsTxt: "支持无外框格子", 
                boxOutlineStyleTxt: "外框风格", 
                boxOutlineSizeTxt: "外框粗细", 
                boxOutlineColorTxt: "外框颜色", 
                axisXTxt: "横线位置",
                axisYTxt: "竖线位置",
                slantUpTxt: "上斜位置",
                slantDownTxt: "下斜位置",
                rectangleXTxt: "长方X点",
                rectangleYTxt: "长方Y点",
                rectangleWidthTxt: "长方形宽",
                rectangleHeightTxt: "长方形高",
                squareXYTxt: "正方XY点",
                squareWidthTxt: "正方形宽",
                boxInnerlineSizeTxt: "内框粗细", 
                boxInnerlineColorTxt: "内框颜色", 
                boxInnerlineOpacityTxt: "透明程度", 
                boxInnerlineDasharrayTxt: "虚实间隙", 
                defaultOptions: Helper.Storage
            }, 
            { 
                effectLinesCallback: function (event, ui) { 
                    Helper.Storage.effectLines = ui.values;
                }, 
                effectBosesCallback: function (event, ui) { 
                    Helper.Storage.effectColumns = ui.values;
                }, 
                boxCallback: function (that) { 
                    Helper.Storage.boxCustomImage = '';
                    Helper.Storage.boxId = $(that).attr("data-url");
                    Util.updateBoxArray(Helper.Storage);
                    Helper.createPage(Helper.Storage.words);
                },
                boxUploadCallback: function (that){
                    let ul = $("li[data-url='11']").parent();
                    let files = $(that)[0].files;
                    let file = files[0];
                    let reader = new FileReader();
                    reader.onload = function(e) {
                        let data = e.target.result;
                        Helper.Storage.boxUploadImages.push(data);
                        let customBoxLi = $(`<li data-url="${data}" title="自定义格子" style="width:58px;height: 50px;padding-top: 8px;border:solid 1px #00b050;"><img alt="" style="width:50px;height:45px" src="${data}"></li>`);
                        customBoxLi.click(function(){
                            ul.find('li').removeClass("selected");
                            $(this).addClass("selected");
                            Helper.Storage.boxCustomImage = data;
                            Util.updateBoxArray(Helper.Storage);
                            Helper.createPage(Helper.Storage.words);
                        });
                        customBoxLi.appendTo(ul);
                    };
                    reader.readAsDataURL(file);
                },
                boxOutlineSizeCallback: function (event, ui) { 
                    Helper.Storage.boxOutlineSize = ui.value;
                    Util.updateBoxArray(Helper.Storage);
                    Helper.createPage(Helper.Storage.words);
                }, 
                boxOutlineColorCallback: function (that) { 
                    Helper.Storage.boxOutlineColor = $(that).val();
                    Util.updateBoxArray(Helper.Storage);
                    Helper.createPage(Helper.Storage.words);
                }, 
                borderStyleCallback: function (that) { 
                    Helper.Storage.boxOutlineStyle = $(that).attr("data-url");
                    Util.updateBoxArray(Helper.Storage);
                    Helper.createPage(Helper.Storage.words);
                }, 
                axisXCallback: function(event, ui){
                    Helper.Storage.axisX = ui.value;
                    Util.updateSvgMap(Helper.Storage);
                    Util.updateBoxArray(Helper.Storage);
                    Helper.createPage(Helper.Storage.words);
                },
                axisYCallback: function(event, ui){
                    Helper.Storage.axisY = ui.value;
                    Util.updateSvgMap(Helper.Storage);
                    Util.updateBoxArray(Helper.Storage);
                    Helper.createPage(Helper.Storage.words);
                },
                slantUpCallback: function(event, ui){
                    Helper.Storage.slantUp = ui.value;
                    Util.updateSvgMap(Helper.Storage);
                    Util.updateBoxArray(Helper.Storage);
                    Helper.createPage(Helper.Storage.words);
                },
                slantDownCallback: function(event, ui){
                    Helper.Storage.slantDown = ui.value;
                    Util.updateSvgMap(Helper.Storage);
                    Util.updateBoxArray(Helper.Storage);
                    Helper.createPage(Helper.Storage.words);
                },
                rectangleXCallback: function(event, ui){
                    Helper.Storage.rectangleX = ui.value;
                    Util.updateSvgMap(Helper.Storage);
                    Util.updateBoxArray(Helper.Storage);
                    Helper.createPage(Helper.Storage.words);
                },
                rectangleYCallback: function(event, ui){
                    Helper.Storage.rectangleY = ui.value;
                    Util.updateSvgMap(Helper.Storage);
                    Util.updateBoxArray(Helper.Storage);
                    Helper.createPage(Helper.Storage.words);
                },
                rectangleWidthCallback: function(event, ui){
                    Helper.Storage.rectangleWidth = ui.value;
                    Util.updateSvgMap(Helper.Storage);
                    Util.updateBoxArray(Helper.Storage);
                    Helper.createPage(Helper.Storage.words);
                },
                rectangleHeightCallback: function(event, ui){
                    Helper.Storage.rectangleHeight = ui.value;
                    Util.updateSvgMap(Helper.Storage);
                    Util.updateBoxArray(Helper.Storage);
                    Helper.createPage(Helper.Storage.words);
                },
                squareXYCallback: function(event, ui){
                    Helper.Storage.squareXY = ui.value;
                    Util.updateSvgMap(Helper.Storage);
                    Util.updateBoxArray(Helper.Storage);
                    Helper.createPage(Helper.Storage.words);
                },
                squareWidthCallback: function(event, ui){
                    Helper.Storage.squareWidth = ui.value;
                    Util.updateSvgMap(Helper.Storage);
                    Util.updateBoxArray(Helper.Storage);
                    Helper.createPage(Helper.Storage.words);
                },
                boxInnerlineSizeCallback: function (event, ui) { 
                    Helper.Storage.boxInlineSize = ui.value;
                    Util.updateBoxArray(Helper.Storage);
                    Helper.createPage(Helper.Storage.words);
                }, 
                boxInnerlineColorCallback: function (that) { 
                    Helper.Storage.boxInlineColor = $(that).val();
                    Util.updateBoxArray(Helper.Storage);
                    Helper.createPage(Helper.Storage.words);
                }, 
                boxInnerlineOpacityCallback: function (event, ui) { 
                    Helper.Storage.boxInlineOpacity = ui.value;
                    Util.updateBoxArray(Helper.Storage);
                    Helper.createPage(Helper.Storage.words);
                }, 
                boxInnerlineDasharrayCallback: function (event, ui) { 
                    Helper.Storage.boxInlineDashArray = ui.values;
                    Util.updateBoxArray(Helper.Storage);
                    Helper.createPage(Helper.Storage.words);
                } 
            });

            Top.components = [
                {
                    label: "笔顺大小",
                    type: 'slider',
                    suffixSelector: '-bishun-size-slider',
                    defaultVal: Helper.Storage.topStrokeOrderSize*100,
                    initVal: 98,
                    min: 0,
                    max: 200,
                    style: '20px',
                    callback: function (event, ui){
                        Helper.Storage.topStrokeOrderSize = (ui.value / 100);
                        Helper.createPage(Helper.Storage.words);
                    }
                }
            ];

            Top.init({
                legendTxt: "行头设置", 
                buttons: [
                    { 
                        id: "show-pinyin", 
                        label: "拼音", 
                        checked: Helper.Storage.topPinyinShow, 
                        callback: function (that) {
                            Helper.Storage.topPinyinShow = $(that).is(":checked");
                            Helper.createPage(Helper.Storage.words);
                        }
                    },
                    { 
                        id: "show-bushou", 
                        label: "部首", 
                        checked: Helper.Storage.topBushouShow, 
                        callback: function (that) {
                            Helper.Storage.topBushouShow = $(that).is(":checked");
                            Helper.createPage(Helper.Storage.words);
                        }
                    },
                    { 
                        id: "show-bishu", 
                        label: "笔数", 
                        checked: Helper.Storage.topBishuShow, 
                        callback: function (that) {
                            Helper.Storage.topBishuShow = $(that).is(":checked");
                            Helper.createPage(Helper.Storage.words);
                        }
                    },
                    { 
                        id: "show-zuci", 
                        label: "组词", 
                        checked: Helper.Storage.topZuciShow, 
                        callback: function (that) {
                            Helper.Storage.topZuciShow = $(that).is(":checked");
                            Helper.createPage(Helper.Storage.words);
                        }
                    },
                    { 
                        id: "show-bishun", 
                        label: "笔顺", 
                        checked: Helper.Storage.topBishunShow, 
                        callback: function (that) {
                            Helper.Storage.topBishunShow = $(that).is(":checked");
                            Helper.createPage(Helper.Storage.words);
                        }
                    }
                ], 
                topLeftWidthTxt: "左侧宽度",
                topLeftFontSizeTxt: "文字大小", 
                topLeftBackgroundColorTxt: "左侧背景", 
                topAnswerBackgroundColorTxt: "答案背景", 
                topAnswerColorTxt: "答案颜色", 
                topRightWidthTxt: "右侧宽度",
                strokerOrderBackgroundColorTxt: "笔顺背景", 
                strokerOrderColorTxt: "笔顺颜色", 
                currentStrokerOrderColorTxt: "当前笔顺", 
                topOutlineSizeTxt: "外框粗细", 
                topOutlineColorTxt: "外框颜色", 
                topOutlineStyleTxt: "外框风格", 
                defaultOptions: Helper.Storage
            }, 
            { 
                topFontCallback: function (that) { 
                    Helper.Storage.topFont = $(that).attr("data-url");
                    Helper.createPage(Helper.Storage.words);
                }, 
                topLeftBackgroundColorCallback: function (that) { 
                    Helper.Storage.topLeftBackgroundColor = $(that).val();
                    Helper.createPage(Helper.Storage.words);
                },  
                topLeftWidthCallback: function(event, ui){
                    Helper.Storage.topLeftWidth = ui.value;
                    Helper.createPage(Helper.Storage.words);
                },
                topLeftFontSizeCallback: function (event, ui) { 
                    Helper.Storage.topSize = ui.value;
                    Helper.createPage(Helper.Storage.words);
                }, 
                topAnswerBackgroundColorCallback: function (that) { 
                    Helper.Storage.topAnswerBackgroundColor = $(that).val();
                    Helper.createPage(Helper.Storage.words);
                }, 
                topAnswerColorCallback: function (that) { 
                    Helper.Storage.topAnswerColor = $(that).val();
                    Helper.createPage(Helper.Storage.words);
                }, 
                topLeftWidthCallback: function(event, ui){
                    Helper.Storage.topLeftWidth = ui.value;
                    Helper.createPage(Helper.Storage.words);
                }, 
                topRightWidthCallback: function(event, ui){
                    Helper.Storage.topRightWidth = ui.value;
                    Helper.createPage(Helper.Storage.words);
                },
                strokerOrderBackgroundColorCallback: function (that) {
                    Helper.Storage.topStrokeOrderBackgroundColor = $(that).val();
                    Helper.createPage(Helper.Storage.words);
                },
                strokerOrderFontSizeCallback: function (event, ui){
                    Helper.Storage.topStrokeOrderSize = (ui.value / 100);
                    Helper.createPage(Helper.Storage.words);
                },
                topStrokerOrderColorCallback: function (that) { 
                    Helper.Storage.topOtherStrokeColor = $(that).val();
                    Helper.createPage(Helper.Storage.words);
                }, 
                topCurrentStrokerOrderColorCallback: function (that) { 
                    Helper.Storage.topCurrentStrokeColor = $(that).val();
                    Helper.createPage(Helper.Storage.words);
                },
                outlineSizeCallback: function (event, ui){
                    Helper.Storage.topOutlineSize = ui.value;
                    Util.updateBoxArray(Helper.Storage);
                    Helper.createPage(Helper.Storage.words);
                },
                outlineColorCallback: function (that){
                    Helper.Storage.topOutlineColor = $(that).val();
                    Util.updateBoxArray(Helper.Storage);
                    Helper.createPage(Helper.Storage.words);
                },
                borderStyleCallback: function (that){
                    Helper.Storage.topOutlineStyle = $(that).attr("data-url");
                    Util.updateBoxArray(Helper.Storage);
                    Helper.createPage(Helper.Storage.words);
                }
            });

            Util.initCommonComponents();
        }

        Helper.init();
    }
};